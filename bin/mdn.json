{
  "accent-color (en-US)": {
    "desc": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements.",
    "grammar": "/* Keyword values */\naccent-color: auto;\n\n/* <color> values */\naccent-color: red;\naccent-color: #5729e9;\naccent-color: rgb(0, 200, 0);\naccent-color: hsl(228, 4%, 24%);\n\n/* Global values */\naccent-color: inherit;\naccent-color: initial;\naccent-color: revert;\naccent-color: revert-layer;\naccent-color: unset;\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "accent-color (en-US)"
  },
  "align-content": {
    "desc": "CSS 的 align-content 属性设置了浏览器如何沿着弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间。 该属性对单行弹性盒子模型无效。（即：带有 flex-wrap: nowrap）。",
    "grammar": "\nstart\n所有行从容器的起始边缘开始填充。\nend\n所有行从容器的结束边缘开始填充。\n\n\nflex-start\n所有行从垂直轴起点开始填充。第一行的垂直轴起点边和容器的垂直轴起点边对齐。接下来的每一行紧跟前一行。\nflex-end\n所有行从垂直轴末尾开始填充。最后一行的垂直轴终点和容器的垂直轴终点对齐。同时所有后续行与前一个对齐。\ncenter\n所有行朝向容器的中心填充。每行互相紧挨，相对于容器居中对齐。容器的垂直轴起点边和第一行的距离相等于容器的垂直轴终点边和最后一行的距离。\nnormal\n这些项按默认位置填充，就像没有设置对齐内容值一样。\n\nbaseline\n first baseline\nlast baseline\n\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nspace-between\n所有行在容器中平均分布。相邻两行间距相等。容器的垂直轴起点边和终点边分别与第一行和最后一行的边对齐。\nspace-around\n所有行在容器中平均分布，相邻两行间距相等。容器的垂直轴起点边和终点边分别与第一行和最后一行的距离是相邻两行间距的一半。\nspace-evenly\n所有行沿垂直轴均匀分布在对齐容器内。每对相邻的项之间的间距，主开始边和第一项，以及主结束边和最后一项，都是完全相同的。\nstretch\n拉伸所有行来填满剩余空间。剩余空间平均地分配给每一行。\nsafe\n与对齐关键字一起使用。如果所选的关键字意味着项溢出对齐容器（data loss），则将采用备用策略对项进行对齐，就像启动了 start 对齐模式一样。\nunsafe\n与对齐关键字一起使用。无论元素和对齐容器的相对大小如何、是否会导致一些元素溢出可见范围（data loss），都使用给定的对齐值。\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "multi-line flex containers",
    "name": "align-content"
  },
  "align-items": {
    "desc": "CSS align-items 属性将所有直接子节点上的 align-self 值设置为一个组。align-self 属性设置项目在其包含块中在交叉轴方向上的对齐方式。 目前，Flexbox 和 CSS 网格布局支持此属性。在 Flexbox 中，它控制十字轴上项目的对齐方式，在网格布局中，它控制块轴上项目的对齐方式。",
    "grammar": "\nnormal\n这个关键字的效果取决于我们处在什么布局模式中：\n \n在绝对定位的布局中，对于被替代的绝对定位盒子，这个效果和start?的效果的一样；对于其他所有绝对定位的盒子，这个效果和stretch的效果一样。 \n在绝对定位布局的静态位置上，效果和stretch一样。\n对于那些弹性项目而言，效果和stretch一样。\n对于那些网格项目而言，效果和stretch一样，除了有部分比例或者一个固定大小的盒子的效果像start。\n这个属性不适用于块级盒子和表格。\n\n\n\n\nflex-start\n元素向侧轴起点对齐。\nflex-end\n元素向侧轴终点对齐。\nstart\nThe item is packed flush to each other toward the start edge of the alignment container in the appropriate axis.\nend\nThe item is packed flush to each other toward the end edge of the alignment container in the appropriate axis.\ncenter\n元素在侧轴居中。如果元素在侧轴上的高度高于其容器，那么在两个方向上溢出距离相同。\nleft\nThe items are packed flush to each other toward the left edge of the alignment container. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nright\nThe items are packed flush to each other toward the right edge of the alignment container in the appropriate axis. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nself-start\nThe items is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis.\nself-end\nThe item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\nbaseline\nfirst baseline\n last baseline\n所有元素向基线对齐。侧轴起点到元素基线距离最大的元素将会于侧轴起点对齐以确定基线。\nstretch\n弹性项包含外边距的交叉轴尺寸被拉升至行高\nsafe\nUsed alongside an alignment keyword. If the chosen keyword means that the item overflows the alignment container causing data loss, the item is instead aligned as if the alignment mode were start.\nunsafe\nUsed alongside an alignment keyword. Regardless of the relative sizes of the item and alignment container and whether overflow which causes data loss might happen, the given alignment value is honored.\n\n语法格式\n\n\nnormal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]where <baseline-position> = [ first | last ]? baseline<overflow-position> = unsafe | safe<self-position> = center | start | end | self-start | self-end | flex-start | flex-end",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "align-items"
  },
  "align-self": {
    "desc": "CSS 属性 align-self 会对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值。In Grid, it aligns the item inside the grid area. 在 Flexbox 中，会按照 cross axis（当前 flex 元素排列方向的垂直方向）进行排列。 align-self 属性不适用于块类型的盒模型和表格单元。如果任何 flexbox 元素的侧轴方向 margin 值设置为 auto，则会忽略 align-self。",
    "grammar": "\nauto\n设置为父元素的 align-items 值。\nnormal\n\n\n效果取决于当前的布局模式：\n\n\n绝对定位布局中，normal 在绝对定位的替代元素上表现为start，在所有其他绝对定位元素上表现为stretch。\n在绝对定位的静态元素上表现为stretch。\nflex 布局中表现为 stretch。\nFor grid items, this keyword leads to a behavior similar to the one of stretch, except for boxes with an aspect ratio or an intrinsic sizes where it behaves like start.\n在块级和表格单元中无效。\n\n\nself-start\nAligns the items to be flush with the edge of the alignment container corresponding to the item's start side in the cross axis.\nself-end\nAligns the items to be flush with the edge of the alignment container corresponding to the item's end side in the cross axis.\nflex-start\nflex 元素会对齐到 cross-axis 的首端。\nflex-end\nflex 元素会对齐到 cross-axis 的尾端。\ncenter\nflex 元素会对齐到 cross-axis 的中间，如果该元素的 cross-size 尺寸大于 flex 容器，将在两个方向均等溢出。\nbaseline\nfirst baseline\nlast baseline\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nflex 元素将会基于容器的宽和高，按照自身 margin box 的 cross-size 拉伸。If the combined size of the items along the cross axis is less than the size of the alignment container and the item is auto-sized, its size is increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size of all auto-sized items exactly fills the alignment container along the cross axis.\nsafe\nIf the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\nunsafe\nRegardless of the relative sizes of the item and alignment container, the given alignment value is honored.\n",
    "name": "align-self"
  },
  "all": {
    "desc": "CSS all 简写属性 将除了 unicode-bidi 与 direction 之外的所有属性重设至其初始值，或继承值。",
    "grammar": "\ninitial\n该关键字代表改变该元素或其父元素的所有属性至初始值。\ninherit\n该关键字代表改变该元素或其父元素的所有属性的值至他们的父元素属性的值。inherited values\nunset\n该关键字代表如果该元素的属性的值是可继承的，则改变该元素或该元素的父元素的所有属性的值为他们父元素的属性值，反之则改变为初始值。\nrevert (en-US)\n指定依赖于声明所属的样式表原点的行为：\n \nUser-agent origin\n相当于 unset\nUser origin\n将层叠回滚到用户代理级别，以便计算指定的值，就好像没有为该元素指定作者级别或用户级别规则。\nAuthor origin\n将层叠回滚到用户级别，以便计算指定的值，就好像没有为元素指定作者级规则。出于revert的目的，“作者”原点包括“覆盖”和“动画”原点。\n\n\n",
    "initial value": "There is no practical initial value for it.",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "all"
  },
  "animation": {
    "desc": "CSS animation 属性是 animation-name，animation-duration, animation-timing-function，animation-delay，animation-iteration-count，animation-direction，animation-fill-mode 和 animation-play-state 属性的一个简写属性形式。",
    "grammar": "animation 属性用来指定一组或多组动画，每组之间用逗号相隔。\n每组动画规定的属性如下：\n\n以下属性出现 0 次或 1 次：\n  \n<single-transition-timing-function> (en-US)\n<single-animation-iteration-count>\n<single-animation-direction>\n<single-animation-fill-mode>\n<single-animation-play-state>\n\n\nanimation 的 name 值可能是：none，<custom-ident>， <string>\n<time> 可能会出现 0、1 或 2 次\n\n每个动画定义中的属性值的顺序很重要：可以被解析为 <time> 的第一个值被分配给animation-duration，第二个分配给 animation-delay。\n每个动画定义中的值的顺序，对于区分 animation-name 值与其他关键字也很重要。解析时，对于除 animation-name 之外的有效的关键字，必须被前面的简写中没有找到值的属性所接受。此外，在序列化时，animation-name 与以及其他属性值做区分等情况下，必须输出其他属性的默认值。",
    "initial value": "as each of the properties of the shorthand:animation-name: noneanimation-duration: 0sanimation-timing-function: easeanimation-delay: 0sanimation-iteration-count: 1animation-direction: normalanimation-fill-mode: noneanimation-play-state: runninganimation-timeline (en-US): auto",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation"
  },
  "animation-delay": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "animation-delay: 3s;\nanimation-delay: 2s, 4ms;\n",
    "initial value": "0s",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-delay"
  },
  "animation-direction": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "Formal syntax:  <single-animation-direction>#where <single-animation-direction> = normal | reverse | alternate | alternate-reverse\n\nanimation-direction: normal\nanimation-direction: reverse\nanimation-direction: alternate\nanimation-direction: alternate-reverse\nanimation-direction: normal, reverse\nanimation-direction: alternate, reverse, normal\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-direction"
  },
  "animation-duration": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "Formal syntax: <time>#\n\nanimation-duration: 6s\nanimation-duration: 120ms\nanimation-duration: 1s, 15s\nanimation-duration: 10s, 30s, 230ms\n",
    "initial value": "0s",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-duration"
  },
  "animation-fill-mode": {
    "desc": "CSS 属性 animation-fill-mode 设置 CSS 动画在执行之前和之后如何将样式应用于其目标。 使用简写属性 animation 一次性设置所有动画属性通常很方便。",
    "grammar": "\nnone\n当动画未执行时，动画将不会将任何样式应用于目标，而是已经赋予给该元素的 CSS 规则来显示该元素。这是默认值。\nforwards\n目标将保留由执行期间遇到的最后一个关键帧计算值。最后一个关键帧取决于animation-direction和animation-iteration-count的值：\n \n\n\nanimation-direction\nanimation-iteration-count\nlast keyframe encountered\n\n\n\n\nnormal\neven or odd\n100% or to\n\n\nreverse\neven or odd\n0% or from\n\n\nalternate\neven\n0% or from\n\n\nalternate\nodd\n100% or to\n\n\nalternate-reverse\neven\n100% or to\n\n\nalternate-reverse\nodd\n0% or from\n\n\n\n\nbackwards\n动画将在应用于目标时立即应用第一个关键帧中定义的值，并在animation-delay期间保留此值。第一个关键帧取决于animation-direction的值：\n \n\n\nanimation-direction\nfirst relevant keyframe\n\n\n\n\nnormal or alternate\n0% or from\n\n\nreverse or alternate-reverse\n100% or to\n\n\n\n\nboth\n动画将遵循forwards和backwards的规则，从而在两个方向上扩展动画属性。\n\n\n注意：当您在animation-*属性上指定多个以逗号分隔的值时，它们将根据值的数量以不同的方式分配给 animation-name 属性中指定的动画。有关更多信息，请参阅设置多个动画属性值。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-fill-mode"
  },
  "animation-iteration-count": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* 值为关键字 */\nanimation-iteration-count: infinite;\n\n/* 值为数字 */\nanimation-iteration-count: 3;\nanimation-iteration-count: 2.4;\n\n/* 指定多个值 */\nanimation-iteration-count: 2, 0, infinite;\n\nanimation-iteration-count 属性可以指定一个或多个以逗号分隔的值。",
    "name": "animation-iteration-count"
  },
  "animation-name": {
    "desc": "animation-name属性指定应用的一系列动画，每个名称代表一个由@keyframes定义的动画序列。/* Single animation */animation-name: none;animation-name: test_05;animation-name: -specific;animation-name: sliding-vertically; /* Multiple animations */animation-name: test1, animation4;animation-name: none, -moz-specific, sliding; /* Global values */animation-name: initialanimation-name: inheritanimation-name: unset使用简写属性animation可以很方便地同时设置所有的动画属性。初始值none适用元素all elements, ::before and ::after pseudo-elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n特殊关键字，表示无关键帧。可以不改变其他标识符的顺序而使动画失效，或者使层叠的动画样式失效。\nIDENT\n标识动画的字符串，由大小写敏感的字母 a-z、数字 0-9、下划线 (_) 和/或横线 (-) 组成。第一个非横线字符必须是字母，数字不能在字母前面，不允许两个横线出现在开始位置。\n\nFormal syntax\n[ none | <keyframes-name> ]#where <keyframes-name> = <custom-ident> | <string>\n\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-name"
  },
  "animation-play-state": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* Single animation */\nanimation-play-state: running;\nanimation-play-state: paused;\n\n/* Multiple animations */\nanimation-play-state: paused, running, running;\n\n/* Global values */\nanimation-play-state: inherit;\nanimation-play-state: initial;\nanimation-play-state: unset;\n",
    "initial value": "running",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-play-state"
  },
  "animation-timeline (en-US)": {
    "desc": "The animation-timeline CSS property specifies the names of one or more @scroll-timeline at-rules describing the scroll animations to apply to the element.It is often convenient to use the shorthand property animation to set all animation properties at once.",
    "grammar": "\nauto\n\nThe animation's timeline is the document's default DocumentTimeline.\n\nnone\n\nThe animation is not associated with a timeline.\n\n<timeline-name>\n\nA <custom-ident> or string identifying the scroll timeline, declared with the @scroll-timeline rule. If two or more scroll timelines share the same name, the last declared within the cascade will be used. If no matching scroll timeline is found, the animation is not associated with a timeline.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "animation-timeline (en-US)"
  },
  "animation-timing-function": {
    "desc": "",
    "grammar": "",
    "initial value": "ease",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "animation-timing-function"
  },
  "appearance": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。在基于 Gecko 的浏览器（如 Firefox）中，-moz-appearance CSS 属性被用于按照 浏览器所在的操作系统所用主题，以平台本地的样式显示元素。在基于 WebKit 的浏览器（如 Safari）和基于 Blink 的浏览器（如 Chrome, Opera）中，-webkit-appearance 属性被用于达到相同 to achieve the same thing. Note that Edge also supports -webkit-appearance (instead of -ms-appearance) for compatibility reasons./* 在 Gecko 中可用的部分值 */-moz-appearance: none;-moz-appearance: button;-moz-appearance: checkbox;-moz-appearance: scrollbarbutton-up; /* 在 WebKit/Blink 中可用的部分值 */-webkit-appearance: none;-webkit-appearance: button;-webkit-appearance: checkbox;-webkit-appearance: scrollbarbutton-up; 这个属性经常用在 XUL 的样式表中，用来设计拥有平台原生 UI 样式的自定义的组件，也用于 XBL 之中以实现 Mozilla 平台的组件。 兼容性提示：如果您想在网站上使用此属性，您应非常小心地测试它。尽管在大部分现代浏览器中它是被支持的，它的实现差别很大。在版本较旧的浏览器中，即使是 none 也会在不同浏览器中产生差别，而且一些浏览器完全不支持这个属性。在版本较新的浏览器中这些差距会更小一些。 初始值none适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "<appearance> 是其中的一个关键字：\n\n\n\nValue\nDemo\nBrowser\nDescription\n\n\nnone\n\n\nAll\n不应用任何特殊样式。这是未定义元素的默认值。旧版翻译中的信息：但是，有这两个 BUG： bug 649849 和 bug 605985。\n\n\nbutton\n\n\nFirefox Chrome\n此元素将被作为按钮来绘制。\n\n\nbutton-arrow-down\n\n\nFirefox\n \n\n\nbutton-arrow-next\n\n\nFirefox\n \n\n\nbutton-arrow-previous\n\n\nFirefox\n \n\n\nbutton-arrow-up\n\n\nFirefox\n \n\n\nbutton-bevel\n\n\nFirefox Chrome\n \n\n\n \n \n \n \n\n\nbutton-focus\n\n\nFirefox\n \n\n\ncaret\n\n\nFirefox Chrome\n \n\n\ncheckbox\n\n\nFirefox Chrome\n此元素将被作为复选框绘制，仅包括实际的 \"checkbox\" 部分。\n\n\ncheckbox-container\n\n\nFirefox\n此元素将被作为复选框容器绘制，可在相应的平台下带有高亮样式。一般情况下，它会包含一个标签（label）与一个复选框。\n\n\ncheckbox-label\n\n\nFirefox\n \n\n\ncheckmenuitem\n\n\nFirefox\n \n\n\ndualbutton\n\n\nFirefox\n \n\n\ngroupbox\n\n\nFirefox\n \n\n\ninner-spin-button\n \nChrome\n \n\n\nlistbox\n\n\nFirefox Chrome\n \n\n\nlistitem\n\n\nFirefox Chrome\n \n\n\nmedia-enter-fullscreen-button\n \nChrome\n \n\n\nmedia-exit-fullscreen-button\n \nChrome\n \n\n\nmedia-mute-button\n \nChrome\n \n\n\nmedia-play-button\n \nChrome\n \n\n\nmedia-overlay-play-button\n \nChrome\n \n\n\nmedia-toggle-closed-captions-button\n \nChrome\n \n\n\nmedia-slider\n \nChrome\n \n\n\nmedia-sliderthumb\n \nChrome\n \n\n\nmedia-volume-slider-container\n \nChrome\n \n\n\nmedia-volume-slider\n \nChrome\n \n\n\nmedia-volume-sliderthumb\n \nChrome\n \n\n\nmedia-controls-background\n \nChrome\n \n\n\nmedia-controls-fullscreen-background\n \nChrome\n \n\n\nmedia-current-time-display\n \nChrome\n \n\n\nmedia-time-remaining-display\n \nChrome\n \n\n\nmenuarrow\n\n\nFirefox\n \n\n\nmenubar\n\n\nFirefox\n \n\n\nmenucheckbox\n\n\nFirefox\n \n\n\nmenuimage\n\n\nFirefox\n \n\n\nmenuitem\n\n\nFirefox\n此元素将被作为菜单项绘制，鼠标覆盖时会带有高亮效果。\n\n\nmenuitemtext\n\n\nFirefox\n \n\n\nmenulist\n\n\nFirefox Chrome\n \n\n\nmenulist-button\n\nmenulist-button\n\n\nFirefox Chrome\n此元素将被绘制为显示一个下拉菜单可以打开的按钮。\n\n\nmenulist-text\n\n\nFirefox Chrome\n \n\n\nmenulist-textfield\n\n\nFirefox Chrome\n这个元素将被作为菜单列表中的文本框绘制。（未在 Windows 平台下实现）\nmenupopup\n\n\nFirefox\n \n\n\nmenuradio\n\n\nFirefox\n \n\n\nmenuseparator\n\n\nFirefox\n \n\n\nmeter\n \nChrome\n \n\n\nmeterbar\n\n\nFirefox\nNew in Fx 16.\n\n\nmeterchunk\n\n\nFirefox\nNew in Fx 16\n\n\nprogress-bar\n \nChrome\n \n\n\nprogress-bar-value\n \nChrome\n \n\n\nprogressbar\n\n\nFirefox\nThe element is styled like a progress bar.\n\n\nprogressbar-vertical\n\n\nFirefox\n \n\n\nprogresschunk\n\n\nFirefox\n \n\n\nprogresschunk-vertical\n\n\nFirefox\n \n\n\npush-button\n \nChrome\n \n\n\nradio\n\n\nFirefox Chrome\n\n这个元素将被作为单选框绘制，仅包括实际的\"radio button\"部分。\n\n\nradio-container\n\n\nFirefox\n这个元素将被作为单选框容器绘制，并且可在相应平台下带有高亮样式。一般情况下，它会包含一个标签（label）与一个单选框。\n\n\nradio-label\n\n\nFirefox\n \n\n\nradiomenuitem\n\n\nFirefox\n \n\n\nrange\n\n\nFirefox\n \n\n\nrange-thumb\n\n\nFirefox\n \n\n\nresizer\n\n\nFirefox\n \n\n\nresizerpanel\n\n\nFirefox\n \n\n\nscale-horizontal\n\n\nFirefox\n \n\n\nscalethumbend\n\n\nFirefox\n \n\n\nscalethumb-horizontal\n\n\nFirefox\n \n\n\nscalethumbstart\n\n\nFirefox\n \n\n\nscalethumbtick\n\n\nFirefox\n \n\n\nscalethumb-vertical\n\n\nFirefox\n \n\n\nscale-vertical\n\n\nFirefox\n \n\n\nscrollbarbutton-down\n\n\nFirefox\n \n\n\nscrollbarbutton-left\n\n\nFirefox\n \n\n\nscrollbarbutton-right\n\n\nFirefox\n \n\n\nscrollbarbutton-up\n\n\nFirefox\n \n\n\nscrollbarthumb-horizontal\n\n\nFirefox\n \n\n\nscrollbarthumb-vertical\n\n\nFirefox\n \n\n\nscrollbartrack-horizontal\n\n\nFirefox\n \n\n\nscrollbartrack-vertical\n\n\nFirefox\n \n\n\nsearchfield\n\n\nFirefox Chrome\n \n\n\nsearchfield-cancel-button\n \nChrome\n \n\n\nseparator\n\n\nFirefox\n \n\n\nsheet\n\n\nFirefox\n \n\n\nslider-horizontal\n \nChrome\n \n\n\nslider-vertical\n \nChrome\n \n\n\nsliderthumb-horizontal\n \nChrome\n \n\n\nsliderthumb-vertical\n \nChrome\n \n\n\nspinner\n\n\nFirefox\n \n\n\nspinner-downbutton\n\n\nFirefox\n \n\n\nspinner-textfield\n\n\nFirefox\n \n\n\nspinner-upbutton\n\n\nFirefox\n \n\n\nsplitter\n\n\nFirefox\n \n\n\nsquare-button\n \nChrome\n \n\n\nstatusbar\n\n\nFirefox\n \n\n\nstatusbarpanel\n\n\nFirefox\n \n\n\ntab\n\n\nFirefox\n \n\n\ntabpanel\n\n\nFirefox\n \n\n\ntabpanels\n\n\nFirefox\n \n\n\ntab-scroll-arrow-back\n\n\nFirefox\n \n\n\ntab-scroll-arrow-forward\n\n\nFirefox\n \n\n\ntextarea\n \nChrome\n \n\n\ntextfield\n\n\nFirefox Chrome\n \n\n\ntextfield-multiline\n\n\nFirefox\n \n\n\ntoolbar\n\n\nFirefox\n \n\n\ntoolbarbutton\n\n\nFirefox\n \n\n\ntoolbarbutton-dropdown\n\n\nFirefox\n \n\n\ntoolbargripper\n\n\nFirefox\n \n\n\ntoolbox\n\n\nFirefox\n \n\n\ntooltip\n\n\nFirefox\n \n\n\ntreeheader\n\n\nFirefox\n \n\n\ntreeheadercell\n\n\nFirefox\n \n\n\ntreeheadersortarrow\n\n\nFirefox\n \n\n\ntreeitem\n\n\nFirefox\n \n\n\ntreeline\n\n\nFirefox\n \n\n\ntreetwisty\n\n\nFirefox\n \n\n\ntreetwistyopen\n\n\nFirefox\n \n\n\ntreeview\n\n\nFirefox\n \n\n\n-moz-win-borderless-glass\n\n\nFirefox\nWindows Vista and later only. This style applies the Aero Glass effect -- but without a border -- to the element.\n\n\n-moz-win-browsertabbar-toolbox\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。这个样式会将磨砂玻璃（Aero Glass）样式（但是不含边框）应用到元素上。\n\n\n-moz-win-browsertabbar-toolbox\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。此工具栏样式主要被用于浏览器的标签栏。\n\n\n-moz-win-communicationstext\n\n\nFirefox\n \n\n\n-moz-win-communications-toolbox\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。此工具栏样式是为了用于通讯和生产方面的应用程序，与之对应的前景色为 -moz-win-communicationstext。\n\n\n-moz-win-exclude-glass\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。此样式被用于取消元素的磨砂玻璃效果。\n\n\n-moz-win-glass\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。这个样式会将磨砂玻璃（Aero Glass）样式（但是不含边框）应用到元素上。\n\n\n-moz-win-mediatext\n\n\nFirefox\n \n\n\n \n \n \n \n\n\n-moz-win-media-toolbox\n\n\nFirefox\n仅支持 Vista 及更高版本的 Windows 系统。此工具栏样式主要用于管理媒体对象。与之对应的前景色为 -moz-win-mediatext。\n\n\n-moz-window-button-box\n\n\nFirefox\n \n\n\n-moz-window-button-box-maximized\n\n\nFirefox\n \n\n\n-moz-window-button-close\n\n\nFirefox\n \n\n\n-moz-window-button-maximize\n\n\nFirefox\n \n\n\n-moz-window-button-minimize\n\n\nFirefox\n \n\n\n-moz-window-button-restore\n\n\nFirefox\n \n\n\n-moz-window-frame-bottom\n\n\nFirefox\n \n\n\n-moz-window-frame-left\n\n\nFirefox\n \n\n\n-moz-window-frame-right\n\n\nFirefox\n \n\n\n-moz-window-titlebar\n\n\nFirefox\n \n\n\n-moz-window-titlebar-maximized\n\n\nFirefox\n \n\n\n-apple-pay-button\n \n \niOS and macOS only. Available on the web starting in iOS 10.1 and macOS 10.12.1\n\n\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "appearance"
  },
  "aspect-ratio": {
    "desc": "aspect-ratio CSS 属性为 box 容器规定了一个期待的纵横比，这个纵横比可以用来计算自动尺寸以及为其他布局函数服务。aspect-ratio: 1 / 1; /* 全局值 */aspect-ratio: inherit;aspect-ratio: initial;aspect-ratio: unset;",
    "grammar": "初始值auto适用元素all elements except inline boxes and internal ruby or table boxes是否是继承属性否计算值as specifiedAnimation typediscrete",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements except inline boxes and internal ruby or table boxes",
    "name": "aspect-ratio"
  },
  "backdrop-filter": {
    "desc": "backdrop-filter CSS 属性可以让你为一个元素后面区域添加图形效果（如模糊或颜色偏移）。因为它适用于元素背后的所有元素，为了看到效果，必须使元素或其背景至少部分透明。/* 关键词值 */backdrop-filter: none; /* 指向 SVG 滤镜的 URL */backdrop-filter: url(commonfilters.svg#filter); /* <filter-function> 滤镜函数值 */backdrop-filter: blur(2px);backdrop-filter: brightness(60%);backdrop-filter: contrast(40%);backdrop-filter: drop-shadow(4px 4px 10px blue);backdrop-filter: grayscale(30%);backdrop-filter: hue-rotate(120deg);backdrop-filter: invert(70%);backdrop-filter: opacity(20%);backdrop-filter: sepia(90%);backdrop-filter: saturate(80%); /* 多重滤镜 */backdrop-filter: url(filters.svg#filter) blur(4px) saturate(150%); /* 全局值 */backdrop-filter: inherit;backdrop-filter: initial;backdrop-filter: revert;backdrop-filter: unset;",
    "grammar": "\nnone\n\n没有应用于背景的滤镜。\n\n<filter-function-list>\n\n一个以空格分隔的滤镜函数（<filter-function>）或是要应用到背景上的 SVG 滤镜。\n\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "backdrop-filter"
  },
  "backface-visibility": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 backface-visibility 指定当元素背面朝向观察者时是否可见。 元素的背面是其正面的镜像。虽然在 2D 中不可见，但是当变换导致元素在 3D 空间中旋转时，背面可以变得可见。 （此属性对 2D 变换没有影响，它没有透视。）",
    "grammar": "\nvisible\n背面朝向用户时可见。\nhidden\n背面朝向用户时不可见。\n",
    "initial value": "visible",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "backface-visibility"
  },
  "background": {
    "desc": "background 是一种 CSS 简写属性，用于一次性集中定义各种背景属性，包括 color, image, origin 与 size, repeat 方式等等。 此属性是一个 简写属性，可以在一次声明中定义一个或多个属性：background-clip、background-color、background-image、background-origin、background-position、background-repeat、background-size，和 background-attachment。对于所有简写属性，任何没有被指定的值都会被设定为它们的 初始值。",
    "grammar": "下面的一个或多个值，可以按任意顺序放置：\n\n\"><attachment>\n参见 background-attachment\n\"><box>\n参见 background-clip 和 background-origin\n\"><background-color>\n参见 background-color\n\"><bg-image>\n参见 background-image\n\"><position>\n参见 background-position\n\"><repeat-style>\n参见 background-repeat\n\"><bg-size>\n参见 background-size。\n",
    "name": "background"
  },
  "background-attachment": {
    "desc": "background-attachment CSS 属性决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动。",
    "grammar": "\nfixed\n此关键属性值表示背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动。\nlocal\n此关键属性值表示背景相对于元素的内容固定。如果一个元素拥有滚动机制，背景将会随着元素的内容滚动，并且背景的绘制区域和定位区域是相对于可滚动的区域而不是包含他们的边框。\nscroll\n此关键属性值表示背景相对于元素本身固定，而不是随着它的内容滚动（对元素边框是有效的）。\n\n标准语法\n\n\n<attachment>#where <attachment> = scroll | fixed | local",
    "initial value": "scroll",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-attachment"
  },
  "background-blend-mode": {
    "desc": "",
    "grammar": "Formal syntax:  <blend-mode>#where <blend-mode> = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity\n/* 单值 */\nbackground-blend-mode: normal;\n\n/* 双值，每个背景一个值 */\nbackground-blend-mode: darken, luminosity;\n\nbackground-blend-mode: initial;\nbackground-blend-mode: inherit;\nbackground-blend-mode: unset;\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.. It also applies to ::first-letter and ::first-line.",
    "name": "background-blend-mode"
  },
  "background-clip": {
    "desc": "background-clip 设置元素的背景（背景图片或颜色）是否延伸到边框、内边距盒子、内容盒子下面。 如果没有设置背景图片（background-image）或背景颜色（background-color），那么这个属性只有在边框（ border）被设置为非固实（soild）、透明或半透明时才能看到视觉效果（与 border-style 或 border-image 有关），否则，本属性产生的样式变化会被边框覆盖。",
    "grammar": "\nborder-box\n背景延伸至边框外沿（但是在边框下层）。\npadding-box\n背景延伸至内边距（padding）外沿。不会绘制到边框处。\ncontent-box\n背景被裁剪至内容区（content box）外沿。\ntext \nExperimental\n\n背景被裁剪成文字的前景色。\n",
    "initial value": "border-box",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-clip"
  },
  "background-color": {
    "desc": "",
    "grammar": "/* Keyword values */\nbackground-color: red;\n\n/* Hexadecimal value */\nbackground-color: #bbff00;\n\n/* RGB value */\nbackground-color: rgb(255, 255, 128);\n\n/* HSLA value */\nbackground-color: hsla(50, 33%, 25%, 0.75);\n\n/* Special keyword values */\nbackground-color: currentColor;\nbackground-color: transparent;\n\n/* Global values */\nbackground-color: inherit;\nbackground-color: initial;\nbackground-color: unset;\n\n\nbackground-color 属性只能使用 <color> 值。\n",
    "initial value": "transparent",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-color"
  },
  "background-image": {
    "desc": "CSS background-image 属性用于为一个元素设置一个或者多个背景图像。 在绘制时，图像以 z 方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像“最接近用户”。然后元素的边框 border 会在它们之上被绘制，而 background-color 会在它们之下绘制。图像的绘制与盒子以及盒子的边框的关系，需要在 CSS 属性background-clip 和 background-origin 中定义。如果一个指定的图像无法被绘制 (比如，被指定的 URI 所表示的文件无法被加载)，浏览器会将此情况等同于其值被设为 none。注意： 即使图像是不透明的，背景色在通常情况下并不会被显示，web 开发者仍然应该指定 background-color 属性。如果图像无法被加载—例如，在网络连接断开的情况下—背景色就会被绘制。",
    "grammar": "\nnone\n是一个表示无背景图的关键字。\n<image>\n<image> 用来标记将要显示的图片。支持多背景设置，背景之间以逗号隔开。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-image"
  },
  "background-origin": {
    "desc": "",
    "grammar": "Formal syntax: <box>#where <box> = border-box | padding-box | content-box\nbackground-origin: border-box\nbackground-origin: padding-box\nbackground-origin: content-box\n\nbackground-origin: inherit\n",
    "initial value": "padding-box",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-origin"
  },
  "background-position": {
    "desc": "The background-position CSS 属性为每一个背景图片设置初始位置。这个位置是相对于由 background-origin 定义的位置图层的。",
    "grammar": "/* Keyword values */\nbackground-position: top;\nbackground-position: bottom;\nbackground-position: left;\nbackground-position: right;\nbackground-position: center;\n\n/* <percentage> values */\nbackground-position: 25% 75%;\n\n/* <length> values */\nbackground-position: 0 0;\nbackground-position: 1cm 2cm;\nbackground-position: 10ch 8em;\n\n/* Multiple images */\nbackground-position: 0 0, center;\n\n/* Edge offsets values */\nbackground-position: bottom 10px right 20px;\nbackground-position: right 3em bottom 10px;\nbackground-position: bottom 10px right;\nbackground-position: top right 10px;\n\n/* Global values */\nbackground-position: inherit;\nbackground-position: initial;\nbackground-position: revert;\nbackground-position: unset;\n\nbackground-position 属性被指定为一个或多个 <position> 值，用逗号隔开。",
    "initial value": "0% 0%",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-position"
  },
  "background-position-x": {
    "desc": "",
    "grammar": "/* Keyword values */\nbackground-position-x: left;\nbackground-position-x: center;\nbackground-position-x: right;\n\n/* <percentage> values */\nbackground-position-x: 25%;\n\n/* <length> values */\nbackground-position-x: 0px;\nbackground-position-x: 1cm;\nbackground-position-x: 8em;\n\n/* side-relative values */\nbackground-position-x: right 3px;\nbackground-position-x: left 25%;\n\n/* Multiple values */\nbackground-position-x: 0px, center;\n\n/* Global values */\nbackground-position-x: inherit;\nbackground-position-x: initial;\nbackground-position-x: unset;\n",
    "initial value": "0%",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "background-position-x"
  },
  "background-position-y": {
    "desc": "",
    "grammar": "",
    "initial value": "0%",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "background-position-y"
  },
  "background-repeat": {
    "desc": "background-repeat CSS 属性定义背景图像的重复方式。背景图像可以沿着水平轴，垂直轴，两个轴重复，或者根本不重复。",
    "grammar": "/* 单值语法 */\nbackground-repeat: repeat-x;\nbackground-repeat: repeat-y;\nbackground-repeat: repeat;\nbackground-repeat: space;\nbackground-repeat: round;\nbackground-repeat: no-repeat;\n\n/* 双值语法: 水平horizontal | 垂直vertical */\nbackground-repeat: repeat space;\nbackground-repeat: repeat repeat;\nbackground-repeat: round space;\nbackground-repeat: no-repeat round;\n\nbackground-repeat: inherit;",
    "name": "background-repeat"
  },
  "background-size": {
    "desc": "background-size 设置背景图片大小。图片可以保有其原有的尺寸，或者拉伸到新的尺寸，或者在保持其原有比例的同时缩放到元素的可用空间的尺寸。",
    "grammar": "单张图片的背景大小可以使用以下三种方法中的一种来规定：\n\n使用关键词 contain\n使用关键词 cover\n设定宽度和高度值\n\n当通过宽度和高度值来设定尺寸时，你可以提供一或者两个数值：\n\n如果仅有一个数值被给定，这个数值将作为宽度值大小，高度值将被设定为auto。\n如果有两个数值被给定，第一个将作为宽度值大小，第二个作为高度值大小。\n\n每个值可以是<length>, 是 <percentage>, 或者 auto.\n\n 示例：\nbackground-size: contain;\n\nbackground-size: 50%;\nbackground-size: 3em;\n\nbackground-size: auto 1em;\nbackground-size: 50% 25%;\n\n 为了设定超过一张以上的图片尺寸时，需要提供多项数值，它们通过逗号分隔。\nbackground-size: 50% 25%, contain, 3em;",
    "initial value": "auto auto",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "background-size"
  },
  "block-size": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 的 block-size 属性定义了元素区块的水平宽度和垂直高度，也就是width或height属性，它们的大小取决于写入模式，即writing-mode的值。",
    "grammar": "",
    "name": "block-size"
  },
  "border": {
    "desc": "",
    "grammar": "\n和所有的简写属性一样，如果有缺省值会被设置成对应属性的初始值。同时需要注意设置 border 对border-image属性的影响，虽然 border 属性不能设置这个属性，但会把该属性重置为初始值 none。这使得我们可以用 border 属性去重置整个样式表中的 border 设置。因为 W3C 计划在未来的标准中保留该属性，因此建议使用该属性重置边框设定。\n\n注意： 虽然border-width,、border-style和 border-color 简写属性接受最多 4 个参数来为不同的边设置宽度、风格和颜色，但 boder 属性只接受三个参数，分别是宽度、风格和颜色，所以这样会使得四条边的边框相同。\n",
    "name": "border"
  },
  "border-block": {
    "desc": "该CSS属性是一个简写属性在样式表一个单一的地方设置单独的逻辑块边界属性值。border-blockborder-block: 1px;border-block: 2px dotted;border-block: medium dashed blue; border-block can be used to set the values for one or more of border-block-width (en-US), border-block-style (en-US), and border-block-color (en-US) setting both the start and end in the block dimension at once. The physical borders to which it maps depends on the element's writing mode, directionality, and text orientation. It corresponds to the border-top and border-bottom or border-right, and border-left properties depending on the values defined for writing-mode, direction, and text-orientation.The borders in the other dimension can be set with border-inline (en-US), which sets border-inline-start (en-US), and border-inline-end (en-US).",
    "grammar": "",
    "initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "border-block"
  },
  "border-block-color (en-US)": {
    "desc": "The border-block-color CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "border-block-color: yellow;\nborder-block-color: #F5F6F7;\n\n/* Global values */\nborder-block-color: inherit;\nborder-block-color: initial;\nborder-block-color: revert;\nborder-block-color: revert-layer;\nborder-block-color: unset;\n",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-color (en-US)"
  },
  "border-block-end": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。border-block-end 属性是一个简写属性，用于在样式表中的单个位置设置各个逻辑块结尾边界属性值。",
    "grammar": "The border-block-end is specified with one or more of the following, in any order:\n\n<'border-width'>\nThe width of the border. See border-width.\n<'border-style'>\nThe line style of the border. See border-style.\n<'color'>\nThe color of the border. See color.\n",
    "initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "border-block-end"
  },
  "border-block-end-color (en-US)": {
    "desc": "The border-block-end-color CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "border-block-end-color: yellow;\nborder-block-end-color: #F5F6F7;\n\n/* Global values */\nborder-block-end-color: inherit;\nborder-block-end-color: initial;\nborder-block-end-color: revert;\nborder-block-end-color: revert-layer;\nborder-block-end-color: unset;\n\nRelated properties are border-block-start-color, border-inline-start-color, and border-inline-end-color, which define the other border colors of the element.",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-end-color (en-US)"
  },
  "border-block-end-style (en-US)": {
    "desc": "The border-block-end-style CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-block-end-style: dashed;\nborder-block-end-style: dotted;\nborder-block-end-style: groove;\n\n/* Global values */\nborder-block-end-style: inherit;\nborder-block-end-style: initial;\nborder-block-end-style: revert;\nborder-block-end-style: revert-layer;\nborder-block-end-style: unset;\n\nRelated properties are border-block-start-style, border-inline-start-style, and border-inline-end-style, which define the other border styles of the element.",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-end-style (en-US)"
  },
  "border-block-end-width (en-US)": {
    "desc": "The border-block-end-width CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-block-end-width: 5px;\nborder-block-end-width: thick;\n\n/* Global values */\nborder-block-end-width: inherit;\nborder-block-end-width: initial;\nborder-block-end-width: revert;\nborder-block-end-width: revert-layer;\nborder-block-end-width: unset;\n\nRelated properties are border-block-start-width, border-inline-start-width, and border-inline-end-width, which define the other border widths of the element.",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-end-width (en-US)"
  },
  "border-block-start (en-US)": {
    "desc": "The border-block-start CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nborder-block-start-color\nborder-block-start-style\nborder-block-start-width\n",
    "initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-start (en-US)"
  },
  "border-block-start-color (en-US)": {
    "desc": "The border-block-start-color CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "border-block-start-color: blue;\nborder-block-start-color: #4c5d21;\n\n/* Global values */\nborder-block-start-color: inherit;\nborder-block-start-color: initial;\nborder-block-start-color: revert;\nborder-block-start-color: revert-layer;\nborder-block-start-color: unset;\n\nRelated properties are border-block-end-color, border-inline-start-color, and border-inline-end-color, which define the other border colors of the element.",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-start-color (en-US)"
  },
  "border-block-start-style (en-US)": {
    "desc": "The border-block-start-style CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-block-start-style: dashed;\nborder-block-start-style: dotted;\nborder-block-start-style: groove;\n\n/* Global values */\nborder-block-start-style: inherit;\nborder-block-start-style: initial;\nborder-block-start-style: revert;\nborder-block-start-style: revert-layer;\nborder-block-start-style: unset;\n\nRelated properties are border-block-end-style, border-inline-start-style, and border-inline-end-style, which define the other border styles of the element.",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-start-style (en-US)"
  },
  "border-block-start-width (en-US)": {
    "desc": "The border-block-start-width CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-block-start-width: 5px;\nborder-block-start-width: thick;\n\n/* Global values */\nborder-block-start-width: inherit;\nborder-block-start-width: initial;\nborder-block-start-width: revert;\nborder-block-start-width: revert-layer;\nborder-block-start-width: unset;\n\nRelated properties are border-block-end-width, border-inline-start-width, and border-inline-end-width, which define the other border widths of the element.Initial valuemediumApplies toall elementsInheritednoPercentageslogical-width of containing blockComputed valueabsolute length; 0 if the border style is none or hiddenAnimation typea length",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-start-width (en-US)"
  },
  "border-block-style (en-US)": {
    "desc": "The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-block-style: dashed;\nborder-block-style: dotted;\nborder-block-style: groove;\n\n/* Global values */\nborder-block-style: inherit;\nborder-block-style: initial;\nborder-block-style: revert;\nborder-block-style: revert-layer;\nborder-block-style: unset;\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-style (en-US)"
  },
  "border-block-width (en-US)": {
    "desc": "The border-block-width CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-block-width: 5px;\nborder-block-width: thick;\n\n/* Global values */\nborder-block-width: inherit;\nborder-block-width: initial;\nborder-block-width: revert;\nborder-block-width: revert-layer;\nborder-block-width: unset;\n",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-block-width (en-US)"
  },
  "border-bottom": {
    "desc": "border-bottom 简写属性把下边框的所有属性：border-bottom-color，border-bottom-style 与 border-bottom-width 设置到了一个声明中。这些属性描述了元素的下边框样式。 与所有的简记属性相同， border-bottom 定义了它所有可以定义的属性，即使他们并没有被显式地定义。它把所有未被显式定义的参数都设置为了默认值，这意味着这些值将被定义为：border-bottom-style: dotted;border-bottom: thick green;它和以下的代码是等价的：border-bottom-style: dotted;border-bottom: none thick green;顺便一提，在 border-bottom 之前定义的 border-bottom-style 的值因此被忽略了。由于 border-bottom-style 并没有默认值，未被定义的 border-style 参数的值将被设置为 none，也就是无底边框。",
    "grammar": "\n<br-width> \n见 border-bottom-width。\n<br-style> \n见 border-bottom-style。\n<color>\n见 border-bottom-color。\n",
    "name": "border-bottom"
  },
  "border-bottom-color": {
    "desc": "",
    "grammar": "border-bottom-color: yellow;\nborder-bottom-color: #F5F6F7;\n",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-bottom-color"
  },
  "border-bottom-left-radius": {
    "desc": "",
    "grammar": "/* 圆形 */\n/* border-bottom-left-radius: radius */\nborder-bottom-left-radius: 3px;\n\n/* 椭圆形 */\n/* border-bottom-left-radius: 水平方向 垂直方向 */\nborder-bottom-left-radius: 0.5em 1em;\n\nborder-bottom-left-radius: inherit;\n\n\nwhere:\n\nradius\nIs a <length> or a <percentage> denoting the radius of the circle to use for the border in that corner.\nhorizontal\nIs a <length> or a <percentage> denoting the horizontal semi-major axis of the ellipsis to use for the border in that corner.\nvertical\nIs a <length> or a <percentage> denoting the vertical semi-major axis of the ellipsis to use for the border in that corner.\n\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-bottom-left-radius"
  },
  "border-bottom-right-radius": {
    "desc": "The border-bottom-right-radius CSS property sets the rounding of the bottom-right corner of the element./* The corner is a circle *//* border-bottom-right-radius: radius */border-bottom-right-radius: 3px; /* Percentage values */border-bottom-right-radius: 20%; /* corner of a circle if box is a square or else corner of a rectangle */border-bottom-right-radius: 20% 20%; /* same as above */ /* 20% of horizontal(width) and vertical(height) */border-bottom-right-radius: 20% 10%; /* 20% of horizontal(width) and 10% of vertical(height) */ /*The corner is an ellipsis *//* border-bottom-right-radius: horizontal vertical */border-bottom-right-radius: 0.5em 1em; border-bottom-right-radius: inherit;The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square. A background, being an image or a color, is clipped at the border, even a rounded one; the exact location of the clipping is defined by the value of the background-clip property.If the value of this property is not set in a border-radius shorthand property that is applied to the element after the border-bottom-right-radius CSS property, the value of this property is then reset to its initial value by the shorthand property.初始值0适用元素all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.是否是继承属性否Percentagesrefer to the corresponding dimension of the border box计算值two absolute lengths or percentagesAnimation typea length, percentage or calc();",
    "grammar": "\n<length-percentage>\nDenotes the size of the circle radius or the semi-major and semi-minor axes of the ellipsis. As absolute length it can be expressed in any unit allowed by the CSS <length> data type. Percentages for the horizontal axis refer to the width of the box, percentages for the vertical axis refer to the height of the box. Negative values are invalid.\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-bottom-right-radius"
  },
  "border-bottom-style": {
    "desc": "The border-bottom-style CSS property sets the line style of an element's bottom border./* Keyword values */border-bottom-style: none;border-bottom-style: hidden;border-bottom-style: dotted;border-bottom-style: dashed;border-bottom-style: solid;border-bottom-style: double;border-bottom-style: groove;border-bottom-style: ridge;border-bottom-style: inset;border-bottom-style: outset; /* Global values */border-bottom-style: inherit;border-bottom-style: initial;border-bottom-style: unset; Note: The specification doesn't define how borders of different styles connect in the corners.初始值none适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "<line-style>where <line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-bottom-style"
  },
  "border-bottom-width": {
    "desc": "CSS 属性 border-bottom-width 设置一个元素的底部边框宽度。/* Keyword values */border-bottom-width: thin;border-bottom-width: medium;border-bottom-width: thick; /* <length> values */border-bottom-width: 10em;border-bottom-width: 3vmax;border-bottom-width: 6px; /* Global keywords */border-bottom-width: inherit;border-bottom-width: initial;border-bottom-width: unset; 初始值medium适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值the absolute length or 0 if border-bottom-style is none or hiddenAnimation typea length",
    "grammar": "\n<br-width>\n定义边框宽度，取值为非负的宽度值<length>或关键字。 如果是关键字的话，其取值必须是以下之一：\n \n\n\nthin\n\n \n\n细边框\n\n\nmedium\n\n \n\n中等边框\n\n\nthick\n\n \n\n粗边框\n\n\n\n\nNote: 因为规范没有具体定义每个关键字对应的宽度值，所以实际显示效果依赖于实现。但是宽度值的取值一定遵循 thin ≤ medium ≤ thick 的规律且在单文档中是常数。\n\n\n",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-bottom-width"
  },
  "border-collapse": {
    "desc": "border-collapse CSS 属性是用来决定表格的边框是分开的还是合并的。在分隔模式下，相邻的单元格都拥有独立的边框。在合并模式下，相邻单元格共享边框。 合并（collapsed ）模式下，表格中相邻单元格共享边框。在这种模式下，CSS 属性border-style 的值 inset 表现为槽，值 outset 表现为脊。分隔（separated）模式是 HTML 表格的传统模式。相邻单元格都拥有不同的边框。边框之间的距离是通过 CSS 属性 border-spacing 来确定的。",
    "grammar": "\ncollapse\n相邻的单元格共用同一条边框（采用 collapsed-border 表格渲染模型）。\nseparate\n默认值。每个单元格拥有独立的边框（采用 separated-border 表格渲染模型）。\n",
    "name": "border-collapse"
  },
  "border-color": {
    "desc": "",
    "grammar": "/* border-color: color; 单值语法 */\nborder-color: red;\n\n/* border-color: vertical horizontal; 双值语法*/\nborder-color: red #f015ca;\n\n/* border-color: top horizontal bottom; 三值语法 */\nborder-color: red yellow green;\n\n/* border-color: top right bottom left; 四值语法 */\nborder-color: red yellow green blue;\n\nborder-color: inherit\n",
    "initial value": "as each of the properties of the shorthand:border-top-color: currentcolorborder-right-color: currentcolorborder-bottom-color: currentcolorborder-left-color: currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-color"
  },
  "border-end-end-radius (en-US)": {
    "desc": "The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
    "grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-end-end-radius: 10px;\nborder-end-end-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-end-end-radius: 1em 2em;\n\n/* Global values */\nborder-end-end-radius: inherit;\nborder-end-end-radius: initial;\nborder-end-end-radius: revert;\nborder-end-end-radius: revert-layer;\nborder-end-end-radius: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-end-end-radius (en-US)"
  },
  "border-end-start-radius (en-US)": {
    "desc": "The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
    "grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-end-start-radius: 10px;\nborder-end-start-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-end-start-radius: 1em 2em;\n\n/* Global values */\nborder-end-start-radius: inherit;\nborder-end-start-radius: initial;\nborder-end-start-radius: revert;\nborder-end-start-radius: revert-layer;\nborder-end-start-radius: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-end-start-radius (en-US)"
  },
  "border-image": {
    "desc": "border-image CSS 属性允许在元素的边框上绘制图像。这使得绘制复杂的外观组件更加简单，也不用在某些情况下使用九宫格了。使用 border-image 时，其将会替换掉 border-style 属性所设置的边框样式。虽然规范要求使用 border-image 时边框样式必须存在，但一些浏览器可能没有实现这一点。特别注意，若 border-image-source（此值可用 border-image-source 或 border-image 简写设置) 的值为 none 或者图片不能显示，则将应用 border-style。初始值as each of the properties of the shorthand:border-image-source: noneborder-image-slice: 100%border-image-width: 1border-image-outset: 0border-image-repeat: stretch适用元素all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.是否是继承属性否Percentagesas each of the properties of the shorthand:border-image-slice: refer to the size of the border imageborder-image-width: refer to the width or height of the border image area计算值as each of the properties of the shorthand:border-image-outset: as specified, but with relative lengths converted into absolute lengthsborder-image-repeat: as specifiedborder-image-slice: one to four percentage(s) (as specified) or absolute length(s), plus the keyword fill if specifiedborder-image-source: none or the image with its URI made absoluteborder-image-width: as specified, but with relative lengths converted into absolute lengthsAnimation typediscrete",
    "grammar": "参考各属性对应的值。",
    "initial value": "as each of the properties of the shorthand:border-image-source: noneborder-image-slice: 100%border-image-width: 1border-image-outset: 0border-image-repeat: stretch",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image"
  },
  "border-image-outset": {
    "desc": "",
    "grammar": "Formal syntax: [ <length> | <number> ]{1,4}\n\n/* border-image-outset: sides */\nborder-image-outset: 30%;\n\n/* border-image-outset:垂直 水平 */\nborder-image-outset: 10% 30%;\n\n/* border-image-outset: 顶 水平 底 */\nborder-image-outset: 30px 30% 45px;\n\n/* border-image-outset:顶 右 底 左  */\nborder-image-outset: 7px 12px 14px 5px;\n\nborder-image-repeat: inherit;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image-outset"
  },
  "border-image-repeat": {
    "desc": "",
    "grammar": "Formal syntax: [ stretch | repeat | round | space ]{1,2}  \nborder-image-repeat: type                      /* One-value syntax */       E.g. border-image-value: stretch;\nborder-image-repeat: horizontal vertical       /* Two-value syntax */       E.g. border-image-width: round space;\n\nborder-image-repeat: inherit\n",
    "initial value": "stretch",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image-repeat"
  },
  "border-image-slice": {
    "desc": "border-image-slice CSS 属性将使用 border-image-source 引用的图像划分为多个区域。这些区域组成了一个元素的边框图像。",
    "grammar": "/* All sides */\nborder-image-slice: 30%;\n\n/* vertical | horizontal */\nborder-image-slice: 10% 30%;\n\n/* top | horizontal | bottom */\nborder-image-slice: 30 30% 45;\n\n/* top | right | bottom | left */\nborder-image-slice: 7 12 14 5;\n\n/* Using the `fill` keyword */\nborder-image-slice: 10% fill 7 12;\n\n/* Global values */\nborder-image-slice: inherit;\nborder-image-slice: initial;\nborder-image-slice: revert;\nborder-image-slice: revert-layer;\nborder-image-slice: unset;\n\nborder-image-slice 属性可以用四个指定的 <number-percentage> 值来表示每一个图像切片的位置。负数是无效的，而大于其相应的最大尺寸的值则会被限制为 100%。\n\n仅指定了一个位置（1 个值）时，创建的（上下左右）四个切片将具有相同的宽度/高度。\n当指定了两个位置（2 个值）时，第一个值表示垂直方向的两个切片的高度（即 top 与 bottom），第二个值表示水平方向两侧切片的宽度（即 left 和 right）。\n当指定了三个位置（3 个值）时，第一个值表示顶部切片的高度（即 top），第二个值表示水平方向两侧切片的宽度（即 left 和 right），第三个值则表示底部切片的高度（即 buttom）。\n当指定了四个位置（4 个值）时，这四个值则分别对应 top、right、buttom、left（上、右、下、左）四个切片的宽度/高度。\n\n可选值 fill 可放在上面声明的值的末尾。",
    "initial value": "100%",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image-slice"
  },
  "border-image-source": {
    "desc": "",
    "grammar": "\n属性 border-image-slice 被用于切割资源图片的区域，然后将其动态的应用到最终的边框图片",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image-source"
  },
  "border-image-width": {
    "desc": "CSS属性 border-image-width 指定了 边界图像 (border image) 的宽度 如果本属性值大于元素的 border-width，边界图像将会向 padding 边缘延展",
    "grammar": "\n<长度-百分比>\n边界的宽度，可按 <length> 或 <percentage> 指定。百分比是相较于水平（垂直）方向上的边框图像区域宽度（高度）的偏移量，不能为负。\n<数值>\n边框宽度，指定为 border-width 的相应倍数，不能为负。\nauto\n将等同于内部对应的 border-image-slice 的宽或高（可用的话）。如果图像没有需要的相应的属性，将相对于 border-width 进行指定。\n",
    "initial value": "1",
    "inherit": "否",
    "applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
    "name": "border-image-width"
  },
  "border-inline (en-US)": {
    "desc": "The border-inline CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nborder-inline-color\nborder-inline-style\nborder-inline-width\n",
    "initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline (en-US)"
  },
  "border-inline-color": {
    "desc": "The border-inline-color CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.border-inline-color: yellow;border-inline-color: #F5F6F7; The border color in the other dimension can be set with border-block-color (en-US) which sets border-block-start-color (en-US), and border-block-end-color (en-US).",
    "grammar": "\n<'color'>\nThe color of the border. See color.\n",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "border-inline-color"
  },
  "border-inline-end (en-US)": {
    "desc": "The border-inline-end CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nborder-inline-end-color\nborder-inline-end-style\nborder-inline-end-width\n",
    "initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-end (en-US)"
  },
  "border-inline-end-color (en-US)": {
    "desc": "The border-inline-end-color CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "border-inline-end-color: rebeccapurple;\nborder-inline-end-color: #663399;\n\n/* Global values */\nborder-inline-end-color: inherit;\nborder-inline-end-color: initial;\nborder-inline-end-color: revert;\nborder-inline-end-color: revert-layer;\nborder-inline-end-color: unset;\n\nRelated properties are border-block-start-color, border-block-end-color, and border-inline-start-color, which define the other border colors of the element.",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-end-color (en-US)"
  },
  "border-inline-end-style (en-US)": {
    "desc": "The border-inline-end-style CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-inline-end-style: dashed;\nborder-inline-end-style: dotted;\nborder-inline-end-style: groove;\n\n/* Global values */\nborder-inline-end-style: inherit;\nborder-inline-end-style: initial;\nborder-inline-end-style: revert;\nborder-inline-end-style: revert-layer;\nborder-inline-end-style: unset;\n\nRelated properties are border-block-start-style, border-block-end-style, and border-inline-start-style, which define the other border styles of the element.",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-end-style (en-US)"
  },
  "border-inline-end-width (en-US)": {
    "desc": "The border-inline-end-width CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-inline-end-width: 2px;\nborder-inline-end-width: thick;\n\n/* Global values */\nborder-inline-end-width: inherit;\nborder-inline-end-width: initial;\nborder-inline-end-width: revert;\nborder-inline-end-width: revert-layer;\nborder-inline-end-width: unset;\n\nRelated properties are border-block-start-width, border-block-end-width, and border-inline-start-width, which define the other border widths of the element.",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-end-width (en-US)"
  },
  "border-inline-start (en-US)": {
    "desc": "The border-inline-start CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nborder-inline-start-color\nborder-inline-start-style\nborder-inline-start-width\n",
    "initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-start (en-US)"
  },
  "border-inline-start-color (en-US)": {
    "desc": "The border-inline-start-color CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "border-inline-start-color: red;\nborder-inline-start-color: #ee4141;\n\n/* Global values */\nborder-inline-start-color: inherit;\nborder-inline-start-color: initial;\nborder-inline-start-color: revert;\nborder-inline-start-color: revert-layer;\nborder-inline-start-color: unset;\n\nRelated properties are border-block-start-color, border-block-end-color, and border-inline-end-color, which define the other border colors of the element.",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-start-color (en-US)"
  },
  "border-inline-start-style (en-US)": {
    "desc": "The border-inline-start-style CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-inline-start-style: dashed;\nborder-inline-start-style: dotted;\nborder-inline-start-style: groove;\n\n/* Global values */\nborder-inline-start-style: inherit;\nborder-inline-start-style: initial;\nborder-inline-start-style: revert;\nborder-inline-start-style: revert-layer;\nborder-inline-start-style: unset;\n\nRelated properties are border-block-start-style, border-block-end-style, and border-inline-end-style, which define the other border styles of the element.Initial valuenoneApplies toall elementsInheritednoComputed valueas specifiedAnimation typediscrete",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-start-style (en-US)"
  },
  "border-inline-start-width (en-US)": {
    "desc": "The border-inline-start-width CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-inline-start-width: 5px;\nborder-inline-start-width: thick;\n\n/* Global values */\nborder-inline-start-width: inherit;\nborder-inline-start-width: initial;\nborder-inline-start-width: revert;\nborder-inline-start-width: revert-layer;\nborder-inline-start-width: unset;\n\nRelated properties are border-block-start-width, border-block-end-width, and border-inline-end-width, which define the other border widths of the element.",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-start-width (en-US)"
  },
  "border-inline-style (en-US)": {
    "desc": "The border-inline-style CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-style'> values */\nborder-inline-style: dashed;\nborder-inline-style: dotted;\nborder-inline-style: groove;\n\n/* Global values */\nborder-inline-style: inherit;\nborder-inline-style: initial;\nborder-inline-style: revert;\nborder-inline-style: revert-layer;\nborder-inline-style: unset;\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-style (en-US)"
  },
  "border-inline-width (en-US)": {
    "desc": "The border-inline-width CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <'border-width'> values */\nborder-inline-width: 5px 10px;\nborder-inline-width: 5px;\nborder-inline-width: thick;\n\n/* Global values */\nborder-inline-width: inherit;\nborder-inline-width: initial;\nborder-inline-width: revert;\nborder-inline-width: revert-layer;\nborder-inline-width: unset;\n",
    "initial value": "medium",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "border-inline-width (en-US)"
  },
  "border-left": {
    "desc": "CSS 属性 border-left 是属性border-left-color, border-left-style, 和border-left-width的三者的缩写。这些属性都是在描述一个元素的左边的边框border。border-left: 1px;border-left: 2px dotted;border-left: medium dashed green; 这三种属性值的缩写需要按照顺序定义数值，也可以省略其中的一个或者两个。 和 CSS 所有的缩写属性一样，border-left 总是会设置该缩写属性所包含的全部属性值，即使开发者并没有一一指定这些值。CSS 缩写属性会给没有被定义的属性一个默认的属性值。那就意味着下面这个例子......border-left-style: dotted;border-left: thick green; ......实际上应该是下面这个样子......border-left-style: dotted;border-left: none thick green; ......并且在 border-left 之前定义的 border-left-style 的值也会被覆盖。由于 border-left-style 的默认值是 none, border-style 的最终结果就是没有边框。 初始值as each of the properties of the shorthand:border-left-width: mediumborder-left-style: noneborder-left-color: currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as each of the properties of the shorthand:border-left-width: the absolute length or 0 if border-left-style is none or hiddenborder-left-style: as specifiedborder-left-color: computed colorAnimation typeas each of the properties of the shorthand:border-left-color: a colorborder-left-style: discreteborder-left-width: a length",
    "grammar": "\n<br-width> \n请参阅border-left-width.\n<br-style> \n请参阅border-left-style.\n<color>\n请参阅 border-left-color.\n",
    "initial value": "as each of the properties of the shorthand:border-left-width: mediumborder-left-style: noneborder-left-color: currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-left"
  },
  "border-left-color": {
    "desc": "border-left-color 属性设置元素的左边框颜色。值得注意的是，在大数情况下使用 border-color 或 border-left 更加方便和普遍。/* <color> values */border-left-color: red;border-left-color: #ffbb00;border-left-color: rgb(255, 0, 0);border-left-color: hsla(100%, 50%, 25%, 0.75);border-left-color: currentColor;border-left-color: transparent; /* Global values */border-left-color: inherit;border-left-color: initial;border-left-color: unset; 初始值currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值computed colorAnimation typea color",
    "grammar": "\n<color>\n左边框的颜色。\n",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-left-color"
  },
  "border-left-style": {
    "desc": "The border-left-style CSS property sets the line style of an element's left border. Note: The specification doesn't define how borders of different styles connect in the corners.",
    "grammar": "<line-style>where <line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-left-style"
  },
  "border-left-width": {
    "desc": "CSS 的 border-left-width 属性用来设置盒子的左边框的宽度。",
    "grammar": "\n<br-width>\n定义边框的宽度，或者作为显性非负的长度值 <length> 或者是关键字。如果他是一个关键字，它必须是下列值的一种：\n \n\n\nthin\n\n \n\n一个细边框\n\n\nmedium\n\n \n\n一个中等边框\n\n\nthick\n\n \n\n一个粗边框\n\n\n\n\n笔记： 因为规范没有定义每个关键字表示的确切厚度，当使用其中之一的关键字时，需要具体实施才知道确切结果。不过，它们通常遵循下面的模式 thin ≤ medium ≤ thick, 在单独文档中这些值内部是恒定不变的。\n\n\n",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-left-width"
  },
  "border-radius": {
    "desc": "CSS 属性 border-radius 允许你设置元素的外边框圆角。当使用一个半径时确定一个圆形，当使用两个半径时确定一个椭圆。这个 (椭) 圆与边框的交集形成圆角效果。 该属性是一个 简写属性，是为了将这四个属性 border-top-left-radius、border-top-right-radius、border-bottom-right-radius，和 border-bottom-left-radius 简写为一个属性。即使元素没有边框，圆角也可以用到 background 上面，具体效果受 background-clip 影响。当 border-collapse 的值为 collapse 时，border-radius 属性不会被应用到表格（）元素上。 radius 可以是 <length> 或者 <percentage>，表示边框四角的圆角半径。只在单值语法中使用。 top-left-and-bottom-right 可以是 <length> 或者 <percentage>，表示边框左上角和右下角的圆角半径。只在双值语法中使用。 top-right-and-bottom-left 可以是 <length> 或者 <percentage>，表示边框右上角和左下角的圆角半径。只在双值或三值语法中使用。 top-left 可以是 <length> 或者 <percentage>，表示边框左上角的圆角半径。只在三值或四值语法中使用。 top-right 可以是 <length> 或者 <percentage>，表示边框右上角的圆角半径。只在四值语法中使用。 bottom-right 可以是 <length> 或者 <percentage>，表示边框右下角的圆角半径。只在三值或四值语法中使用。 bottom-left 可以是 <length> 或者 <percentage>，表示边框左下角的圆角半径。只在四值语法中使用。 inherit 表示四个值都从父元素计算值继承。 <length><length> 定义圆形半径或椭圆的半长轴，半短轴。负值无效。<percentage>使用百分数定义圆形半径或椭圆的半长轴，半短轴。水平半轴相对于盒模型的宽度；垂直半轴相对于盒模型的高度。负值无效。 例如：border-radius: 1em/5em; /* 等价于： */ border-top-left-radius: 1em 5em;border-top-right-radius: 1em 5em;border-bottom-right-radius: 1em 5em;border-bottom-left-radius: 1em 5em; border-radius: 4px 3px 6px / 2px 4px; /* 等价于： */ border-top-left-radius: 4px 2px;border-top-right-radius: 3px 4px;border-bottom-right-radius: 6px 2px;border-bottom-left-radius: 3px 4px;",
    "grammar": "  border: solid 10px;\n  /* the border will curve into a 'D' */\n  border-radius: 10px 40px 40px 10px;\n\n  border: groove 1em red;\n  border-radius: 2em;\n\n  background: gold;\n  border: ridge gold;\n  border-radius: 13em/3em;\n\n  border: none;\n  border-radius: 40px 10px;\n\n  border: none;\n  border-radius: 50%;\n",
    "initial value": "as each of the properties of the shorthand:border-top-left-radius: 0border-top-right-radius: 0border-bottom-right-radius: 0border-bottom-left-radius: 0",
    "inherit": "否",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-radius"
  },
  "border-right": {
    "desc": "CSS 属性 border-right 是属性border-right-color, border-right-style, 和border-right-width的三者的缩写。这些属性都是在描述一个元素的右边的边框border。border-right: 1px;border-right: 2px dotted;border-right: medium dashed green; 和 CSS 所有的缩写属性一样，border-right 总是会设置该缩写属性所包含的全部属性值，即使开发者并没有一一指定这些值。CSS 缩写属性会给没有被定义的属性一个默认的属性值。那就意味着下面这个例子......border-right-style: dotted;border-right: thick green; ......实际上应该是下面这个样子...... border-right-style: dotted; border-right: none thick green; ......并且在 border-right 之前定义的 border-right-style 的值也会被覆盖。由于border-right-style 的默认值是 none, border-style 的最终结果就是没有边框。 初始值as each of the properties of the shorthand:border-right-width: mediumborder-right-style: noneborder-right-color: currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as each of the properties of the shorthand:border-right-width: the absolute length or 0 if border-right-style is none or hiddenborder-right-style: as specifiedborder-right-color: computed colorAnimation typeas each of the properties of the shorthand:border-right-color: a colorborder-right-style: discreteborder-right-width: a length",
    "grammar": "\n<br-width> \n请参阅 border-right-width.\n<br-style> \n请参阅 border-right-style.\n<color>\n请参阅 border-right-color.\n",
    "initial value": "as each of the properties of the shorthand:border-right-width: mediumborder-right-style: noneborder-right-color: currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-right"
  },
  "border-right-color": {
    "desc": "border-right-color CSS 属性用来设置元素右边的 border. 这个属性的值也可以通过简写的 CSS 属性 border-color 或border-right来设置。",
    "grammar": "\n<color>\nThe color of the right border.\n",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-right-color"
  },
  "border-right-style": {
    "desc": "border-right-style 是 border 中的一个 CSS 子属性，描述的是右边框的样式 border. 备注： 这个 css 没有定义不同样式的边界之间如何拼接。",
    "grammar": "<line-style>where <line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-right-style"
  },
  "border-right-width": {
    "desc": "CSS 的border-right-width 用来设置盒子右边框的宽度。",
    "grammar": "\n<line-width>\n定义边框的宽度，或者作为显性非负的长度值 <length> 或者是关键字。如果他是一个关键字，它必须是下列值的一种：\n \n\n\nthin\n\n \n\n一个细边框\n\n\nmedium\n\n \n\n一个中等边框\n\n\nthick\n\n \n\n一个粗边框\n\n\n\n\n笔记： 因为规范没有定义每个关键字表示的确切厚度，当使用其中之一的关键字时，需要具体实施才知道确切结果。不过，它们通常遵循下面的模式 thin ≤ medium ≤ thick, 在单独文档中这些值内部是恒定不变的。\n\n\n",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-right-width"
  },
  "border-spacing": {
    "desc": "",
    "grammar": "/* <length> */\nborder-spacing: 2px;\n\n/* horizontal <length> | vertical <length> */\nborder-spacing: 1cm 2em;\n\n/* Global values */\nborder-spacing: inherit;\nborder-spacing: initial;\nborder-spacing: unset;",
    "initial value": "0",
    "inherit": "yes",
    "applicable elements": "table and inline-table elements",
    "name": "border-spacing"
  },
  "border-start-end-radius (en-US)": {
    "desc": "The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
    "grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-start-end-radius: 10px;\nborder-start-end-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-start-end-radius: 1em 2em;\n\n/* Global values */\nborder-start-end-radius: inherit;\nborder-start-end-radius: initial;\nborder-start-end-radius: revert;\nborder-start-end-radius: revert-layer;\nborder-start-end-radius: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-start-end-radius (en-US)"
  },
  "border-start-start-radius (en-US)": {
    "desc": "The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
    "grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-start-start-radius: 10px;\nborder-start-start-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-start-start-radius: 1em 2em;\n\n/* Global values */\nborder-start-start-radius: inherit;\nborder-start-start-radius: initial;\nborder-start-start-radius: revert;\nborder-start-start-radius: revert-layer;\nborder-start-start-radius: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-start-start-radius (en-US)"
  },
  "border-style": {
    "desc": "border-style 是一个 CSS 简写属性，用来设定元素所有边框的样式。注意：border-style 默认值是 none，这意味着如果您只修改 border-width 和 border-color 是不会出现边框的。",
    "grammar": "/* Apply to all four sides */\nborder-style: dashed;\n\n/* horizontal | vertical */\nborder-style: dotted solid;\n\n/* top | horizontal | bottom */\nborder-style: hidden double dashed;\n\n/* top | right | bottom | left */\nborder-style: none solid dotted dashed;\n\n/* Global values */\nborder-style: inherit;\nborder-style: initial;\nborder-style: unset;\n",
    "name": "border-style"
  },
  "border-top": {
    "desc": "CSS 属性 border-top是属性 border-top-color, border-top-style, 和border-top-width 的三者的缩写。这些属性都是在描述一个元素的上方的边框border。",
    "grammar": "border-top: 1px;\nborder-top: 2px dotted;\nborder-top: medium dashed green;\n这三种属性值的缩写需要按照顺序定义数值，也可以省略其中的一个或者两个。",
    "name": "border-top"
  },
  "border-top-color": {
    "desc": "border-top-color 属性用以设置某元素顶部 border的颜色。通常，用border-color 或 border-top 设置该颜色更为便捷可取。",
    "grammar": "\n<color>\n上边框的颜色。\n",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-top-color"
  },
  "border-top-left-radius": {
    "desc": "border-top-left-radius 用来设置元素左上角的圆角效果。这段圆弧（角）可以是圆或椭圆的一部分。如果其中有一个值为 0，那么将无圆角效果（见border-top-left-radius取值方式)。 盒模型的背景，可以是一张图片或一种颜色，会在边框处被剪裁，更甚至可以是一个圆；剪切的额外定位通过另一个 CSS 属性\"background-clip\"来定义。在 border-top-left-radius 属性值之后，如果作用的元素上没有设置“border-radius”属性，那么这个属性值就会通过简写属性重新设置成它的初始值。",
    "grammar": "\n<length>\n<length> 定义圆形半径或椭圆的半长轴，半短轴。不能用负值。\n<percentage>\n使用百分数定义圆形半径或椭圆的半长轴，半短轴。水平半轴相对于盒模型的宽度；垂直半轴相对于盒模型的高度。不能用负值。\n",
    "name": "border-top-left-radius"
  },
  "border-top-right-radius": {
    "desc": "",
    "grammar": "How to read CSS syntax.\n正式语法: <length-percentage>{1,2}where <length-percentage> = <length> | <percentage>  \nborder-top-right-radius: radius               /* the corner is a circle    */  E.g. border-top-right-radius: 3px\nborder-top-right-radius: horizontal vertical  /* the corner is an ellipsis */  E.g. border-top-right-radius: 0.5em 1em\n\nborder-top-right-radius: inherit\n \n \n \n \n\n之上：\n\nradius\n这是一个<length>或者一个<percentage>，标志着圆的半径在这个拐角用作边框。\nhorizontal\n这是一个<length>或者一个<percentage> ，标志着椭圆的水平半长轴在这个拐角被用作边框。\nvertical\n这是一个<length>或者一个<percentage>，标志着椭圆的垂直半长轴在这个拐角被用作边框。\n\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
    "name": "border-top-right-radius"
  },
  "border-top-style": {
    "desc": "border-top-style CSS 设置元素上边框的 border. Note: 此规范并未定义不同样式的边框边角处如何连接。",
    "grammar": "<line-style>where <line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-top-style"
  },
  "border-top-width": {
    "desc": "css 属性 border-top-width 是用于设置盒模型的上边框的宽度",
    "grammar": "\n<br-width>\n上边框的宽度属性的有效值要么是一个具体的非负数，要么是一个关键字。如果是关键字，必须是一下几种：\n \n\n\nthin\n\n \n\nA thin border\n\n\nmedium\n\n \n\nA medium border\n\n\nthick\n\n \n\nA thick border\n\n\n\n\nNote: Because the specification doesn't define the exact thickness denoted by each keyword, the precise result when using one of them is implementation-specific. Nevertheless, they always follow the pattern thin ≤ medium ≤ thick, and the values are constant within a single document.\n\n\n",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "border-top-width"
  },
  "border-width": {
    "desc": "",
    "grammar": "\n它是border-top-width, border-right-width, border-bottom-width, 和 border-left-width的简写;",
    "name": "border-width"
  },
  "bottom": {
    "desc": "bottom样式属性定义了定位元素下外边距边界与其包含块下边界之间的偏移，非定位元素设置此属性无效。bottom的效果取决于元素的position属性： 当position设置为absolute或fixed时，bottom属性指定了定位元素下外边距边界与其包含块下边界之间的偏移。当position设置为relative时，bottom属性指定了元素的下边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，bottom属性的效果和 position 为relative等同；如果元素在 viewport 外面，bottom属性的效果和 position 为fixed等同。当position设置为static时，bottom属性无效。 当 top和bottom同时指定时，并且 height没有被指定或者指定为auto或100%的时候，top和bottom都会生效，在其他情况下，如果 height被限制，则top属性会优先设置，bottom属性则会被忽略。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the height of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
    "grammar": "\n对于绝对定位的元素，元素下外边距边界与其包含块下边界之间的偏移。\n对于相对定位定位的元素，元素的下边界离开其正常位置的偏移。\n\n\n<length>\n一个负值、空值或正值，代表了：\n<percentage>\n包含块高度的百分比<percentage>。\nauto\n规定：\n \n对于绝对定位元素，元素将忽略此属性而以top属性为准，如果此时设置height: auto，将基于内容需要的高度设置宽度；如果top也为auto的话，元素的垂直位置就是它假如作为静态 (即 static) 元素时该在的位置。\n对于相对定位元素，元素相对正常位置的偏移量将基于top属性；如果top也为auto的话，元素将不会有偏移。\n\n\ninherit\n指代有明确计算结果的父级元素的值，（需要注意的是，父级元素并不一定是包裹该子元素的块级元素）。该值会根据父级元素的具体情况被处理为<length>, <percentage>或者auto。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "positioned elements",
    "name": "bottom"
  },
  "box-decoration-break": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。box-decoration-break 属性用来定义当元素跨多行、多列或多页时，元素的片段应如何呈现。 指定的值将影响元素以下属性的表现： backgroundborderborder-imagebox-shadowclip-pathmarginpadding",
    "grammar": "\nslice\n元素被按照盒子被切割前的原始样式渲染，之后，针对每个行/列/页面将此假设框渲染成片段。请注意，假设框对于每个片段可以是不同的，因为如果中断发生在行内方向，则它使用自己的高度，如果中断发生在块方向，则它使用自己的宽度。有关详细信息，请参阅 CSS 规范。\nclone\n每个框片段与指定的边框、填充和边距独立呈现。The border-radius、border-image、 box-shadow独立地应用于每个片段，每个片段的背景也是独立绘制的，这意味着使用 background-repeat: no-repeat 的背景图片仍然可能重复多次。\n",
    "initial value": "slice",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "box-decoration-break"
  },
  "box-shadow": {
    "desc": "CSS box-shadow 属性用于在元素的框架上添加阴影效果。你可以在同一个元素上设置多个阴影效果，并用逗号将他们分隔开。该属性可设置的值包括阴影的 X 轴偏移量、Y 轴偏移量、模糊半径、扩散半径和颜色。 你几乎可以在任何元素上使用box-shadow来添加阴影效果。如果元素同时设置了 border-radius属性，那么阴影也会有圆角效果。多个阴影在 z 轴上的顺序和多个 text shadows 规则相同 (第一个阴影在最上面)。Box-shadow generator 是一个允许你生成 box-shadow 的交互式工具。",
    "grammar": "\ninset\n如果没有指定inset，默认阴影在边框外，即阴影向外扩散。\n 使用 inset 关键字会使得阴影落在盒子内部，这样看起来就像是内容被压低了。此时阴影会在边框之内 (即使是透明边框）、背景之上、内容之下。\n<offset-x> <offset-y>\n这是头两个 <length> 值，用来设置阴影偏移量。x,y 是按照数学二维坐标系来计算的，只不过 y 垂直方向向下。  <offset-x> 设置水平偏移量，正值阴影则位于元素右边，负值阴影则位于元素左边。 <offset-y> 设置垂直偏移量，正值阴影则位于元素下方，负值阴影则位于元素上方。可用单位请查看 <length> 。\n如果两者都是 0，那么阴影位于元素后面。这时如果设置了<blur-radius> 或<spread-radius> 则有模糊效果。需要考虑 inset \n<blur-radius>\n这是第三个 <length> 值。值越大，模糊面积越大，阴影就越大越淡。不能为负值。默认为 0，此时阴影边缘锐利。本规范不包括如何计算模糊半径的精确算法，但是，它详细说明如下：\n\n对于长而直的阴影边缘，它会创建一个过渡颜色用于模糊 以阴影边缘为中心、模糊半径为半径的局域，过渡颜色的范围在完整的阴影颜色到它最外面的终点的透明之间。 （译者注：对此有兴趣的可以了解下数字图像处理的模糊算法。）\n\n<spread-radius>\n这是第四个 <length> 值。取正值时，阴影扩大；取负值时，阴影收缩。默认为 0，此时阴影与元素同样大。需要考虑 inset \n<color>\n相关事项查看 <color> 。如果没有指定，则由浏览器决定——通常是color的值，不过目前 Safari 取透明。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter.",
    "name": "box-shadow"
  },
  "box-sizing": {
    "desc": "CSS 中的 box-sizing 属性定义了 user agent 应该如何计算一个元素的总宽度和总高度。 在 CSS 盒子模型的默认定义里，你对一个元素所设置的 width 与 height 只会应用到这个元素的内容区。如果这个元素有任何的 border 或 padding ，绘制到屏幕上时的盒子宽度和高度会加上设置的边框和内边距值。这意味着当你调整一个元素的宽度和高度时需要时刻注意到这个元素的边框和内边距。当我们实现响应式布局时，这个特点尤其烦人。box-sizing 属性可以被用来调整这些表现： content-box 是默认值。如果你设置一个元素的宽为 100px，那么这个元素的内容区会有 100px 宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在 width 内的。也就是说，如果你将一个元素的 width 设为 100px，那么这 100px 会包含它的 border 和 padding，内容区的实际宽度是 width 减去 (border + padding) 的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。 译者注： border-box不包含margin Note: 对于新的 web 站点，你可能希望首先将 box-sizing 设置为 border-box，如下所示：* { box-sizing: border-box; }这使得处理元素大小的工作变得容易得多，并且通常消除了在布局内容时可能遇到的许多陷阱。然而，在某些情况下，你应谨慎使用这个属性。例如：你正在编写一个将由其他人使用的共享组件库，如果他们网站的其余部分没有设置此值，他们可能会发现很难使用你的组件库。",
    "grammar": "\ncontent-box\n默认值，标准盒子模型。 width 与 height 只包括内容的宽和高，不包括边框（border），内边距（padding），外边距（margin）。注意：内边距、边框和外边距都在这个盒子的外部。 比如说，.box {width: 350px; border: 10px solid black;} 在浏览器中的渲染的实际宽度将是 370px。\n\n 尺寸计算公式：\nwidth = 内容的宽度\nheight = 内容的高度\n宽度和高度的计算值都不包含内容的边框（border）和内边距（padding）。\nborder-box\n width 和 height 属性包括内容，内边距和边框，但不包括外边距。这是当文档处于 Quirks 模式 时 Internet Explorer 使用的盒模型。注意，填充和边框将在盒子内 , 例如， .box {width: 350px; border: 10px solid black;} 导致在浏览器中呈现的宽度为 350px 的盒子。内容框不能为负，并且被分配到 0，使得不可能使用 border-box 使元素消失。\n\n 尺寸计算公式：\nwidth = border + padding + 内容的宽度\nheight = border + padding + 内容的高度\n\n形式化语法\n\n\ncontent-box | border-box",
    "initial value": "content-box",
    "inherit": "否",
    "applicable elements": "all elements that accept width or height",
    "name": "box-sizing"
  },
  "break-after": {
    "desc": "break-after CSS 属性描述在生成的盒子之后的页面，列或区域中断行为（换句话说，如何以及是否中断）。如果没有生成的盒子，则该属性将被忽略。/* Generic break values */break-after: auto;break-after: avoid;break-after: always;break-after: all; /* Page break values */break-after: avoid-page;break-after: page;break-after: left;break-after: right;break-after: recto;break-after: verso; /* Column break values */break-after: avoid-column;break-after: column; /* Region break values */break-after: avoid-region;break-after: region; /* Global values */break-after: inherit;break-after: initial;break-after: unset; 每个潜在的断点（亦即每个元素的边界）都受到三个属性的影响：上一个元素的 break-after 值、下一个元素的 break-before 值以及当前元素自身的 break-inside 值。以下规则被用于判断中断是否必要： 如果上述三个属性中，如果任何一个的值属于“强制中断”值，那么这个属性将被优先应用，此处所称“强制中断”的值为： always、 left、 right、 page、 column 和 region。If several of the concerned values is such a break, the one of the element that appears the latest in the flow is taken (that is the break-before value has precedence over the break-after value, which itself has precedence over the break-inside value).If any of the three concerned values is an avoid break value, that is avoid, avoid-page, avoid-region, avoid-column, no such break will be applied at that point. Once forced breaks have been applied, soft breaks may be added if needed, but not on element boundaries that resolve in a corresponding avoid value.初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "Generic break values\n\nauto\nAllows, but does not force, any break (page, column, or region) to be inserted right after the principal box.\navoid\nAvoids any break (page, column, or region) from being inserted right after the principal box.\nalways \nExperimental\n\nForces a page break right after the principal box. The type of this break is that of the immediately-containing fragmentation context. If we are inside a multicol container then it would force a column break, inside paged media (but not inside a multicol container) a page break.\nall \nExperimental\n\nForces a page break right after the principal box. Breaking through all possible fragmentation contexts. So a break inside a multicol container, which was inside a page container would force a column and page break.\n\nPage break values\n\navoid-page\nAvoids any page break right after the principal box.\npage\nForces a page break right after the principal box.\nleft\nForces one or two page breaks right after the principal box, whichever will make the next page into a left page.\nright\nForces one or two page breaks right after the principal box, whichever will make the next page into a right page.\nrecto \nExperimental\n\nForces one or two page breaks right after the principal box, whichever will make the next page into a recto page. (A recto page is a right page in a left-to-right spread or a left page in a right-to-left spread.)\nverso \nExperimental\n\nForces one or two page breaks right after the principal box, whichever will make the next page into a verso page. (A verso page is a left page in a left-to-right spread or a left right in a right-to-left spread.)\n\nColumn break values\n\navoid-column\nAvoids any column break right after the principal box.\ncolumn\nForces a column break right after the principal box.\n\nRegion break values\n\navoid-region \nExperimental\n\nAvoids any region break right after the principal box.\nregion \nExperimental\n\nForces a region break right after the principal box.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "block-level elements",
    "name": "break-after"
  },
  "break-before": {
    "desc": "The break-before CSS 属性定义页面，列或区域在生成的盒子之前应如何处理中断。如果没有生成的盒子，则忽略该属性。/* Generic break values */break-before: auto;break-before: avoid; /* Page break values */break-before: avoid-page;break-before: page;break-before: always;break-before: left;break-before: right;break-before: recto;break-before: verso; /* Column break values */break-before: avoid-column;break-before: column; /* Region break values */break-before: avoid-region;break-before: region; /* Global values */break-before: inherit;break-before: initial;break-before: unset; Each possible break point (in other words, each element boundary) is affected by three properties: the break-after value of the previous element, the break-before value of the next element, and the break-inside value of the containing element.To determine if a break must be done, the following rules are applied: If any of the three concerned values is a forced break value (always, left, right, page, column, or region), it has precedence. If more than one of them are such a break, the one of the element that appears the latest in the flow is taken (i.e., the break-before value has precedence over the break-after value, which itself has precedence over the break-inside value).If any of the three concerned values is an avoid break value (avoid, avoid-page, avoid-region, or avoid-column), no such break will be applied at that point. Once forced breaks have been applied, soft breaks may be added if needed, but not on element boundaries that resolve in a corresponding avoid value.初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "General break values\n\nauto\nAllows, but does not force, any break (page, column, or region) to be inserted right before the principal box.\navoid\nAvoids any break (page, column, or region) from being inserted right before the principal box.\n\nPage break values\n\navoid-page\nAvoids any page break right before the principal box.\npage\nForces a page break right before the principal box.\nalways\nForces a page break right before the principal box. (This is an alias of page, and has been kept to facilitate the transition from page-break-after, which is a subset of this property.)\nleft\nForces one or two page breaks right before the principal box, whichever will make the next page into a left page.\nright\nForces one or two page breaks right before the principal box, whichever will make the next page into a right page.\nrecto \nExperimental\n\nForces one or two page breaks right before the principal box, whichever will make the next page into a recto page. (A recto page is a right page in a left-to-right spread or a left page in a right-to-left spread.)\nverso \nExperimental\n\nForces one or two page breaks right before the principal box, whichever will make the next page into a verso page. (A verso page is a left page in a left-to-right spread or a left right in a right-to-left spread.)\n\nColumn break values\n\navoid-column\nAvoids any column break right before the principal box.\ncolumn\nForces a column break right before the principal box.\n\nRegion break values\n\navoid-region \nExperimental\n\nAvoids any region break right before the principal box.\nregion \nExperimental\n\nForces a region break right before the principal box.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "block-level elements",
    "name": "break-before"
  },
  "break-inside": {
    "desc": "break-inside CSS 属性描述了在多列布局页面下的内容盒子如何中断，如果多列布局没有内容盒子，这个属性会被忽略。break-inside: auto;break-inside: avoid;break-inside: avoid-page;break-inside: avoid-column;break-inside: avoid-region; 每一个可能的断点（可以理解为元素的边界）由三个属性来定义。前一个元素的break-after，后一个元素的break-before，以及当前元素的break-inside。如果需要定义一个中断点，必须遵循以下原则： 如果这三个中断属性的值有一个是强制中断值（这些强制中断值包括了 always, left, right, page, column, region），那么这个属性的值就具有优先权。如果其中一个以上是这样的断点，则使用流中最新出现的元素的值。因此，break-before值优先于break-after值，而后者又优先于break-inside值。如果三个相关值中的任何一个是避免中断值，相关值包括 avoid, avoid-page, avoid-region, avoid-column, 则在该点上不应用此类中断。 一旦应用了强制中断，如果需要，可以添加软中断，但不能在元素边界上添加相应的avoid值。初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n允许 (既不禁止也不强制) 在主框中插入任何中断 (页、列或区域)。\navoid-page\n避免主框中任何页的中断点\navoid-column\n避免主框中任何列的中断点\navoid-region \nExperimental\n\n避免原则框内的任何区域中断。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "block-level elements",
    "name": "break-inside"
  },
  "caption-side": {
    "desc": "CSS 中 caption-side 属性会将表格的标题<caption> 放到规定的位置。但是具体显示的位置与表格的 writing-mode 属性值有关。",
    "grammar": "/* Directional values */\ncaption-side: top;\ncaption-side: bottom;\n\n/* Warning: non-standard values */\ncaption-side: left;\ncaption-side: right;\ncaption-side: top-outside;\ncaption-side: bottom-outside;\n\n/* Global values */\ncaption-side: inherit;\ncaption-side: initial;\ncaption-side: unset;\n",
    "name": "caption-side"
  },
  "caret-color": {
    "desc": "caret-color 属性用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。 附注：上面说的“插入光标”（insertion caret）只是光标（caret）的其中一种。比如一些浏览器有一种光标叫做“导航光标“（navigation caret），它可以在不可编辑区域内来回移动。此外，当鼠标指针移动到一段 cursor 属性是 auto 的文本上方时，或移动到 cursor 属性是 text、 vertical-text 的內容上方時，虽然看起来有点像插入光标，但它不是插入光标（caret），而是鼠标指针光标（cursor）。",
    "grammar": "\nauto\n\n默认颜色，此时浏览器应该用 currentcolor 来作为插入光标的颜色，但浏览器可能还会根据当前的背景色、阴影色等来对该颜色进行适当的调整以确保该插入光标具有良好的可见性。\n\n附注：auto 属性值在 CSS  transitions/animations 中是不支持颜色插补（interpolated）的\n\n\n<color>\n所指定的插入光标的颜色值。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "caret-color"
  },
  "clear": {
    "desc": "clear CSS 属性指定一个元素是否必须移动 (清除浮动后) 到在它之前的浮动元素下面。clear 属性适用于浮动和非浮动元素。 当应用于非浮动块时，它将非浮动块的边框边界移动到所有相关浮动元素外边界的下方。这个非浮动块的垂直外边距会折叠。另一方面，两个浮动元素的垂直外边距将不会折叠。当应用于浮动元素时，它将元素的外边界移动到所有相关的浮动元素外边框边界的下方。这会影响后面浮动元素的布局，后面的浮动元素的位置无法高于它之前的元素。要被清除的相关浮动元素指的是在相同块级格式化上下文中的前置浮动。 注意：如果一个元素里只有浮动元素，那它的高度会是 0。如果你想要它自适应即包含所有浮动元素，那你需要清除它的子元素。一种方法叫做clearfix，即clear一个不浮动的 ::after 伪元素。#container::after { content: \"\"; display: block; clear: both;}",
    "grammar": "\nnone\n元素不会被向下移动以清除浮动。\nleft\n元素被向下移动以清除左浮动。\nright\n元素被向下移动以清除右浮动。\nboth\n元素被向下移动以清除左右浮动。\ninline-start\n元素被向下移动以清除其包含块的起始侧浮动，即 ltr 时清除左浮动，rtl 时清除右浮动。\ninline-end\n元素被向下移动以清除其包含块的结束侧浮动，即 ltr 时清除右浮动，rtl 时清除左浮动。\n\nFormal syntax\nnone | left | right | both | inline-start | inline-end\n\n",
    "name": "clear"
  },
  "clip": {
    "desc": "已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
    "grammar": "形式语法: <shape> | autowhere <shape> = rect(<top>, <right>, <bottom>, <left>)\n\nclip: rect(1px, 10em, 3rem, 2ch)\nclip: auto\n\nclip: inherit",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "absolutely positioned elements",
    "name": "clip"
  },
  "clip-path": {
    "desc": "clip-path CSS 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。",
    "grammar": "/* Keyword values */\nclip-path: none;\n\n/* <clip-source> values */\nclip-path: url(resources.svg#c1);\n\n/* <geometry-box> values */\nclip-path: margin-box;\nclip-path: border-box;\nclip-path: padding-box;\nclip-path: content-box;\nclip-path: fill-box;\nclip-path: stroke-box;\nclip-path: view-box;\n\n/* <basic-shape> values */\nclip-path: inset(100px 50px);\nclip-path: circle(50px at 0 100px);\nclip-path: ellipse(50px 60px at 0 10% 20%);\nclip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\nclip-path: path('M0.5,1 C0.5,1,0,0.7,0,0.3 A0.25,0.25,1,1,1,0.5,0.3 A0.25,0.25,1,1,1,1,0.3 C1,0.7,0.5,1,0.5,1 Z');\n\n/* Box and shape values combined */\nclip-path: padding-box circle(50px at 0 100px);\n\n/* Global values */\nclip-path: inherit;\nclip-path: initial;\nclip-path: revert;\nclip-path: revert-layer;\nclip-path: unset;\n\nclip-path 属性指定为下面列出的值的一个或多个值的组合。",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "clip-path"
  },
  "color": {
    "desc": "colorCSS 属性设置颜色值的前景色以及文本装饰，并设置currentcolor (en-US)值。currentcolor可以对其他颜色属性用作不直接的值，比如border-color。 对于在 HTML 中使用颜色的概述，参考使用 CSS 对 HTML 元素实现颜色。",
    "grammar": "\n<color>\n设置元素的文本或装饰的颜色。\n",
    "initial value": "canvastext",
    "inherit": "yes",
    "applicable elements": "all elements and text. It also applies to ::first-letter and ::first-line.",
    "name": "color"
  },
  "color-scheme": {
    "desc": "color-scheme CSS 属性允许元素指示它可以轻松呈现的配色方案。操作系统配色方案的常见选择是“亮”和“暗”，或者是“白天模式”和“夜间模式”。当用户选择其中一种配色方案时，操作系统会对用户界面进行调整。这包括表单控件、滚动条和 CSS 系统颜色的使用值。",
    "grammar": "\nnormal\n\n：表示元素未指定任何配色方案，因此应使用浏览器的默认配色方案呈现。\n\n\nlight\n\n：表示可以使用操作系统亮色配色方案渲染元素。\n\n\ndark\n\n：表示可以使用操作系统深色配色方案渲染元素。\n\n\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements and text",
    "name": "color-scheme"
  },
  "column-count": {
    "desc": "column-count CSS 属性，描述元素的列数。column-count: 3;column-count: auto; column-count: inherit;column-count: initial;column-count: unset;",
    "grammar": "\nauto\n用来表示列的数量由其他 CSS 属性指定，例如 column-width (en-US).\n<number>\n是个严格的正数 <integer> ，用来描述元素内容被划分的理想列数。假如 column-width (en-US)也被设置为非零值，此参数仅表示所允许的最大列数. \n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "Block containers except table wrapper boxes",
    "name": "column-count"
  },
  "column-fill": {
    "desc": "",
    "grammar": "Formal syntax: auto | balance | balance-all\n\ncolumn-fill: auto;\ncolumn-fill: balance;\n\n/* Global values */\ncolumn-fill: inherit;\ncolumn-fill: initial;\ncolumn-fill: unset;\n",
    "initial value": "balance",
    "inherit": "否",
    "applicable elements": "multicol elements",
    "name": "column-fill"
  },
  "column-gap (grid-column-gap)": {
    "desc": "CSS column-gap 属性用来设置元素列之间的间隔（gutter）大小。",
    "grammar": "/* Keyword value */\ncolumn-gap: normal;\n\n/* <length> values */\ncolumn-gap: 3px;\ncolumn-gap: 2.5em;\n\n/* <percentage> value */\ncolumn-gap: 3%;\n\n/* Global values */\ncolumn-gap: inherit;\ncolumn-gap: initial;\ncolumn-gap: revert;\ncolumn-gap: revert-layer;\ncolumn-gap: unset;\n\ncolumn-gap 属性可以用以下值来表示。",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "multi-column elements, flex containers, grid containers",
    "name": "column-gap (grid-column-gap)"
  },
  "column-rule": {
    "desc": "",
    "grammar": "Formal syntax: <'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\n\ncolumn-rule: dotted;\ncolumn-rule: solid blue;\ncolumn-rule: solid 8px;\ncolumn-rule: thick inset blue;\n",
    "initial value": "as each of the properties of the shorthand:column-rule-width: mediumcolumn-rule-style: nonecolumn-rule-color: currentcolor",
    "inherit": "否",
    "applicable elements": "multicol elements",
    "name": "column-rule"
  },
  "column-rule-color": {
    "desc": "",
    "grammar": "Formal syntax: <color>where <color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>where <rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )where <alpha-value> = <number> | <percentage><hue> = <number> | <angle>\n\ncolumn-rule-color: red;\ncolumn-rule-color: rgb(192, 56, 78);\ncolumn-rule-color: transparent;\ncolumn-rule-color: hsla(0, 100%, 50%, 0.6);\n\ncolumn-rule-color: inherit;",
    "initial value": "currentcolor",
    "inherit": "否",
    "applicable elements": "multicol elements",
    "name": "column-rule-color"
  },
  "column-rule-style": {
    "desc": "",
    "grammar": "Formal syntax: <'border-style'>\n\ncolumn-rule-style: none;\ncolumn-rule-style: hidden;\ncolumn-rule-style: dotted;\ncolumn-rule-style: dashed;\ncolumn-rule-style: solid;\ncolumn-rule-style: double;\ncolumn-rule-style: groove;\ncolumn-rule-style: ridge;\ncolumn-rule-style: inset;\ncolumn-rule-style: outset;\n\ncolumn-rule-style: inherit;",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "multicol elements",
    "name": "column-rule-style"
  },
  "column-rule-width": {
    "desc": "",
    "grammar": "Formal syntax: <'border-width'>\n\n/* Keyword values */\ncolumn-rule-width: thin;\ncolumn-rule-width: medium;\ncolumn-rule-width: thick;\n\n/* Length values */\ncolumn-rule-width: 1px;\ncolumn-rule-width: 2.5em;\n\ncolumn-rule-width: inherit;",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "multicol elements",
    "name": "column-rule-width"
  },
  "column-span": {
    "desc": "",
    "grammar": "Formal syntax: none | all\n\ncolumn-span: none;\ncolumn-span: all;\n\ncolumn-span: inherit;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "in-flow block-level elements",
    "name": "column-span"
  },
  "column-width (en-US)": {
    "desc": "The column-width CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the column-width value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.",
    "grammar": "/* Keyword value */\ncolumn-width: auto;\n\n/* <length> values */\ncolumn-width: 60px;\ncolumn-width: 15.5em;\ncolumn-width: 3.3vw;\n\n/* Global values */\ncolumn-width: inherit;\ncolumn-width: initial;\ncolumn-width: revert;\ncolumn-width: revert-layer;\ncolumn-width: unset;\n\nThe column-width property is specified as one of the values listed below.",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "Block containers except table wrapper boxes",
    "name": "column-width (en-US)"
  },
  "columns": {
    "desc": "CSS 属性 columns 用来设置元素的列宽和列数。 它是一个简写属性，可在单个方便的声明中设置 column-width (en-US) 和 column-count 属性。与所有简写属性一样，任何省略的子值都将设置为其初始值。",
    "grammar": "\n<'column-width'>\n理想的列宽，定义为 <length> 或 auto 关键字。实际宽度可以更宽或更窄以适合可用空间。See column-width (en-US)。\n<'column-count'>\n元素内容应分成的理想列数，定义为 <integer> 或 auto 关键字。如果此值和列的宽度都不是 auto ，则它仅指示允许的最大列数。请参阅 column-count 。\n",
    "initial value": "as each of the properties of the shorthand:column-width (en-US): autocolumn-count: auto",
    "inherit": "否",
    "applicable elements": "Block containers except table wrapper boxes",
    "name": "columns"
  },
  "contain": {
    "desc": "CSS contain 属性允许开发者声明当前元素和它的内容尽可能的独立于 DOM 树的其他部分。这使得浏览器在重新计算布局、样式、绘图、大小或这四项的组合时，只影响到有限的 DOM 区域，而不是整个页面，可以有效改善性能。这个属性在包含大量独立组件的页面非常实用，它可以防止某个小部件的 CSS 规则改变对页面上的其他东西造成影响。 Note: If applied (with value: paint, strict or content), this property creates: A new containing block (for the descendants whose position property is absolute or fixed).A new stacking context.A new block formatting context.",
    "grammar": "\nnone\n表示元素将正常渲染，没有包含规则。\nstrict\n表示除了 style 外的所有的包含规则应用于这个元素。等价于 contain: size layout paint。\ncontent\n表示这个元素上有除了 size 和 style 外的所有包含规则。等价于 contain: layout paint。\nsize\n表示这个元素的尺寸计算不依赖于它的子孙元素的尺寸。\nlayout\n表示元素外部无法影响元素内部的布局，反之亦然。\nstyle\n表示那些同时会影响这个元素和其子孙元素的属性，都在这个元素的包含范围内。\n Indicates that, for properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element. Note that this value is marked \"at-risk\" in the spec and may not be supported everywhere.\npaint\n表示这个元素的子孙节点不会在它边缘外显示。如果一个元素在视窗外或因其他原因导致不可见，则同样保证它的子孙节点不会被显示。\n Indicates that descendants of the element don't display outside its bounds. If the containing box is offscreen, the browser does not need to paint its contained elements — these must also be offscreen as they are contained completely by that box. And if a descendant overflows the containing element's bounds, then that descendant will be clipped to the containing element's border-box.\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "contain"
  },
  "content": {
    "desc": "",
    "grammar": "Formal syntax: normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?where <content-replacement> = <image><content-list> = [ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> ]+<counter> = <counter()> | <counters()>where <image> = <url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient><quote> = open-quote | close-quote | no-open-quote | no-close-quote<target> = <target-counter()> | <target-counters()> | <target-text()><leader()> = leader( <leader-type> )<counter()> = counter( <counter-name>, <counter-style>? )<counters()> = counters( <counter-name>, <string>, <counter-style>? )where <image()> = image( <image-tags>? [ <image-src>? , <color>? ]! )<image-set()> = image-set( <image-set-option># )<element()> = element( <id-selector> )<paint()> = paint( <ident> (en-US), <declaration-value>? )<cross-fade()> = cross-fade( <cf-mixing-image> , <cf-final-image>? )<gradient> = <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()><target-counter()> = target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )<target-counters()> = target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )<target-text()> = target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )<leader-type> = dotted | solid | space | <string><counter-name> = <custom-ident><counter-style> = <counter-style-name> | symbols()where <image-tags> = ltr | rtl<image-src> = <url> | <string><color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color><image-set-option> = [ <image> | <string> ] [ <resolution> || type(<string>) ]<id-selector> = <hash-token><cf-mixing-image> = <percentage>? && <image><cf-final-image> = <image> | <color><linear-gradient()> = linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )<repeating-linear-gradient()> = repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )<radial-gradient()> = radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )<repeating-radial-gradient()> = repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )<conic-gradient()> = conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )<counter-style-name> = <custom-ident>where <rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )<side-or-corner> = [ left | right ] || [ top | bottom ]<color-stop-list> = [ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop><ending-shape> = circle | ellipse<size> = closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}<position> = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]<angular-color-stop-list> = [ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>where <alpha-value> = <number> | <percentage><hue> = <number> | <angle><linear-color-stop> = <color> <color-stop-length>?<linear-color-hint> = <length-percentage><length-percentage> = <length> | <percentage><angular-color-stop> = <color> && <color-stop-angle>?<angular-color-hint> = <angle-percentage>where <color-stop-length> = <length-percentage>{1,2}<color-stop-angle> = <angle-percentage>{1,2}<angle-percentage> = <angle> | <percentage>\n\ncontent: normal                                /* Keywords that cannot be combined with other values */\ncontent: none\n\ncontent: 'prefix'                              /* <string> value, non-latin characters must be encoded e.g. \\00A0 for &nbsp; */\ncontent: url(http://www.example.com/test.html) /* <uri> value */\ncontent: chapter_counter                       /* <counter> values */\ncontent: attr(value string)                    /* attr() value linked to the HTML attribute value */\ncontent: open-quote                            /* Language- and position-dependant keywords */\ncontent: close-quote\ncontent: no-open-quote\ncontent: no-close-quote\n\ncontent: open-quote chapter_counter            /* Except for normal and none, several values can be used simultaneously */\n\ncontent: inherit\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "All elements, tree-abiding pseudo-elements, and page margin boxes",
    "name": "content"
  },
  "content-visibility (en-US)": {
    "desc": "The content-visibility CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work (including layout and painting) until it is needed — which makes the initial page load much faster.",
    "grammar": "\nvisible\n\nNo effect. The element's contents are laid out and rendered as normal.\n\nhidden\n\nThe element skips its contents. The skipped contents must not be accessible to user-agent features, such as find-in-page, tab-order navigation, etc., nor be selectable or focusable. This is similar to giving the contents display: none.\n\nauto\n\nThe element turns on layout containment, style containment, and paint containment. If the element is not relevant to the user, it also skips its contents. Unlike hidden, the skipped contents must still be available as normal to user-agent features such as find-in-page, tab order navigation, etc., and must be focusable and selectable as normal.\n\n",
    "initial value": "visible",
    "inherit": "no",
    "applicable elements": "elementsForWhichLayoutContainmentCanApply",
    "name": "content-visibility (en-US)"
  },
  "counter-increment": {
    "desc": "",
    "grammar": "/* Increment counter-name by 1 */\ncounter-increment: counter-name;\n\n/* Decrement counter-name by 1 */\ncounter-increment: counter-name -1;\n\n/* Increment counter1 by 1, and decrement counter2 by 4 */\ncounter-increment: counter 1 counter2 -4;\n\n/* Do not increment/decrement anything: used to hide less specific values */\ncounter-increment: none;\n\n/* Global values */\ncounter-increment: inherit;\ncounter-increment: initial;\ncounter-increment: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "counter-increment"
  },
  "counter-reset": {
    "desc": "counter-reset 属性用于将 CSS 计数器 重置为制定值",
    "grammar": "/* Set counter-name to 0 */\ncounter-reset: counter-name;\n\n/* Set counter-name to -1 */\ncounter-reset: counter-name -1;\n\n/* Set counter1 to 1, and counter2 to 4 */\ncounter-reset: counter1 1 counter2 4;\n\n/* Cancel any reset that could have been set in less specific rules */\ncounter-reset: none;\n\n/* Global values */\ncounter-reset: inherit;\ncounter-reset: initial;\ncounter-reset: unset;\n\ncounter-reset 属性可以指定为以下之一：\n\n<自定义 ID> [<数值>]。您可以指定任意数量的计数器进行重置，每个名称或“名称 - 数字”对之间用空格分隔。\n特殊值 none。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "counter-reset"
  },
  "counter-set (en-US)": {
    "desc": "The counter-set CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element.",
    "grammar": "/* Set \"my-counter\" to 0 */\ncounter-set: my-counter;\n\n/* Set \"my-counter\" to -1 */\ncounter-set: my-counter -1;\n\n/* Set \"counter1\" to 1, and \"counter2\" to 4 */\ncounter-set: counter1 1 counter2 4;\n\n/* Cancel any counter that could have been set in less specific rules */\ncounter-set: none;\n\n/* Global values */\ncounter-set: inherit;\ncounter-set: initial;\ncounter-set: revert;\ncounter-set: revert-layer;\ncounter-set: unset;\n\nThe counter-set property is specified as either one of the following:\n\nA <custom-ident> naming the counter, followed optionally by an <integer>. You may specify as many counters to reset as you want, with each name or name-number pair separated by a space.\nThe keyword value none.\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "counter-set (en-US)"
  },
  "cursor": {
    "desc": "cursor CSS 属性设置光标的类型（如果有），在鼠标指针悬停在元素上时显示相应样式。",
    "grammar": "\n<url>\nurl(…)或者逗号分隔的url(…), url(…), …，指向图片文件。用大于一个<url>值提供后备，以防某些指针图片类型不被支持。最后必须提供一个非 URL 后备值。详情参见cursor 属性中使用 URL 值。\n<x> <y> \nExperimental\n\n可选 x，y 坐标。两个小于 32 的无单位非负数。\n关键字值\n\n   鼠标悬浮于值上可实时演示\n\n\n\n\n\n类型\nCSS 值\n例子\n描述\n\n\nGeneral\nauto\n\n\n浏览器根据当前内容决定指针样式\n      例如当是内容是文字时使用 text 样式\n\n\n\ndefault\n\n默认指针，通常是箭头。\n\n\nnone\n\n无指针被渲染\n\n\n链接及状态\ncontext-menu\n\n指针下有可用内容目录。\n\n\nhelp\n\n指示帮助\n\n\npointer\n\n悬浮于连接上时，通常为手\n\n\nprogress\n\n程序后台繁忙，用户仍可交互 (与wait相反).\n\n\nwait\n\n程序繁忙，用户不可交互 (与progress相反).图标一般为沙漏或者表。\n\n\n选择\ncell\n\n指示单元格可被选中\n\n\ncrosshair\n\n交叉指针，通常指示位图中的框选\n\n\ntext\n\n指示文字可被选中\n\n\nvertical-text\n\n指示垂直文字可被选中\n\n\n拖拽\nalias\n\n复制或快捷方式将要被创建\n\n\ncopy\n\n指示可复制\n\n\nmove\n\n被悬浮的物体可被移动\n\n\nno-drop\n\n当前位置不能扔下\nbug 275173Windows 或 Mac OS X 中 \"no-drop 与 not-allowed 相同\".\n\n\nnot-allowed\n\n不能执行\n\n\ngrab\n\n\n可抓取\n译者注:grab 和 grabbing 在比较后期才被支持，见浏览器兼容表\n\n\n\ngrabbing\n\n抓取中\n\n\n重设大小及滚动\nall-scroll\n\n元素可任意方向滚动（平移）.\nbug 275174Windows 中，\"all-scroll 与 move 相同\".\n\n\ncol-resize\n\n元素可被重设宽度。通常被渲染为中间有一条竖线分割的左右两个箭头\n\n\nrow-resize\n\n\n元素可被重设高度。通常被渲染为中间有一条横线分割的上下两个箭头\n\n\n\nn-resize\n\n某条边将被移动。例如元素盒的东南角被移动时使用se-resize\n\n\ne-resize\n\n\n\ns-resize\n\n\n\nw-resize\n\n\n\nne-resize\n\n\n\nnw-resize\n\n\n\nse-resize\n\n\n\nsw-resize\n\n\n\new-resize\n\n指示双向重新设置大小\n\n\nns-resize\n\n\n\nnesw-resize\n\n\n\nnwse-resize\n\n\n\n缩放\nzoom-in\n\n\n指示可被放大或缩小\n\n\n\nzoom-out\n\n\n\n\n\n",
    "name": "cursor"
  },
  "direction": {
    "desc": "CSS 属性 direction 用来设置文本、表列水平溢出的方向。 rtl 表示从右到左 (类似希伯来语或阿拉伯语)， ltr 表示从左到右 (类似英语等大部分语言). 值得注意的是文本方向通常由文档定义 (e.g., with HTML's dir attribute) 而不是通过直接使用 direction 属性定义。该属性设置可以设置块级元素文本的基本方向，也可以设置由通过 unicode-bidi属性创建的嵌入元素的方向。与此同时，它还可以设置文本、块级元素的默认对齐方式 ，以及表行中的单元格的流动方向。与 HTML 中的 dir 属性不同，direction属性不会从表列继承到表单元格，因为 CSS 继承遵从文档流，而表单元格位于行内部，但不在列内部。direction 属性和 unicode-bidi 属性不受 all 属性影响。",
    "grammar": "\nltr\n默认属性。可设置文本和其他元素的默认方向是从左到右。\nrtl\n可设置文本和其他元素的默认方向是从右到左。\n",
    "initial value": "ltr",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "direction"
  },
  "display": {
    "desc": "display 属性可以设置元素的内部和外部显示类型 display types。元素的外部显示类型 outer display types 将决定该元素在流式布局中的表现（块级或内联元素）；元素的内部显示类型 inner display types 可以控制其子元素的布局（例如：flow layout，grid 或 flex）。 在 CSS 规范（特指 CSS Level 1/2/3 规范）中查阅 display 属性的所有取值时需要注意：个别取值的详细信息记录在独立的规范中。例如，display: flex 的详细信息在 CSS Flexible Box Model 规范中记录。可以在本文档末尾的表格中查看所有有关的规范。",
    "grammar": "\n<display-outside>\n这些关键字指定了元素的外部显示类型，实际上就是其在流式布局中的角色（即在流式布局中的表现）。\n{{page(\"/zh-CN/docs/Web/CSS/display-outside\", \"Syntax\")}}\n\nInside\n\n<display-inside> (en-US)\n这些关键字指定了元素的内部显示类型，它们定义了该元素内部内容的布局方式（假定该元素为非替换元素 non-replaced element）。\n{{page(\"/zh-CN/docs/Web/CSS/display-inside\", \"Syntax\")}}\n\nList Item\n\n<display-listitem> (en-US)\n将这个元素的外部显示类型变为 block 盒，并将内部显示类型变为多个 list-item inline 盒。\n{{page(\"/zh-CN/docs/Web/CSS/display-listitem\", \"Syntax\")}}\n\nInternal\n\n<display-internal>\n有些布局模型（如 table 和 ruby）有着复杂的内部结构，因此它们的子元素可能扮演着不同的角色。这一类关键字就是用来定义这些“内部”显示类型，并且只有在这些特定的布局模型中才有意义。\nValid <display-internal> values:\ntable-row-group\n\nThese elements behave like <tbody> HTML elements.\n\ntable-header-group\n\nThese elements behave like <thead> HTML elements.\n\ntable-footer-group\n\nThese elements behave like <tfoot> HTML elements.\n\ntable-row\n\nThese elements behave like <tr> HTML elements.\n\ntable-cell\n\nThese elements behave like <td> HTML elements.\n\ntable-column-group\n\nThese elements behave like <colgroup> HTML elements.\n\ntable-column\n\nThese elements behave like <col> HTML elements.\n\ntable-caption\n\nThese elements behave like <caption> HTML elements.\n\nruby-base \nExperimental\n\n\nThese elements behave like <rb> HTML elements.\n\nruby-text \nExperimental\n\n\nThese elements behave like <rt> HTML elements.\n\nruby-base-container \nExperimental\n\n\nThese elements behave like <rbc> HTML elements generated as anonymous boxes.\n\nruby-text-container \nExperimental\n\n\nThese elements behave like <rtc> HTML elements.\n\n\n\nBox\n\n<display-box>\n这些值决定元素是否使用盒模型。\nValid <display-box> values:\ncontents\n\nThese elements don't produce a specific box by themselves. They are replaced by their pseudo-box and their child boxes. Please note that the CSS Display Level 3 spec defines how the contents value should affect \"unusual elements\" — elements that aren't rendered purely by CSS box concepts such as replaced elements. See Appendix B: Effects of display: contents on Unusual Elements for more details.\nDue to a bug in browsers this will currently remove the element from the accessibility tree — screen readers will not look at what's inside. See the Accessibility concerns section below for more details.\n\nnone\n\n\n      Turns off the display of an element so that it has no effect on layout (the document is rendered as though the element did not exist). All descendant elements also have their display turned off.\n      To have an element take up the space that it would normally take, but without actually rendering anything, use the visibility property instead.\n    \n\n\n\nLegacy\n\n<display-legacy>\nCSS 2 对于 display 属性使用单关键字语法，对于相同布局模式的 block 级和 inline 级变体需要使用单独的关键字。\n{{page(\"/en-US /docs/Web/CSS/display-legacy\", \"Syntax\")}}\n",
    "name": "display"
  },
  "empty-cells": {
    "desc": "CSS 中 empty-cells 属性定义了用户端 user agent 应该怎么来渲染表格 <table> 中没有可见内容的单元格的边框和背景。/* Keyword values */empty-cells: show;empty-cells: hide; /* Global values */empty-cells: inherit;empty-cells: initial;empty-cells: unset; 只有当 border-collapse 属性值是 separate 时，才会生效。初始值show适用元素table-cell elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nshow\n边框和背景正常渲染。与普通元素一样。\nhide\n边框和背景被隐藏。\n",
    "initial value": "show",
    "inherit": "yes",
    "applicable elements": "table-cell elements",
    "name": "empty-cells"
  },
  "filter": {
    "desc": "CSS属性 filter 将模糊或颜色偏移等图形效果应用于元素。滤镜通常用于调整图像、背景和边框的渲染。CSS 标准里包含了一些已实现预定义效果的函数。你也可以参考一个 SVG 滤镜，通过一个 URL 链接到 SVG 滤镜元素（SVG filter element）。",
    "grammar": "/* URL to SVG filter */\nfilter: url(\"filters.svg#filter-id\");\n\n/* <filter-function> values */\nfilter: blur(5px);\nfilter: brightness(0.4);\nfilter: contrast(200%);\nfilter: drop-shadow(16px 16px 20px blue);\nfilter: grayscale(50%);\nfilter: hue-rotate(90deg);\nfilter: invert(75%);\nfilter: opacity(25%);\nfilter: saturate(30%);\nfilter: sepia(60%);\n\n/* Multiple filters */\nfilter: contrast(175%) brightness(3%);\n\n/* Use no filter */\nfilter: none;\n\n/* Global values */\nfilter: inherit;\nfilter: initial;\nfilter: revert;\nfilter: unset;\n\n设置一种函数，方法如下：\nfilter: <filter-function> [<filter-function>]* | none\n\n给 SVG 元素 <filter> 引用滤镜，如下：\nfilter: url(file.svg#filter-element-id)\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "filter"
  },
  "flex": {
    "desc": "flex CSS 简写属性设置了弹性项目如何增大或缩小以适应其弹性容器中可用的空间。",
    "grammar": "/* 关键字值 */\nflex: auto;\nflex: initial;\nflex: none;\n\n/* 一个值，无单位数字：flex-grow */\nflex: 2;\n\n/* 一个值，width/height: flex-basis */\nflex: 10em;\nflex: 30px;\nflex: min-content;\n\n/* 两个值：flex-grow | flex-basis */\nflex: 1 30px;\n\n/* 两个值：flex-grow | flex-shrink */\nflex: 2 2;\n\n/* 三个值：flex-grow | flex-shrink | flex-basis */\nflex: 2 2 10%;\n\n/*全局属性值 */\nflex: inherit;\nflex: initial;\nflex: unset;\n\n可以使用一个，两个或三个值来指定 flex属性。\n单值语法: 值必须为以下其中之一：\n\n一个无单位数 (<number>): 它会被当作flex:<number> 1 0; <flex-shrink>的值被假定为 1，然后<flex-basis> 的值被假定为0。\n一个有效的宽度 (width)值：它会被当作 <flex-basis>的值。\n关键字none，auto或initial.\n\n双值语法: 第一个值必须为一个无单位数，并且它会被当作 <flex-grow> 的值。第二个值必须为以下之一：\n\n一个无单位数：它会被当作 <flex-shrink> 的值。\n一个有效的宽度值：它会被当作 <flex-basis> 的值。\n\n三值语法：\n\n第一个值必须为一个无单位数，并且它会被当作 <flex-grow> 的值。\n第二个值必须为一个无单位数，并且它会被当作  <flex-shrink> 的值。\n第三个值必须为一个有效的宽度值，并且它会被当作 <flex-basis> 的值。\n",
    "initial value": "as each of the properties of the shorthand:flex-grow: 0flex-shrink: 1flex-basis: auto",
    "inherit": "否",
    "applicable elements": "flex items, including in-flow pseudo-elements",
    "name": "flex"
  },
  "flex-basis": {
    "desc": "CSS 属性 flex-basis 指定了 flex 元素在主轴方向上的初始大小。如果不使用 box-sizing 改变盒模型的话，那么这个属性就决定了 flex 元素的内容盒（content-box）的尺寸。 Note: 当一个元素同时被设置了 flex-basis (除值为 auto 外) 和 width (或者在 flex-direction: column 情况下设置了height) , flex-basis 具有更高的优先级。",
    "grammar": "\n<'width'>\n\nwidth 值可以是 <length>; 该值也可以是一个相对于其父弹性盒容器主轴尺寸的百分数 。负值是不被允许的。默认为 auto。\n\ncontent\n基于 flex 的元素的内容自动调整大小。\n\nNote:由于最初规范中没有包括这个值，在一些早期的浏览器实现的 flex 布局中，content 值无效，可以利用设置 (width 或 height) 为 auto 达到同样的效果。\n\nNote:简史\n\n最初，\"flex-basis:auto\" 的含义是 \"参照我的width和height属性\".\n在此之后，\"flex-basis:auto\" 的含义变成了自动尺寸，而 \"main-size\" 变成了 \"参照我的width和height属性\"。实际执行于 bug 1032922.\n然后呢，这个更改又在 bug 1093316 中被撤销了，所以 \"auto\" 变回了原来的含义; 而一个新的关键字 'content' 变成了自动尺寸。 (bug 1105111 包括了增加这个关键字).\n\n\n\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "flex items, including in-flow pseudo-elements",
    "name": "flex-basis"
  },
  "flex-direction": {
    "desc": "CSS flex-direction 属性指定了内部元素是如何在 flex 容器中布局的，定义了主轴的方向 (正方向或反方向)。/* The direction text is laid out in a line */flex-direction: row; /* Like <row>, but reversed */flex-direction: row-reverse; /* The direction in which lines of text are stacked */flex-direction: column; /* Like <column>, but reversed */flex-direction: column-reverse; /* Global values */flex-direction: inherit;flex-direction: initial;flex-direction: unset;请注意，值 row 和 row-reverse 受 flex 容器的方向性的影响。如果它的 dir 属性是 ltr，row 表示从左到右定向的水平轴，而 row-reverse 表示从右到左; 如果 dir 属性是 rtl，row 表示从右到左定向的轴，而 row-reverse 表示从左到右。初始值row适用元素flex containers是否是继承属性否计算值as specifiedAnimation typediscrete查看 使用 CSS 弹性盒子 (en-US) 以了解更多的属性和信息。",
    "grammar": "接受以下取值：\n\nrow\nflex 容器的主轴被定义为与文本方向相同。主轴起点和主轴终点与内容方向相同。\nrow-reverse\n表现和 row 相同，但是置换了主轴起点和主轴终点\ncolumn\nflex 容器的主轴和块轴相同。主轴起点与主轴终点和书写模式的前后点相同\ncolumn-reverse\n表现和column相同，但是置换了主轴起点和主轴终点\n\n语法格式\n\n\nrow | row-reverse | column | column-reverse",
    "initial value": "row",
    "inherit": "否",
    "applicable elements": "flex containers",
    "name": "flex-direction"
  },
  "flex-flow": {
    "desc": "",
    "grammar": "Formal syntax: <'flex-direction'> || <'flex-wrap'>",
    "initial value": "as each of the properties of the shorthand:flex-direction: rowflex-wrap: nowrap",
    "inherit": "否",
    "applicable elements": "flex containers",
    "name": "flex-flow"
  },
  "flex-grow": {
    "desc": "CSS 属性 flex-grow CSS 设置 flex 项 主尺寸 的 flex 增长系数。",
    "grammar": "满足CSS 属性值定义语法 <number>。\n/* <number> 值 */\nflex-grow: 3;\nflex-grow: 0.6;\n\n/* 全局值 */\nflex-grow: inherit;\nflex-grow: initial;\nflex-grow: revert;\nflex-grow: unset;\n\nflex-grow 的属性规定为一个 <number>。",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "flex items, including in-flow pseudo-elements",
    "name": "flex-grow"
  },
  "flex-shrink": {
    "desc": "CSS flex-shrink 属性指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值。flex-shrink: 2;flex-shrink: 0.6; /* Global values */flex-shrink: inherit;flex-shrink: initial;flex-shrink: unset初始值1适用元素flex items, including in-flow pseudo-elements是否是继承属性否计算值as specifiedAnimation typea number更多属性和定义请参见使用 CSS 弹性盒子 (en-US)",
    "grammar": "\n<number>\n负值是不被允许的。参考 <number>。\n\nFormal syntax\n<number>\n\n",
    "initial value": "1",
    "inherit": "否",
    "applicable elements": "flex items, including in-flow pseudo-elements",
    "name": "flex-shrink"
  },
  "flex-wrap": {
    "desc": "CSS 的 flex-wrap 属性指定 flex 元素单行显示还是多行显示。如果允许换行，这个属性允许你控制行的堆叠方向。",
    "grammar": "flex-wrap: nowrap; /* Default value */\nflex-wrap: wrap;\nflex-wrap: wrap-reverse;\n\n/* Global values */\nflex-wrap: inherit;\nflex-wrap: initial;\nflex-wrap: revert;\nflex-wrap: unset;\n\nflex-wrap 属性可指定为以下取值列表中的任意一个关键字。",
    "initial value": "nowrap",
    "inherit": "否",
    "applicable elements": "flex containers",
    "name": "flex-wrap"
  },
  "float": {
    "desc": "float CSS 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动（文档流）中移除，尽管仍然保持部分的流动性（与绝对定位相反）。",
    "grammar": "/* Keyword values */\nfloat: left;\nfloat: right;\nfloat: none;\nfloat: inline-start;\nfloat: inline-end;\n\n/* Global values */\nfloat: inherit;\nfloat: initial;\nfloat: revert;\nfloat: unset;\n\nfloat 属性的值被指定为单一的关键字，值从下面的值列表中选择。",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements, but has no effect if the value of display is none.",
    "name": "float"
  },
  "font": {
    "desc": "",
    "grammar": "\n与任何简写属性一样，任何未指定的值都将设置为其对应的初始值（可能覆盖先前使用非简写属性设置的值）。虽然不能通过 font 直接设置，但是font-stretch，font-size-adjust 和 font-kerning 也会重置为初始值。",
    "name": "font"
  },
  "font-family": {
    "desc": "CSS 属性 font-family 允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 @font-face 指定的可以直接下载的字体。通常会使用属性缩写 font 来设置 font-size 和其他与字体相关的属性。应当至少在使用的 font-family 列表中添加一个通用的字体族名，因为无法保证用户的计算机内已经安装了指定的字体，也不能保证使用 @font-face 提供的字体移动能够正确地下载。提供通用的字体族使得浏览器可以在无法得到最佳字体的情况下使用一个相对接近的备选字体。font-family 属性指定的是一个优先级从高到低的可选字体列表。字体的选定不是在发现用户计算机上安装的列表中的第一个字体时停止。相反，对字体的选择是逐字进行的。也就是说即使某个字符周围都在某个字体中可以显示，但该字符在当前的字体文件中没有适合的图形，那么会继续尝试列表中靠后的字体。（不过这在 Internet Explorer 6 以及之前的版本的 IE 浏览器中不适用。）当一个字体只在某些特定的 font-style (en-US)、 font-variant (en-US)、或 font-size (en-US) 属性值下有效时，这些属性的值也可能对字体族 font family 的选择造成影响。",
    "grammar": "\n<family-name>\n一个字体族的名字。例如\"Times\" 和 \"Helvetica\" 都是字体族名。字体族名可以包含空格，但包含空格时应该用引号。\n<generic-name>\n\n通用字体族名是一种备选机制，用于在指定的字体不可用时给出较好的字体。通用字体族名都是关键字，所以不可以加引号。在列表的末尾应该至少有一个通用字体族名。以下是该属性可能的取值以及他们的定义。\n\nserif\n带衬线字体，笔画结尾有特殊的装饰线或衬线。\n  例如：Lucida Bright, Lucida Fax, Palatino, \"Palatino Linotype\", Palladio, \"URW Palladio\", serif.\nsans-serif\n无衬线字体，即笔画结尾是平滑的字体。\n  例如， \"Open Sans\", \"Fira Sans\", \"Lucida Sans\", \"Lucida Sans Unicode\", \"Trebuchet MS\", \"Liberation Sans\", \"Nimbus Sans L\", sans-serif.\nmonospace\n等宽字体，即字体中每个字宽度相同。\n  例如， \"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace.\ncursive\n草书字体。这种字体有的有连笔，有的还有特殊的斜体效果。因为一般这种字体都有一点连笔效果，所以会给人一种手写的感觉。\n  例如，\"Brush Script MT\", \"Brush Script Std\", \"Lucida Calligraphy\", \"Lucida Handwriting\", \"Apple Chancery\", cursive.\nfantasy\nFantasy 字体主要是那些具有特殊艺术效果的字体。\n  例如，Papyrus, Herculanum, Party LET, Curlz MT, Harrington, fantasy.\nsystem-ui\n从浏览器所处平台处获取的默认用户界面字体。由于世界各地的排版习惯之间有很大的差异，这个通用选项 is provided for typefaces that don't map cleanly into the other generics.\nmath\n针对显示数学相关字符的特殊样式问题而设计的字体：支持上标和下标、跨行括号、嵌套表达式和具有不同含义的 double struck glyphs。\nemoji\n专门用于呈现 Emoji 表情符号的字体。\nfangsong\n一种汉字字体，介于宋体和楷体之间。这种字体常用于某些政府文件。\n\n\n",
    "initial value": "depends on user agent",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-family"
  },
  "font-feature-settings": {
    "desc": "font-feature-settings 属性用于控制 OpenType 字体中的高级印刷功能。",
    "grammar": "\nnormal\n文本使用默认设置进行布局。\n<feature-tag-value>\n在呈现文本时，OpenType 要素标记值的列表被传递到文本布局引擎以启用或禁用字体特征。标签始终是 4 个 ASCII 字符的 <string> 。如果是 U + 20 - U + 7E 代码点范围以外的字符或字符个数不对，则整个属性无效。 \n 值是一个正整数。两个关键字 on 和 off 分别是 1 和 0 的同义词。如果未设置任何值，则默认值为 1。对于非布尔型 OpenType 功能（例如，文体替代 stylistic alternates），该值意味着要选择特定的字形；对于布尔值，它是一个开关。\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-feature-settings"
  },
  "font-kerning": {
    "desc": "font-kerning CSS 属性设置是否使用字体中储存的字距信息。/* Keyword values */font-kerning: auto;font-kerning: normal;font-kerning: none; /* Global values */font-kerning: inherit;font-kerning: initial;font-kerning: unset; Kerning（字距）定义了字母的分布情况。对于良好地规定了字距的字体，字距特性使得字母分布更为统一，阅读体验更佳。如下图所示，左侧的示例没有应用字距，而右侧使用了： 初始值auto适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n浏览器来决定是否使用字体字距。比如，一些浏览器会在小字体的情况下禁用字距，因为这会使得文本可读性下降。\nnormal\n必须应用字体中的字距信息。\nnone\n禁用字体中的字距信息。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-kerning"
  },
  "font-language-override": {
    "desc": "font-language-override CSS 属性控制在指定的语言中使用特定的字形。/* 关键字作为值 */font-language-override: normal; /* 字符串作为值 */font-language-override: \"ENG\"; /* Use English glyphs */font-language-override: \"TRK\"; /* Use Turkish glyphs */ /* 使用全局值 */font-language-override: initial;font-language-override: inherit;font-language-override: unset;默认情况下，HTML 的 lang 属性告诉浏览器使用语言的特定字形。例如，很多字体都有针对合成符 fi 的字形（i 上的点会被合并进 f 里）。而当使用土耳其语时，字体就不会使用合成字形。因为土耳其语有两个版本的 i: 一个带点 (i) 一个不带点 (ı)。这种情况下如果使用连写会把带点的 i 不正确地渲染成不带点的 ı。font-language-override属性可以使你重载针对特定语言的字体行为。当你使用的字体缺少对某种语言的正确支持时，这很有用。例如，如果一种字体没有针对阿塞拜疆语的适当规则，你可以强制字体使用遵循类似规则的土耳其语字形。初始值normal适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnormal\n指示浏览器使用适合 lang 属性指定的语言的字体字形。这是默认值。\nstring\n指示浏览器使用适合该字符串指定的语言的字体字形。该字符串必须与 OpenType 语言系统中的语言标签相匹配。例如，\"ENG \"是英语，\"KOR \"是韩语。\n\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-language-override"
  },
  "font-optical-sizing (en-US)": {
    "desc": "The font-optical-sizing CSS property sets whether text rendering is optimized for viewing at different sizes.",
    "grammar": "/* keyword values */\nfont-optical-sizing: none;\nfont-optical-sizing: auto; /* default */\n\n/* Global values */\nfont-optical-sizing: inherit;\nfont-optical-sizing: initial;\nfont-optical-sizing: revert;\nfont-optical-sizing: revert-layer;\nfont-optical-sizing: unset;\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-optical-sizing (en-US)"
  },
  "font-size": {
    "desc": "font-size CSS 属性指定字体的大小。因为该属性的值会被用于计算 em 和 ex 长度单位，定义该值可能改变其他元素的大小。/* <absolute-size>，绝对大小值 */font-size: xx-small;font-size: x-small;font-size: small;font-size: medium;font-size: large;font-size: x-large;font-size: xx-large; /* <relative-size>，相对大小值 */font-size: larger;font-size: smaller; /* <length>，长度值 */font-size: 12px;font-size: 0.8em; /* <percentage>，百分比值 */font-size: 80%; font-size: inherit; 初始值medium适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yesPercentagesrefer to the parent element's font size计算值as specified, but with relative lengths converted into absolute lengthsAnimation typea length",
    "grammar": "\nxx-small, x-small, small, medium, large, x-large, xx-large\n该套绝对大小关键字定义相对于用户的默认字体大小 (medium)。与展示 HTML 的<font size=\"1\"> 到<font size=\"7\">（用户默认字体大小<font size=\"3\">）类似。\nlarger, smaller\n比父元素的字体大或小，使用与上面的关键字的相近缩放比率。\n<length> \n正数<length>.。当单位为em或ex时，大小为相对于父元素的文字的大小。例如，0.5em就是当前元素的父元素的字体大小的一半。\n<percentage>\n父元素字体大小的正数<percentage>\n\n最好使用用户默认字体大小的相对大小，避免使用除了em或ex的绝对大小单位。但是如果一定要使用绝对大小的话，px是众多单位中最好的选择，因为它的含义不会随着操作系统所认为的屏幕分辨率的大小（通常是不对的）改变而改变。",
    "initial value": "medium",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-size"
  },
  "font-size-adjust": {
    "desc": "",
    "grammar": "/* 仍使用 font size 的值 */\nfont-size-adjust: none;\n\n/* 使用小写字母大小为 font size 一半大小的字体大小 */\nfont-size-adjust: 0.5;\n\nfont-size-adjust: inherit;\n",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-size-adjust"
  },
  "font-stretch": {
    "desc": "",
    "grammar": "/* Keyword values */\nfont-stretch: ultra-condensed;\nfont-stretch: extra-condensed;\nfont-stretch: condensed;\nfont-stretch: semi-condensed;\nfont-stretch: normal;\nfont-stretch: semi-expanded;\nfont-stretch: expanded;\nfont-stretch: extra-expanded;\nfont-stretch: ultra-expanded;\n\n/* Global values */\nfont-stretch: inherit;\nfont-stretch: initial;\nfont-stretch: unset;\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-stretch"
  },
  "font-style": {
    "desc": "font-style CSS 属性允许你选择 font-family 字体下的 italic 或 oblique 样式。 Italic 样式一般是指书写体，相比无样式的字体，通常会占用较少的高度，而 oblique 字形一般只是常规字形的倾斜版本。斜体（italic）和倾斜体（oblique）都是通过人工倾斜常规字体的字形来模拟的（使用 font-synthesis 对此进行控制）。Italic font faces are generally cursive in nature, usually using less horizontal space than their unstyled counterparts, while oblique faces are usually just sloped versions of the regular face. When the specified style is not available, both italic and oblique faces are simulated by artificially sloping the glyphs of the regular face (use font-synthesis to control this behavior).",
    "grammar": "\nnormal\n选择 font-family 的常规字体。\nitalic\n选择斜体，如果当前字体没有可用的斜体版本，会选用倾斜体（oblique ）替代。\noblique\n选择倾斜体，如果当前字体没有可用的倾斜体版本，会选用斜体（italic ）替代。If one or more oblique faces are available in the chosen font family, the one that most closely matches the specified angle is chosen. If no oblique faces are available, the browser will synthesize an oblique version of the font by slanting a normal face by the specified amount. Valid values are degree values of -90deg to 90deg inclusive. If an angle is not specified, an angle of 14 degrees is used. Positive values are slanted to the end of the line, while negative values are slanted towards the beginning.\n\n In general, for a requested angle of 14 degrees or greater, larger angles are prefered; otherwise, smaller angles are preferred (see the spec's font matching section for the precise algorithm).\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-style"
  },
  "font-synthesis": {
    "desc": "font-synthesis CSS 属性控制浏览器可以合成（synthesize）哪些缺失的字体，粗体或斜体。 大多数标准西方字体包含斜体和粗体变体，但许多新颖（novelty）的字体不包括这些。用于中文、日文、韩文和其他语标文字（logographic script）的字体往往不含这些变体，同时，从默认字体中生成、合成这些变体可能会妨碍文本的易读性。在这些情况下，可能最好关闭浏览器默认的 font-synthesis 字体合成特性。初始值weight style适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n此关键词表示不合成粗体字型（typeface）或斜体字型。\nweight\n此关键词表示，如果需要的话，可以合成粗体字型。\nstyle\n此关键词表示，如果需要的话，可以合成斜体字型。\n",
    "initial value": "weight style",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-synthesis"
  },
  "font-variant": {
    "desc": "font-variant 属性是font-variant-caps, font-variant-numeric, font-variant-alternates, font-variant-ligatures, font-variant-east-asian (en-US)等属性的简写。你也可以使用简写 font 设定font-variant在 CSS Level 2 (Revision 1) 中的值（即normal 或 small-caps）。",
    "grammar": "\nnormal\n规定一个常规（normal）字型；每个非简写的属性的初始值都是 normal。属于 font-variant 的非简写属性有：font-variant-caps, font-variant-numeric, font-variant-alternates, font-variant-ligatures 和 font-variant-east-asian (en-US)。\nnone\n将font-variant-ligatures设定为 none ，将其他非简写属性的值设定为初始值normal。\n<common-lig-values>, <discretionary-lig-values>, <historical-lig-values>, <contextual-alt-values>\n规定与font-variant-ligatures属性相关的关键字，可能的值包括： common-ligatures, no-common-ligatures, discretionary-ligatures, no-discretionary-ligatures, historical-ligatures, no-historical-ligatures, contextual 和 no-contextual。\nstylistic(),  historical-forms, styleset(), character-variant(), swash(), ornaments(), annotation()\n规定与font-variant-alternates属性相关的关键字和函数。\nsmall-caps, all-small-caps, petite-caps, all-petite-caps, unicase, titling-caps\n规定与font-variant-caps 属性相关的关键字和函数。\n<numeric-figure-values>, <numeric-spacing-values>, <numeric-fraction-values>, ordinal, slashed-zero\n规定与font-variant-alternates属性相关的关键字，可能的值包括：lining-nums, oldstyle-nums, proportional-nums, tabular-nums, diagonal-fractions, stacked-fractions, ordinal 和 slashed-zero。\n<east-asian-variant-values>, <east-asian-width-values>, ruby\n规定与font-variant-east-asian (en-US)属性相关的关键字，可能的值包括：jis78, jis83, jis90, jis04, simplified, traditional, full-width, proportional-width, ruby。\n\nnormal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]where <common-lig-values> = [ common-ligatures | no-common-ligatures ]<discretionary-lig-values> = [ discretionary-ligatures | no-discretionary-ligatures ]<historical-lig-values> = [ historical-ligatures | no-historical-ligatures ]<contextual-alt-values> = [ contextual | no-contextual ]<feature-value-name> = <custom-ident><numeric-figure-values> = [ lining-nums | oldstyle-nums ]<numeric-spacing-values> = [ proportional-nums | tabular-nums ]<numeric-fraction-values> = [ diagonal-fractions | stacked-fractions ]<east-asian-variant-values> = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]<east-asian-width-values> = [ full-width | proportional-width ]",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant"
  },
  "font-variant-alternates": {
    "desc": "font-variant-alternates CSS 属性控制备用字体的使用。这些替代字体可以通过@font-feature-values中定义的替代名称来引用。/* Keyword values */font-variant-alternates: normal;font-variant-alternates: historical-forms; /* Functional notation values */font-variant-alternates: stylistic(user-defined-ident);font-variant-alternates: styleset(user-defined-ident);font-variant-alternates: character-variant(user-defined-ident);font-variant-alternates: swash(user-defined-ident);font-variant-alternates: ornaments(user-defined-ident);font-variant-alternates: annotation(user-defined-ident);font-variant-alternates: swash(ident1) annotation(ident2); /* Global values */font-variant-alternates: initial;font-variant-alternates: inherit;font-variant-alternates: unset; 在 @font-feature-values 规则中可以定义替代字体的函数 (stylistic, styleset, character-variant, swash, ornament 或 annotation), 将名称与 OpenType 参数相关联。此属性允许样式表中使用那些易于理解的名称 (定义于 @font-feature-values)。",
    "grammar": "\nnormal\n此关键字禁用备用字体。\nhistorical-forms\n此关键字启用历史类型 - 过去常见但今天不常见的字体。它对应于 OpenType 值 hist.\nstylistic()\n此函数可以为个别字体启用字体样式替换。该参数是特定于字体映射到数字的名称。它对应于 OpenType 值 salt，例如salt 2。\nstyleset()\n此函数可以对字符集启用字体样式替换。该参数是特定于字体映射到数字的名称。它对应于 OpenType 的值 ssXY，例如 ss02。\ncharacter-variant()\n此函数启用字符的特定样式替代。它与 styleset（）类似，但是不会为一组字符创建连贯的字形；单个字符将具有独立且不一定一致的样式。该参数是映射到数字的特定于字体的名称。它对应于 OpenType 值 cvXY，例如cv02。\nswash()\n此函数启用斜字体。该参数是特定于字体映射到数字的名称。它对应于 OpenType 值 swsh 和 cswh，例如swsh 2 和cswh 2。\nornaments()\n此函数可启用装饰物，例如 fleurons 与其他 dingbat 字形。该参数是特定于字体映射到数字的名称。它对应于 OpenType 值 ornm，例如 ornm 2。\n 注意： 为了保留文本语义，字体设计师应该包括与 Unicode dingbat 字符不匹配的装饰，作为项目符号字符（U + 2022）的装饰变体。请注意，某些现有字体不遵循此建议。\n\nannotation()\n此函数支持注释，如带圆圈的数字或倒置的字符。该参数是特定于字体映射到数字的名称。它对应于 OpenType 值nalt，例如 nalt 2。\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-alternates"
  },
  "font-variant-caps": {
    "desc": "CSS属性 font-variant-caps 使您可以控制大写字母特殊字符的使用。 如果项目的字体库中包含不同大小的大写字母特殊字符，该属性将选择其中最接近指定大小的字符。例如，如果字体中没有“特小”(petite) 型大写字母，该字符将会被以“小”(small) 型大写字母进行渲染。如果这些字符均不存在，浏览器将用默认大写字符集进行尺寸加工。字体库中有时会包含无大小写的特殊字符（例如标点符号）的不同写法来适应在文本中临近的大写字母。但是，小型大写字母永远不会被用来加工无大小写的字符。",
    "grammar": "/* Keyword values */\nfont-variant-caps: normal;\nfont-variant-caps: small-caps;\nfont-variant-caps: all-small-caps;\nfont-variant-caps: petite-caps;\nfont-variant-caps: all-petite-caps;\nfont-variant-caps: unicase;\nfont-variant-caps: titling-caps;\n\n/* Global values */\nfont-variant-caps: inherit;\nfont-variant-caps: initial;\nfont-variant-caps: unset;\n\nfont-variant-caps 属性使用以下列表中的单一关键词确定。在任一使用场景中，如果字体库不支持 OpenType 值，则会被尺寸加工。",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-caps"
  },
  "font-variant-east-asian (en-US)": {
    "desc": "The font-variant-east-asian CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.font-variant-east-asian: normal;font-variant-east-asian: ruby;font-variant-east-asian: jis78; /* <east-asian-variant-values> */font-variant-east-asian: jis83; /* <east-asian-variant-values> */font-variant-east-asian: jis90; /* <east-asian-variant-values> */font-variant-east-asian: jis04; /* <east-asian-variant-values> */font-variant-east-asian: simplified; /* <east-asian-variant-values> */font-variant-east-asian: traditional; /* <east-asian-variant-values> */font-variant-east-asian: full-width; /* <east-asian-width-values> */font-variant-east-asian: proportional-width; /* <east-asian-width-values> */font-variant-east-asian: ruby full-width jis83; /* Global values */font-variant-east-asian: inherit;font-variant-east-asian: initial;font-variant-east-asian: revert;font-variant-east-asian: revert-layer;font-variant-east-asian: unset;",
    "grammar": "\nnormal\n\nThis keyword leads to the deactivation of the use of such alternate glyphs.\n\nruby\n\nThis keyword forces the use of special glyphs for ruby characters. As these are usually smaller, font creators often designs specific forms, usually slightly bolder to improve the contrast. This keyword corresponds to the OpenType values ruby.\n\n<east-asian-variant-values>\n\nThese values specify a set of logographic glyph variants which should be used for display. Possible values are:\n\n\n\nKeyword\nStandard defining the glyphs\nOpenType equivalent\n\n\n\n\njis78\nJIS X 0208:1978\njp78\n\n\njis83\nJIS X 0208:1983\njp83\n\n\njis90\nJIS X 0208:1990\njp90\n\n\njis04\nJIS X 0213:2004\njp04\n\n\nsimplified\nNone, use the simplified Chinese glyphs\nsmpl\n\n\ntraditional\nNone, use the traditional Chinese glyphs\ntrad\n\n\n\n\n<east-asian-width-values>\n\nThese values control the sizing of figures used for East Asian characters. Two values are possible:\n\nproportional-width activating the set of East Asian characters which vary in width. It corresponds to the OpenType values pwid.\nfull-width activating the set of East Asian characters which are all of the same, roughly square, width metric. It corresponds to the OpenType values fwid.\n\n\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-east-asian (en-US)"
  },
  "font-variant-ligatures": {
    "desc": "font-variant-ligatures 属性控制着其所应用元素文本的 ligatures 与 contextual forms 。 会使文字最终的表现形式更加统一。",
    "grammar": "\nnormal\n默认值，表示在渲染时会使用常用的连字，连字的效果取决于字体，语言和脚本。\nnone\n不使用任何连字，包括常规的形式\n<common-lig-values>\nThese values control the most common ligatures, like for fi, ffi, th or similar. They correspond to the OpenType values liga and clig. Two values are possible:\n \ncommon-ligatures activating these ligatures. Note that the keyword normal activates these ligatures.\nno-common-ligatures deactivating these ligatures.\n\n\n<discretionary-lig-values>\nThese values control specific ligatures, specific to the font and defined by the type designer. They correspond to the OpenType values dlig. Two values are possible:\n \ndiscretionary-ligatures activating these ligatures.\nno-discretionary-ligatures deactivating the ligatures. Note that the keyword normal usually deactivates these ligatures.\n\n\n<historical-lig-values>\nThese values control the ligatures used historically, in old books, like the German tz digraph being displayed as ꜩ. They correspond to the OpenType values hlig. Two values are possible:\n \nhistorical-ligatures activating these ligatures.\nno-historical-ligatures deactivating the ligatures. Note that the keyword normal usually deactivates these ligatures.\n\n\n<contextual-alt-values>\nThese values control whether letters adapt to their context—that is, whether they adapt to the surrounding letters. These values correspond to the OpenType values calt. Two values are possible:\n \ncontextual specifies that the contextual alternates are to be used. Note that the keyword normal usually activates these ligatures too.\nno-contextual prevents their use.\n\n\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-ligatures"
  },
  "font-variant-numeric": {
    "desc": "font-variant-numeric CSS 属性控制数字，分数和序号标记的替代字形的使用。",
    "grammar": "\nnormal\n\n下列特性均不启用。\n\nordinal\n启用序数形式显示。对序号标记强制启用特殊字形，如英文中的 1st，2nd，3rd，4th ，意大利文中的 1a。等同于 OpenType 特性 ordn。\nslashed-zero\n启用区分零显示。强制使用带有斜杠的 0；常用于区分 O 和 0。等同于 OpenType 特性 zero。\n<numeric-figure-values>\n下列值用于控制数字样式，可用值如下：\n \nlining-nums 启用内衬数字显示。使数字全部对齐到基线。等同于 OpenType 特性 lnum。\noldstyle-nums 启用旧式数字显示。部分数字如 3、4、7、9 会有下沉。等同于 OpenType 特性 onum。\n\n\n<numeric-spacing-values>\n下列值用于控制数字宽度，可用值如下：\n \nproportional-nums 启用比例数字显示。使数字变成基于字形本身形状下的特定宽度表现。等同于 OpenType 特性 pnum。\ntabular-nums 启用表格数字显示。使数字等宽，易于像表格那样对齐。等同于 OpenType 特性 tnum。\n\n\n<numeric-fraction-values>\n下列值用于控制分数字形，可用值如下：\n \ndiagonal-fractions 启用斜角分数显示。使分子和分母变成像下标字，并用变长的斜线分隔。等同于 OpenType 特性 frac。\nstacked-fractions 启用标准分数显示。使分子在上，分母在下，并用水平线分隔。等同于 OpenType 特性 afrc。\n\n\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-numeric"
  },
  "font-variant-position": {
    "desc": "The font-variant-position CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.The glyphs are positioned relative to the baseline of the font, which remains unchanged. These glyphs are typically used in <sub> and <sup> elements./* Keyword values */font-variant-position: normal;font-variant-position: sub;font-variant-position: super; /* Global values */font-variant-position: inherit;font-variant-position: initial;font-variant-position: unset; When the usage of these alternate glyphs is activated, if one character in the run doesn't have such a typographically-enhanced glyph, the whole set of characters of the run is rendered using a fallback method, synthesizing these glyphs.These alternate glyphs share the same em-box and the same baseline as the rest of the font. They are merely graphically enhanced, and have no effect on the line-height and other box characteristics.初始值normal适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnormal\nDeactivates alternate superscript and subscript glyphs.\nsub\nActivates subscript alternate glyphs. If, in a given run, one such glyph is not available for a character, all the characters in the run are rendered using synthesized glyphs.\nsuper\nActivates superscript alternate glyphs. If, in a given run, one such glyph is not available for a character, all the characters in the run are rendered using synthesized glyphs.\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variant-position"
  },
  "font-variation-settings": {
    "desc": "font-variation-settings CSS 属性提供了对 variable font 特征的低级控制，通过指定要更改的特征的四个字母轴名称及其值。 Note: This property is a low-level mechanism designed to set variable font features where no other way to enable or access those features exist. You should only use it when no basic properties exist to set those features (e.g. font-weight, font-style).Note: font characteristics set using font-variation-settings will always override those set using the corresponding basic font properties, e.g. font-weight, no matter where they appear in the cascade. In some browsers, this is currently only true when the @font-face declaration includes a font-weight range.",
    "grammar": "This property's value can take one of two forms:\n\nnormal\nText is laid out using default settings.\n<string> <number>\nWhen rendering text, the list of variable font axis names is passed to the text layout engine to enable or disable font features. Each setting is always one or more pairs consisting of a <string> of 4 ASCII characters followed by a number indicating the axis value to set. If the <string> has more or fewer characters or contains characters outside the U+20 - U+7E codepoint range, the whole property is invalid. The <number> can be fractional or negative, depending on the value range available in your font, as defined by the font designer.\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-variation-settings"
  },
  "font-weight": {
    "desc": "",
    "grammar": "",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "font-weight"
  },
  "forced-color-adjust (en-US)": {
    "desc": "The forced-color-adjust CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.",
    "grammar": "\nauto\n\nThe element's colors are adjusted by the user agent in forced colors mode. This is the default.\n\nnone\n\nThe element's colors are not automatically adjusted by the user agent in forced colors mode.\n\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements and text",
    "name": "forced-color-adjust (en-US)"
  },
  "gap (grid-gap)": {
    "desc": "CSS gap 属性是用来设置网格行与列之间的间隙（gutters），该属性是 row-gap 和 column-gap 的简写形式。",
    "grammar": "/* One <length> value */\ngap: 20px;\ngap: 1em;\ngap: 3vmin;\ngap: 0.5cm;\n\n/* One <percentage> value */\ngap: 16%;\ngap: 100%;\n\n/* Two <length> values */\ngap: 20px 10px;\ngap: 1em 0.5em;\ngap: 3vmin 2vmax;\ngap: 0.5cm 2mm;\n\n/* One or two <percentage> values */\ngap: 16% 100%;\ngap: 21px 82%;\n\n/* calc() values */\ngap: calc(10% + 20px);\ngap: calc(20px + 10%) calc(10% - 5px);\n\n/* Global values */\ngap: inherit;\ngap: initial;\ngap: revert;\ngap: revert-layer;\ngap: unset;\n\n该属性用来表示 <'row-gap'> 和 <'column-gap'> 的值（<'column-gap'> 是可选的）。假如 <'column-gap'> 缺失的话，则会被设置成跟 <'row-gap'> 一样的的值。\n<'row-gap'> 和 <'column-gap'> 都可以用 <length> 或者 <percentage> 来表示。",
    "initial value": "as each of the properties of the shorthand:row-gap: normalcolumn-gap: normal",
    "inherit": "否",
    "applicable elements": "multi-column elements, flex containers, grid containers",
    "name": "gap (grid-gap)"
  },
  "grid": {
    "desc": "grid 是一个 CSS 简写属性，可以用来设置以下属性： 显式网格属性 grid-template-rows、grid-template-columns 和 grid-template-areas， 隐式网格属性 grid-auto-rows、grid-auto-columns 和 grid-auto-flow， 间距属性 grid-column-gap (en-US) 和 grid-row-gap (en-US)。 注意：您仅可在一个 grid 属性中声明显式或隐式网格。与其他简写属性同样，若有次级属性未被声明，其将使用初始值。另外，尽管此简写声明无法设置网格的槽（gutter），槽会被该声明重置。",
    "grammar": "\n<'grid-template'>\n定义了 grid-template，其包含 grid-template-columns，grid-template-rows 和 grid-template-areas。\n<'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?\n通过 grid-template-rows 属性显式设置行轨道来设置自动流（grid-template-columns 属性设为 none），并通过 grid-auto-columns 明确该如何自动重复列轨道（同时grid-auto-rows属性设为 auto）。grid-auto-flow 属性也被相应的设置为 column，并可附有 dense。\n所有其余 grid 次级属性被重置为初始值。\n[ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>\n通过 grid-template-columns 属性显式设置列轨道来设置自动流（grid-template-rows 属性设为 none），并通过 grid-auto-rows 明确该如何自动重复行轨道（同时grid-auto-columns属性设为 auto）。grid-auto-flow 属性也被相应的设置为 row，并可附有 dense。\n所有其余 grid 次级属性被重置为初始值。\n",
    "name": "grid"
  },
  "grid-area": {
    "desc": "CSS 属性 grid-area 是一种对于 grid-row-start (en-US)、grid-column-start (en-US)、grid-row-end (en-US) 和 grid-column-end (en-US) 的简写，通过基线（line），跨度（span）或没有（自动）的网格放置在 grid row 中指定一个网格项的大小和位置，继而确定 grid area 的边界。/* Keyword values */grid-area: auto;grid-area: auto / auto;grid-area: auto / auto / auto;grid-area: auto / auto / auto / auto; /* <custom-ident> values */grid-area: some-grid-area;grid-area: some-grid-area / another-grid-area; /* <integer> && <custom-ident>? values */grid-area: some-grid-area 4;grid-area: some-grid-area 4 / 2 another-grid-area; /* span && [ <integer> || <custom-ident> ] values */grid-area: span 3;grid-area: span 3 / span some-grid-area;grid-area: 2 span / another-grid-area span; /* Global values */grid-area: inherit;grid-area: initial;grid-area: unset; 如果指定了 4 个 <grid-line> 的值，grid-row-start 会被设为第一个值，grid-column-start 为第二个值， grid-row-end 为第三个值，grid-column-end 为第四个值。当 grid-column-end 被忽略时，若 grid-column-start 为一 <custom-ident>（自定义关键字数据类型）， grid-column-end 则为该 <custom-ident>；否则为 auto。当 grid-row-end 被忽略时，若 grid-row-start 为一 <custom-ident>，grid-row-end 则为该 <custom-ident>；否则为 auto。当 grid-column-start 被忽略时，若 grid-row-start 为一 <custom-ident>，则所有四项普通写法的属性值均为该值。否则为 auto。网格面的属性亦可设为一 <custom-ident> 作为其名称，然后可通过 grid-template-areas 放置。",
    "grammar": "\nauto\n该关键字表明该属性未指定该如何纺织网格项目。网格项目会被以默认跨度（span）1自动放置。\n<custom-ident> 自定义关键字数据类型\n如果存在以 '<custom-ident>-start'/'<custom-ident>-end' 命名的自定义基线，它会将第一个这样的基线贡献给网格单元以布置。\n 注意： 被命名的网格区域（grid areas）会自动生成隐式的被命名的基线，因此指定 grid-row: foo; 将会选择这个命名区域的开始和结束的边界（除非在它之前存在显式指定的以 foo-start/foo-end 命名的其他基线）。\n否则，它就会被当作整数 1 与 <custom-ident> 一起指定。\n\n<integer> && <custom-ident>?\n将第 n 条网格基线贡献给网格单元布置。如果指定的是负数，则指的是从下边界向上边界计算的反向顺序。如果提供的是 <custom-ident>，那么只有以此命名的基线才会被计算。如果所命名的基线数超过了网格线数，为了找到该位置，所有隐式的网格线会被假定拥有这个命名。\ninteger 值不能为 0。\nspan && [ <integer> || <custom-ident> ]\n为网格单元定义一个跨度，使得网格单元的网格区域中的一条边界远离另一条边界线 n 条基线。如果提供的是\n <custom-ident>，则只有以此命名的基线才会被计算。如果网格线不足，则假定与搜索方向对应的显式网格一侧的所有隐式网格线都具有该名称。\n\n\n如果忽略 <integer> ，它就默认设为 1。它的值也不能为 0。\n\n",
    "name": "grid-area"
  },
  "grid-auto-columns": {
    "desc": "CSS 属性 grid-auto-columns 指定了隐式创建的网格纵向轨道（track）的宽度。 如果一个表格项目被定位在没有使用 grid-template-columns 显式指定尺寸的列中，隐式的 grid 轨道就会被创建出来支撑它。显式地定位到超出范围的列中，或者通过自动布局算法创建额外的列，就会发生上述情况。",
    "grammar": "\n<length>\n指定一个非负的数作为尺寸。\n<percentage>\n一个非负的百分数（<percentage>），相对于 grid 容器的尺寸。如果 grid 的尺寸不确定，该百分值就会被当作 auto 对待。\n<flex>\n一个以 fr 为单位非负的尺寸，表示轨道的伸缩系数。每个以 <flex> 定义尺寸的轨道会以该伸缩系数为比例来占据剩余的可用空间。如果使用 minmax()，则表示自动缩小并指定最大尺寸（也就是 minmax(auto, <flex>)）。\nmax-content\n一个关键字，表示以网格项的最大的内容来占据网格轨道。\nmin-content\n一个关键字，表示以网格项的最大的最小内容来占据网格轨道。\nminmax(min, max)\n定义一个尺寸范围，即大于或等于 min 值，并且小于或等于 max 值。如果 max 值小于 min 值，那么 max 值会被忽略并且最终表现为 min 值。最大值可以设置为网格轨道系数值<flex> ，但最小值则不行。\nfit-content(argument)\n相当于公式 min(max-content, max(auto, argument))，类似于auto 的计算 (即 minmax(auto, max-content))，除了网格轨道大小值是确定下来的，否则该值都大于 auto 的最小值。\nauto\n如果该网格轨道为最大时，该属性等同于 <max-content> ，为最小时，则等同于 <min-content> 。\n\nNote: auto 轨道尺寸 (且只为 auto 值时) 才可以被 align-content 和 justify-content 属性拉伸。\n\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-auto-columns"
  },
  "grid-auto-flow": {
    "desc": "grid-auto-flow 属性控制着自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列。",
    "grammar": "\nrow\n该关键字指定自动布局算法按照通过逐行填充来排列元素，在必要时增加新行。如果既没有指定 row 也没有 column，则默认为 row。\ncolumn\n该关键字指定自动布局算法通过逐列填充来排列元素，在必要时增加新列。\ndense\n该关键字指定自动布局算法使用一种“稠密”堆积算法，如果后面出现了稍小的元素，则会试图去填充网格中前面留下的空白。这样做会填上稍大元素留下的空白，但同时也可能导致原来出现的次序被打乱。\n\n如果省略它，使用一种「稀疏」算法，在网格中布局元素时，布局算法只会「向前」移动，永远不会倒回去填补空白。这保证了所有自动布局元素「按照次序」出现，即使可能会留下被后面元素填充的空白。\n\n",
    "initial value": "row",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-auto-flow"
  },
  "grid-auto-rows": {
    "desc": "CSS 属性 grid-auto-rows 用于指定隐式创建的行轨道大小。 如果定位到某行中的网格元素没有使用 grid-template-rows来指定大小，则会隐式创建grid 轨道来保存它。这可能在显示定位到超出范围的行，或者由自动放置算法创建额外的行时发生。",
    "grammar": "\n<length>\n一个非负的长度。\n<percentage>\n相对于网格窗口块尺寸的非负 <percentage> 值。如果网格容器的块尺寸是不确定的，则百分比值将被视为 auto。\n<flex>\n非负的、以 fr 为单位的维度指定轨道的弹性因子。每个 <flex>-尺寸的轨道都按其弹性因子的比例挤占剩余空间的一部分。\n 当使用在 minmax() 符号外时，意味着最小值为 auto (例： minmax(auto, <flex>)).\n\nmax-content\n关键词，指明由网格元素中占用空间最大的那一个来决定轨道的尺寸。\nmin-content\n关键词，指明由网格元素中占用空间最小的那一个来决定轨道的尺寸。\nminmax(min, max)\n函数符号，定义一个不小于min且不大于max的尺寸范围。如果max比min小，则max会被忽略，函数会被录作min处理。作为最大值，<flex> 值设置了轨道的弹性因子。作为最小值，会被当作 0 处理（或者最小内容——当网格容器指定了尺寸为最小内容）。\nauto\n关键字，当用来指定最大值时与最大内容一致，当用来指定最小值时，它表示轨道中所有网格元素最小尺寸中的最大值（由min-width/min-height指定）。\n\n注意：auto 轨道尺寸（且仅有 auto 轨道尺寸）可配合align-content 和justify-content 属性使用。\n\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-auto-rows"
  },
  "grid-column": {
    "desc": "grid-column CSS 属性是 grid-column-start (en-US) 和 grid-column-end (en-US) 的简写属性，用于指定网格项目的大小和位置{ 通过为它的网格位置贡献线条，跨度或不添加任何内容（自动），从而指定其 grid area。",
    "grammar": "\nauto\n\n 是一个关键字，指示该属性对网格项目的放置没有任何作用，表示自动放置，自动跨度或默认跨度为 1。\n\n<custom-ident>\n\n 如果有一个名为\"<custom-ident>-start\"/\"<custom-ident>-start\"的命名行，则它将第一行添加到网格项目的位置。\n\n注意：命名网格区域会自动生成这种形式的隐式命名行，因此请指定grid-column: foo;将选择该命名网格区域的开始/结束边缘（除非在其之前明确指定了另一条名为foo-start / foo-end的行）。\n\n否则，将其视为与<custom-ident>一起指定了整数 1。\n\n<integer> && <custom-ident>?\n\n 将第 n 条网格线贡献到网格项目的位置。如果给定一个负整数，则从显式网格的末端开始，反向计数。\n如果将名称指定为<custom-ident>，则仅计算具有该名称的行。如果没有足够多的具有该名称的线，则假定所有隐式网格线都具有该名称，以查找该位置。\ninteger的值为0无效。\nspan && [ <integer> || <custom-ident> ]\n 将网格范围扩展到该网格项目的位置，以使该网格项目的网格区域的相应边缘距离相对边缘 n 行。\n 如果将名称指定为<custom-ident>，则仅计算具有该名称的行。如果没有足够多的具有该名称的线，则为计算此跨度，假定与搜索方向相对应的显式网格侧的所有隐式网格线均具有该名称。\n如果省略<integer>，则默认为1。负整数或 0 无效。",
    "initial value": "as each of the properties of the shorthand:grid-column-start (en-US): autogrid-column-end (en-US): auto",
    "inherit": "否",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-column"
  },
  "grid-column-end (en-US)": {
    "desc": "The grid-column-end CSS property specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
    "grammar": "/* Keyword value */\ngrid-column-end: auto;\n\n/* <custom-ident> values */\ngrid-column-end: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-column-end: 2;\ngrid-column-end: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-column-end: span 3;\ngrid-column-end: span somegridarea;\ngrid-column-end: 5 somegridarea span;\n\n/* Global values */\ngrid-column-end: inherit;\ngrid-column-end: initial;\ngrid-column-end: revert;\ngrid-column-end: revert-layer;\ngrid-column-end: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-column-end (en-US)"
  },
  "grid-column-start (en-US)": {
    "desc": "The grid-column-start CSS property specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
    "grammar": "/* Keyword value */\ngrid-column-start: auto;\n\n/* <custom-ident> value */\ngrid-column-start: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-column-start: 2;\ngrid-column-start: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-column-start: span 3;\ngrid-column-start: span somegridarea;\ngrid-column-start: span somegridarea 5;\n\n/* Global values */\ngrid-column-start: inherit;\ngrid-column-start: initial;\ngrid-column-start: revert;\ngrid-column-start: revert-layer;\ngrid-column-start: unset;\n\nThis property is specified as a single <grid-line> value. A <grid-line> value can be specified as:\n\neither the auto keyword\nor a <custom-ident> value\nor an <integer> value\nor both <custom-ident> and <integer>, separated by a space\nor the keyword span together with either a <custom-ident> or an <integer> or both.\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-column-start (en-US)"
  },
  "grid-row": {
    "desc": "grid-row 属性是一种 grid-row-start (en-US) 和 grid-row-end (en-US) 的缩写（shorthand）形式，它定义了网格单元与网格行（row）相关的尺寸和位置，可以通过在网格布局中的基线（line），跨度（span），或者什么也不做（自动），从而指定 grid area 的行起始与行结束。 如果指定了两个 <grid-line> 值，那么斜杠号前的值就被指定为 grid-row-start，斜杠后面的值就被指定为 grid-row-end 的值。",
    "grammar": "\nauto\n表示对网格的布置行为不做干涉，即自动布置，自动的 span 或者默认 span 值为 1。\n<custom-ident>\n如果存在自定义的基线名（'<custom-ident>-start'/'<custom-ident>-end'），它就将第一个这样的基线贡献给网格单元。\n 注意： 被命名的网格区域（grid areas）会自动生成隐式的被命名的基线，因此指定 grid-row: foo; 将会选择这个命名区域的开始和结束的边界（除非在它之前存在显式指定的以 foo-start/foo-end 命名的其他基线）。\n否则，它就会被当作整数 1 与 <custom-ident> 一起指定。\n\n<integer> && <custom-ident>?\n将第 n 条网格基线贡献给网格单元布置。如果指定的是负数，则指的是从下边界向上边界计算的反向顺序。如果提供的是 <custom-ident>，那么只有以此命名的基线才会被计算。如果所命名的基线数超过了网格线数，为了找到该位置，所有隐式的网格线会被假定拥有这个命名。\ninteger 值不能为 0。\nspan && [ <integer> || <custom-ident> ]\n为网格单元定义一个跨度，使得网格单元的网格区域中的一条边界远离另一条边界线 n 条基线。如果提供的是 <custom-ident>，则只有以此命名的基线才会被计算。如果网格线不足，则假定与搜索方向对应的显式网格一侧的所有隐式网格线都具有该名称。\n\n如果忽略 <integer> ，它就默认设为 1。它的值也不能为 0。\n\n",
    "initial value": "as each of the properties of the shorthand:grid-row-start (en-US): autogrid-row-end (en-US): auto",
    "inherit": "否",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-row"
  },
  "grid-row-end (en-US)": {
    "desc": "The grid-row-end CSS property specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
    "grammar": "/* Keyword value */\ngrid-row-end: auto;\n\n/* <custom-ident> values */\ngrid-row-end: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-row-end: 2;\ngrid-row-end: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-row-end: span 3;\ngrid-row-end: span somegridarea;\ngrid-row-end: 5 somegridarea span;\n\n/* Global values */\ngrid-row-end: inherit;\ngrid-row-end: initial;\ngrid-row-end: revert;\ngrid-row-end: revert-layer;\ngrid-row-end: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-row-end (en-US)"
  },
  "grid-row-start (en-US)": {
    "desc": "The grid-row-start CSS property specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
    "grammar": "/* Keyword value */\ngrid-row-start: auto;\n\n/* <custom-ident> values */\ngrid-row-start: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-row-start: 2;\ngrid-row-start: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-row-start: span 3;\ngrid-row-start: span somegridarea;\ngrid-row-start: 5 somegridarea span;\n\n/* Global values */\ngrid-row-start: inherit;\ngrid-row-start: initial;\ngrid-row-start: revert;\ngrid-row-start: revert-layer;\ngrid-row-start: unset;\n\nThis property is specified as a single <grid-line> value. A <grid-line> value can be specified as:\n\neither the auto keyword\nor a <custom-ident> value\nor an <integer> value\nor both <custom-ident> and <integer>, separated by a space\nor the keyword span together with either a <custom-ident> or an <integer> or both.\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
    "name": "grid-row-start (en-US)"
  },
  "grid-template": {
    "desc": "grid-template，CSS 属性简写，用以定义网格中行、列与分区。",
    "grammar": "/* 值为关键词 */\ngrid-template: none;\n\n/* 为 grid-template-rows / grid-template-columns */\ngrid-template: 100px 1fr / 50px 1fr;\ngrid-template: auto 1fr / auto 1fr auto;\ngrid-template: [linename] 100px / [columnname1] 30% [columnname2] 70%;\ngrid-template: fit-content(100px) / fit-content(40%);\n\n/* 为 grid-template-areas grid-template-rows / grid-template-column */\ngrid-template: \"a a a\"\n               \"b b b\";\ngrid-template: \"a a a\" 20%\n               \"b b b\" auto;\ngrid-template: [header-top] \"a a a\"     [header-bottom]\n                 [main-top] \"b b b\" 1fr [main-bottom]\n                            / auto 1fr auto;\n\n/* 为全局值 */\ngrid-template: inherit;\ngrid-template: initial;\ngrid-template: unset;\n",
    "initial value": "as each of the properties of the shorthand:grid-template-columns: nonegrid-template-rows: nonegrid-template-areas: none",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-template"
  },
  "grid-template-areas": {
    "desc": "grid-template-areas CSS 属性是网格区域 grid areas 在 CSS 中的特定命名。 网格区块 (grid areas) 和网格项 (grid item) 沒有关联，但是它们可以和一些网格定位属性 (grid-placement properties) 关联起来，比如grid-row-start (en-US)， grid-row-end (en-US)， grid-column-start (en-US)和grid-column-end (en-US)；也可以和一些速记 (shorthands) 属性关联起来，比如grid-row，grid-column 和 grid-area。",
    "grammar": "\nnone\n网格容器没有定义任何的网格区块 (grid areas)。\n<string>+\n每一个给定的字符串会生成一行，一个字符串中用空格分隔的每一个单元 (cell) 会生成一列。多个同名的，跨越相邻行或列的单元称为网格区块 (grid area)。非矩形的网格区块是无效的。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-template-areas"
  },
  "grid-template-columns": {
    "desc": "grid-template-columns 该属性是基于 网格列. 的维度，去定义网格线的名称和网格轨道的尺寸大小。",
    "grammar": "\nnone\n这个关键字表示不明确的网格。所有的列和其大小都将由grid-auto-columns 属性隐式的指定。\n<length>\n非负值的长度大小。\n<percentage>\n非负值且相对于网格容器的 <百分比>。 如果网格容器的尺寸大小依赖网格轨道的大小（比如 inline-grid ），则百分比值将被视为auto。\n为了遵守网格的百分比，网格轨道本身定义的大小，将自动被调整为相对网格容器大小，并且是以最小量将网格轨道调整到最终的大小。\n<flex>\n非负值，用单位 fr 来定义网格轨道大小的弹性系数。 每个定义了 <flex> 的网格轨道会按比例分配剩余的可用空间。当外层用一个 minmax() 表示时，它将是一个自动最小值 (即 minmax(auto, <flex>) ) .\nmax-content\n是一个用来表示以网格项的最大的内容来占据网格轨道的关键字。\nmin-content\n是一个用来表示以网格项的最大的最小内容来占据网格轨道的关键字。\nminmax(min, max)\n是一个来定义大小范围的属性，大于等于 min 值，并且小于等于 max 值。如果 max 值小于 min 值，则该值会被视为 min 值。最大值可以设置为网格轨道系数值<flex> ，但最小值则不行。\n\nNote:  该规范在将来可能会允许设置最小值为 flex ，也会调整网格轨道算法 (track sizing algorithm) 计算出正确的大小。\n\nauto\n如果该网格轨道为最大时，该属性等同于 <max-content> ，为最小时，则等同于 <min-content> 。\n\nNote: 网格轨道大小为 auto (且只有为 auto ) 时，才可以被属性align-content 和 justify-content 拉伸。\n\nfit-content( [ <length> | <percentage> ] )\n相当于公式 min(max-content, max(auto, argument))，类似于auto 的计算 (即 minmax(auto, max-content))，除了网格轨道大小值是确定下来的，否则该值都大于 auto 的最小值。\nrepeat( [ <positive-integer> | auto-fill | auto-fit ] , <track-list> )\n表示网格轨道的重复部分，以一种更简洁的方式去表示大量而且重复列的表达式。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-template-columns"
  },
  "grid-template-rows": {
    "desc": "grid-template-rows 该属性是基于 网格行 的维度，去定义网格线的名称和网格轨道的尺寸大小。",
    "grammar": "\nnone\n这个关键字表示不明确的网格。所有的行和其大小都将由grid-auto-rows 属性隐式的指定。\n<length>\n非负值的长度大小。\n<percentage>\n非负值且相对于网格容器的 <百分比>。 如果网格容器的尺寸大小依赖网格轨道的大小（比如 inline-grid ），则百分比值将被视为auto。\n为了遵守网格的百分比，网格轨道本身定义的大小，将自动被调整为相对网格容器大小，并且是以最小量将网格轨道调整到最终的大小。\n<flex>\n非负值，用单位 fr 来定义网格轨道大小的弹性系数。 每个定义了 <flex> 的网格轨道会按比例分配剩余的可用空间。当外层用一个 minmax() 表示时，它将是一个自动最小值 (即 minmax(auto, <flex>) ) 。\nmax-content\n是一个用来表示以网格项的最大的内容来占据网格轨道的关键字。\nmin-content\n是一个用来表示以网格项的最大的最小内容来占据网格轨道的关键字。\nminmax(min, max)\n是一个来定义大小范围的属性，大于等于 min 值，并且小于等于 max 值。如果 max 值小于 min 值，则该值会被视为 min 值。最大值可以设置为网格轨道系数值<flex> ，但最小值则不行。 \n\nNote:  该规范在将来可能会允许设置最小值为 flex ，也会调整网格轨道算法 (track sizing algorithm) 计算出正确的大小。\n\nauto\n如果该网格轨道为最大时，该属性等同于 <max-content> ，为最小时，则等同于 <min-content> 。\n\nNote: 网格轨道大小为 auto (且只有为 auto ) 时，才可以被属性align-content 和 justify-content 拉伸。\n\nfit-content( [ <length> | <percentage> ] )\n相当于公式 min(max-content, max(auto, argument))，类似于auto 的计算 (即 minmax(auto, max-content))，除了网格轨道大小值是确定下来的，否则该值都大于 auto 的最小值。\nrepeat( [ <positive-integer> | auto-fill | auto-fit ] , <track-list> )\n表示网格轨道的重复部分，以一种更简洁的方式去表示大量而且重复行的表达式。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "grid containers",
    "name": "grid-template-rows"
  },
  "hanging-punctuation": {
    "desc": "hanging-punctuation CSS 属性指定了标点符号应该放在文本句子的开头还是结尾。悬挂标点符号可能被放在线框外。/* Keyword values */hanging-punctuation: none;hanging-punctuation: first;hanging-punctuation: last;hanging-punctuation: force-end;hanging-punctuation: allow-end; /* Two keywords */hanging-punctuation: first force-end;hanging-punctuation: first allow-end;hanging-punctuation: first last;hanging-punctuation: last force-end;hanging-punctuation: last allow-end; /* Three keywords */hanging-punctuation: first force-end last;hanging-punctuation: first allow-end last; /* Global values */hanging-punctuation: inherit;hanging-punctuation: initial;hanging-punctuation: unset; 初始值none适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n无悬挂字符。\nfirst\n显示元素的第一个格式化行开头的括号或引号。\nlast\n显示元素的最后一个格式化行结尾的括号或引号。\nforce-end\n显示行结尾处的句号或逗号。\nallow-end\n如果预先没有其它适合的来适应的，则在行尾显示句号或逗号。\n",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "hanging-punctuation"
  },
  "height": {
    "desc": "height CSS 属性指定了一个元素的高度。默认情况下，这个属性决定的是内容区（ content area）的高度，但是，如果将 box-sizing 设置为 border-box , 这个属性决定的将是边框区域（border area）的高度。 min-height 和 max-height 属性会覆盖 height。",
    "grammar": "\n<length>\n将高度定义为一个绝对值。\n<percentage>\n将高度定义为相对包含块高度的百分比。\nborder-box \nExperimental\n\n如果设置该值，则 <length> 或者 <percentage> 会设置为该元素的 border box。\ncontent-box \nExperimental\n\n如果设置该值，则 <length> 或者 <percentage> 会设置为该元素的 content box。\n\n\nauto\n由浏览器为元素计算并选择一个高度。\nfill \nExperimental\n\n根据文字方向，使用 fill-available 作为行大小或者块大小。\nmax-content \nExperimental\n\n设置为允许的最大高度。\nmin-content \nExperimental\n\n设置为允许的最小高度。\navailable \nExperimental\n\n包含块高度减去当前元素的边距，边框和填充。\nfit-content \nExperimental\n\n将 fill-content 公式中的可用位置替换为特定的参数以进行使用，如：min(max-content, max(min-content, ))\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
    "name": "height"
  },
  "hyphenate-character (en-US)": {
    "desc": "The hyphenate-character CSS property sets the character (or string) used at the end of a line before a hyphenation break.Both automatic and soft hyphens are displayed according to the specified hyphenate-character value.",
    "grammar": "\n<string>\n\n\n      The <string> to use at the end of the line before a hyphenation break.\n      The user agent may truncate this value if too many characters are used.\n    \n\nauto\n\n\n      The user-agent selects an appropriate string based on the content language's typographic conventions.\n      This is the default property value, and only needs to be explicitly set in order to override a different inherited value.\n    \n\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "hyphenate-character (en-US)"
  },
  "hyphens": {
    "desc": "",
    "grammar": "hyphens: none;\nhyphens: manual;\nhyphens: auto;\n\n/* Global values */\nhyphens: inherit;\nhyphens: initial;\nhyphens: unset;\n",
    "initial value": "manual",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "hyphens"
  },
  "image-rendering": {
    "desc": "CSS 属性 image-rendering 用于设置图像缩放算法。它适用于元素本身，适用于元素其他属性中的图像，也应用于子元素。The user agent will scale an image when the page author specifies dimensions other than its natural size. Scaling may also occur due to user interaction (zooming). 举个例子，如果有一张尺寸为 100×100px 的图片，但作者有意将尺寸设置为 200×200px（或50×50px），然后，图片便会根据 image-rendering 指定的算法，缩小或放大到新尺寸。此属性对于未缩放的图像没有影响。 Note: The Canvas API can provide a fallback solution for crisp-edges through manual image data manipulation.",
    "grammar": "\nauto\n自 Gecko 1.9（Firefox 3.0）起，Gecko 使用双线性（bilinear）算法进行重新采样（高质量）。\nsmooth \nExperimental\n\n应使用能最大化图像客观观感的算法来缩放图像。特别地，会“平滑”颜色的缩放算法是可以接受的，例如双线性插值。这适用于照片等类型的图像。\nhigh-quality \nExperimental\n\nIdentical to smooth, but with a preference for higher-quality scaling. If system resources are constrained, images with high-quality should be prioritized over those with any other value, when considering which images to degrade the quality of and to what degree.\ncrisp-edges\n必须使用可有效保留对比度和图像中的边缘的算法来对图像进行缩放，并且，该算法既不会平滑颜色，又不会在处理过程中为图像引入模糊。合适的算法包括最近邻居（nearest-neighbor）算法和其他非平滑缩放算法，比如 2×SaI 和 hqx-* 系列算法。此属性值适用于像素艺术作品，例如一些网页游戏中的图像。\npixelated\n放大图像时，使用最近邻居算法，因此，图像看着像是由大块像素组成的。缩小图像时，算法与 auto 相同。\n\n\n注意：The values optimizeQuality and optimizeSpeed present in an early draft (and coming from its SVG counterpart) are defined as synonyms for the smooth and pixelated values respectively.\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "image-rendering"
  },
  "image-resolution (en-US)": {
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The image-resolution CSS property specifies the intrinsic resolution of all raster images used in or on the element. It affects content images such as replaced elements and generated content, and decorative images such as background-image images.The image resolution is defined as the number of image pixels per unit length, e.g., pixels per inch. By default, CSS assumes a resolution of one image pixel per CSS px unit; however, the image-resolution property allows a different resolution to be specified.",
    "grammar": "\n<resolution>\n\nSpecifies the intrinsic resolution explicitly.\n\nfrom-image\n\nUses the intrinsic resolution as specified by the image format. If the image does not specify its own resolution, the explicitly specified resolution is used (if given), else it defaults to 1dppx (1 image pixel per CSS px unit).\n\nsnap\n\nIf the snap keyword is provided, the computed resolution is the specified resolution rounded to the nearest value that would map one image pixel to an integer number of device pixels. If the resolution is taken from the image, then the used intrinsic resolution is the image's native resolution similarly adjusted.\n\n\n\nNote: As vector formats such as SVG do not have an intrinsic resolution, this property has no effect on vector images.\n",
    "initial value": "1dppx",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "image-resolution (en-US)"
  },
  "ime-mode (en-US)": {
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The ime-mode CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete./* Keyword values */ime-mode: auto;ime-mode: normal;ime-mode: active;ime-mode: inactive;ime-mode: disabled; /* Global values */ime-mode: inherit;ime-mode: initial;ime-mode: revert;ime-mode: revert-layer;ime-mode: unset; The ime-mode property is only partially and inconsistently implemented in browsers. It was introduced by Microsoft with Internet Explorer 5 as a proprietary extension. Note: In general, it's not appropriate for a public web site to change the IME mode. This property should only be used for private web applications or to undo the property if it was previously set by legacy code.",
    "grammar": "\nauto\n\nNo change is made to the current input method editor state. This is the default.\n\nnormal\n\nThe IME state should be normal; this value can be used in a user style sheet to override the page's setting. This value is not supported by Internet Explorer.\n\nactive\n\nThe input method editor is initially active; text entry is performed through it unless the user specifically dismisses it. Not supported on Linux.\n\ninactive\n\nThe input method editor is initially inactive, but the user may activate it if they wish. Not supported on Linux.\n\ndisabled\n\nThe input method editor is disabled and may not be activated by the user.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "text fields",
    "name": "ime-mode (en-US)"
  },
  "initial-letter (en-US)": {
    "desc": "The initial-letter CSS property sets styling for dropped, raised, and sunken initial letters./* Keyword values */initial-letter: normal; /* Numeric values */initial-letter: 1.5; /* Initial letter occupies 1.5 lines */initial-letter: 3.0; /* Initial letter occupies 3 lines */initial-letter: 3.0 2; /* Initial letter occupies 3 lines and sinks 2 lines */ /* Global values */initial-letter: inherit;initial-letter: initial;initial-letter: revert;initial-letter: revert-layer;initial-letter: unset;",
    "grammar": "\nnormal\n\nNo special initial-letter effect. Text behaves as normal.\n\n<number>\n\nDefines the size of the initial letter, in terms of how many lines it occupies. Negative values are not allowed.\n\n<integer>\n\nDefines the number of lines the initial letter should sink when the size of it is given. Values must be greater than zero. If omitted, it duplicates the size value, floored to the nearest positive whole number.\n\n",
    "initial value": "normal",
    "inherit": "no",
    "applicable elements": "::first-letter pseudo-elements and inline-level first child of a block container",
    "name": "initial-letter (en-US)"
  },
  "initial-letter-align (en-US)": {
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The initial-letter-align CSS property specifies the alignment of initial letters within a paragraph./* Keyword values */initial-letter-align: auto;initial-letter-align: alphabetic;initial-letter-align: hanging;initial-letter-align: ideographic; /* Global values */initial-letter-align: inherit;initial-letter-align: initial;initial-letter-align: revert;initial-letter-align: revert-layer;initial-letter-align: unset;",
    "grammar": "\nauto\n\nThe user agent selects the value which corresponds to the language of the text. Western languages would default to alphabetic, CJK languages to ideographic, and some Indic languages to hanging.\n\nalphabetic\n\nAs described above, the cap height of the initial letter aligns with the cap height of the first line of text. The baseline of the initial letter aligns with the baseline of the Nth text baseline.\n\nhanging\n\nThe hanging baseline of the initial letter aligns with the hanging baseline of the first line of text.\n\nideographic\n\nThe initial letter is centered in the N-line area.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "::first-letter pseudo-elements and inline-level first child of a block container",
    "name": "initial-letter-align (en-US)"
  },
  "inline-size": {
    "desc": "inline-size CSS 属性影响一个元素的width 或 height，以改变一个元素的盒模型的水平或垂直大小（是 width 还是 height 取决于该元素的writing-mode）。",
    "grammar": "inline-size属性的可选值与width和height的可选值一样。",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "same as width and height",
    "name": "inline-size"
  },
  "inset (en-US)": {
    "desc": "The inset CSS property is a shorthand that corresponds to the top, right, bottom, and/or left properties. It has the same multi-value syntax of the margin shorthand.",
    "grammar": "/* <length> values */\ninset: 10px; /* value applied to all edges */\ninset: 4px 8px; /* top/bottom left/right */\ninset: 5px 15px 10px; /* top left/right bottom */\ninset: 2.4em 3em 3em 3em; /* top right bottom left */\n\n/* <percentage>s of the width (left/right) or height (top/bottom) of the containing block */\ninset: 10% 5% 5% 5%;\n\n/* Keyword value */\ninset: auto;\n\n/* Global values */\ninset: inherit;\ninset: initial;\ninset: revert;\ninset: revert-layer;\ninset: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset (en-US)"
  },
  "inset-block (en-US)": {
    "desc": "The inset-block CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\ninset-block-end\ninset-block-start\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-block (en-US)"
  },
  "inset-block-end (en-US)": {
    "desc": "The inset-block-end CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\ninset-block-end: 3px;\ninset-block-end: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-block-end: 10%;\n\n/* Keyword value */\ninset-block-end: auto;\n\n/* Global values */\ninset-block-end: inherit;\ninset-block-end: initial;\ninset-block-end: revert;\ninset-block-end: revert-layer;\ninset-block-end: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-block-end (en-US)"
  },
  "inset-block-start (en-US)": {
    "desc": "The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\ninset-block-start: 3px;\ninset-block-start: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-block-start: 10%;\n\n/* Keyword value */\ninset-block-start: auto;\n\n/* Global values */\ninset-block-start: inherit;\ninset-block-start: initial;\ninset-block-start: revert;\ninset-block-start: revert-layer;\ninset-block-start: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-block-start (en-US)"
  },
  "inset-inline (en-US)": {
    "desc": "The inset-inline CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\ninset-inline-end\ninset-inline-start\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-inline (en-US)"
  },
  "inset-inline-end (en-US)": {
    "desc": "The inset-inline-end CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\ninset-inline-end: 3px;\ninset-inline-end: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-inline-end: 10%;\n\n/* Keyword value */\ninset-inline-end: auto;\n\n/* Global values */\ninset-inline-end: inherit;\ninset-inline-end: initial;\ninset-inline-end: revert;\ninset-inline-end: revert-layer;\ninset-inline-end: unset;\n\nThe shorthand for inset-inline-start and inset-inline-end is inset-inline.",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-inline-end (en-US)"
  },
  "inset-inline-start (en-US)": {
    "desc": "The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\ninset-inline-start: 3px;\ninset-inline-start: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-inline-start: 10%;\n\n/* Keyword value */\ninset-inline-start: auto;\n\n/* Global values */\ninset-inline-start: inherit;\ninset-inline-start: initial;\ninset-inline-start: revert;\ninset-inline-start: revert-layer;\ninset-inline-start: unset;\n\nThe shorthand for inset-inline-start and inset-inline-end is inset-inline.",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "positioned elements",
    "name": "inset-inline-start (en-US)"
  },
  "isolation": {
    "desc": "",
    "grammar": "Formal syntax:  auto | isolate\nisolation: auto;\nisolation: isolate;\n\nisolation: initial;\nisolation: inherit;\nisolation: unset;\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.",
    "name": "isolation"
  },
  "justify-content": {
    "desc": "CSS justify-content 属性定义了浏览器之间，如何分配顺着弹性容器主轴 (或者网格行轴) 的元素之间及其周围的空间。/* Positional alignment */justify-content: center; /* 居中排列 */justify-content: start; /* Pack items from the start */justify-content: end; /* Pack items from the end */justify-content: flex-start; /* 从行首起始位置开始排列 */justify-content: flex-end; /* 从行尾位置开始排列 */justify-content: left; /* Pack items from the left */justify-content: right; /* Pack items from the right */ /* Baseline alignment */justify-content: baseline;justify-content: first baseline;justify-content: last baseline; /* Distributed alignment */justify-content: space-between; /* 均匀排列每个元素 首个元素放置于起点，末尾元素放置于终点 */justify-content: space-around; /* 均匀排列每个元素 每个元素周围分配相同的空间 */justify-content: space-evenly; /* 均匀排列每个元素 每个元素之间的间隔相等 */justify-content: stretch; /* 均匀排列每个元素 'auto'-sized 的元素会被拉伸以适应容器的大小 */ /* Overflow alignment */justify-content: safe center;justify-content: unsafe center; /* Global values */justify-content: inherit;justify-content: initial;justify-content: unset;当 length 属性和自动外边距属性（margin: auto）生效之后，对齐已经完成了。也就是说，如果存在至少一个弹性元素，而且这个元素的 flex-grow 属性不等于 0，那么对齐方式不会生效，就像没有多余空间的情况。 初始值normal适用元素flex containers是否是继承属性否计算值as specifiedAnimation typediscrete可以参考 使用 CSS 弹性框 (en-US)获取更多信息。",
    "grammar": "\nstart\n从行首开始排列。每行第一个元素与行首对齐，同时所有后续的元素与前一个对齐。\n\n\nflex-start\n从行首开始排列。每行第一个弹性元素与行首对齐，同时所有后续的弹性元素与前一个对齐。\nflex-end\n从行尾开始排列。每行最后一个弹性元素与行尾对齐，其他元素将与后一个对齐。\ncenter\n伸缩元素向每行中点排列。每行第一个元素到行首的距离将与每行最后一个元素到行尾的距离相同。\nleft\n伸缩元素一个挨一个在对齐容器得左边缘，如果属性的轴与内联轴不平行，则left的行为类似于start。\nright\n元素以容器右边缘为基准，一个挨着一个对齐，如果属性轴与内联轴不平行，则right的行为类似于end。\nbaseline\n first baseline\nlast baseline\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nspace-between\n在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素与行首对齐，每行最后一个元素与行尾对齐。\nspace-around\n在每行上均匀分配弹性元素。相邻元素间距离相同。每行第一个元素到行首的距离和每行最后一个元素到行尾的距离将会是相邻元素之间距离的一半。\nspace-evenly\nflex 项都沿着主轴均匀分布在指定的对齐容器中。相邻 flex 项之间的间距，主轴起始位置到第一个 flex 项的间距，主轴结束位置到最后一个 flex 项的间距，都完全一样。\nstretch\nIf the combined size of the items is less than the size of the alignment container, any auto-sized items have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container along the main axis.\nsafe\n与对齐关键字一起使用，如果选定的关键字会导致元素溢出容器造成数据丢失，那么将会使用 start 代替它。\nunsafe\nRegardless of the relative sizes of the item and alignment container, the given alignment value is honored.\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "flex containers",
    "name": "justify-content"
  },
  "justify-items": {
    "desc": "CSS 的 justify-items 属性为所有盒中的项目定义了默认的 justify-self ， 可以使这些项目以默认方式沿适当轴线对齐到每个盒子。 该属性的作用效果取决于我们使用的布局模式： 在块级布局中，会将其包含的项目在其行内轴上对齐；绝对定位的元素中，会将其包含的项目在其行内轴上对齐，同时考虑 top、left、bottom、right 的值；表格单元中，该属性被忽略（块级元素、绝对定位元素和表格布局中对齐的更多信息）；弹性盒子布局中，该属性被忽略（弹性盒子中对齐的更多信息）；栅格布局中，会将其栅格区域内的项目在其行内轴上对齐（栅格布局中对齐的更多信息）；",
    "grammar": "\nauto\n使用的值是父元素的 justify-items 属性的值，除非该方框没有父元素，或者是绝对定位的，在这些情况下，auto 代表 normal。\nnormal\n这个关键字的效果取决于我们所处的布局模式：\n \n在块级布局中，相当于是 start。\nIn absolutely-positioned layouts, the keyword behaved like start on replaced absolutely-positioned boxes, and as stretch on all other absolutely-positioned boxes.\nIn table cell layouts, this keyword has no meaning as this property is ignored.\nIn flexbox layouts, this keyword has no meaning as this property is ignored.\nIn grid layouts, this keyword leads to a behavior similar to the one of stretch, except for boxes with an aspect ratio or an intrinsic sizes where it behaves like start.\n\n\nstart\nThe item is packed flush to each other toward the start edge of the alignment container in the appropriate axis.\nend\nThe item is packed flush to each other toward the end edge of the alignment container in the appropriate axis.\nflex-start\nFor items that are not children of a flex container, this value is treated like start.\nflex-end\nFor items that are not children of a flex container, this value is treated like end.\nself-start\nThe item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis.\nself-end\nThe item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\ncenter\nThe items are packed flush to each other toward the center of the of the alignment container.\nleft\nThe items are packed flush to each other toward the left edge of the alignment container. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nright\nThe items are packed flush to each other toward the right edge of the alignment container in the appropriate axis. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nbaseline\n first baseline\nlast baseline\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nstretch\nIf the combined size of the items is less than the size of the alignment container, any auto-sized items have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container.\nsafe\nIf the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\nunsafe\nRegardless of the relative sizes of the item and alignment container, the given alignment value is honored.\nlegacy\nMakes the value inherited by the box descendants. Note that if a descendant has a justify-self: auto value, the legacy keyword is not considered by the descend, only the left, right, or center value associated to it.\n",
    "initial value": "legacy",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "justify-items"
  },
  "justify-self": {
    "desc": "CSS justify-self 属性设置单个盒子在其布局容器适当轴中的对其方式。 此属性的效果取决于我们所处的布局模式： 在块级布局中，它对齐一个项目在其包含块的内联轴上。对于绝对定位的元素，它对齐一个项目在其包含块的内联轴上，同时计算 top，left，bottom 与 right 的值。（原文：it aligns an item inside its containing block on the inline axis, accounting for the offset values of top, left, bottom, and right.）在表格布局中，这个属性被忽略（更多 关于块、绝对定位以及表格布局中的对齐方式）在弹性布局中，这个属性被忽略（更对 关于弹性布局中的对齐方式）在栅格布局中，它对齐一个元素到该元素所在的栅格区域的内联轴上。（更多 关于栅格布局中的对齐方式）",
    "grammar": "\nauto\n该值使用其父级元素盒子的 justify-items 属性的值，除非它没有父级元素，或者是绝对定位的，这些情况下，auto 代表了 normal。\nnormal\n这个效果取决于我们所处的布局模式：\n \n在块级布局中，这个关键字是 start 的同义词。\n在绝对定位的布局中，在可置换绝对定位的盒子中，这个关键字表现的与 start 相似，在其他绝对定位的盒子中，其表现得与 stretch 相似。\n在表格布局中，由于这个属性被忽略所以这个关键字没有作用。\n在弹性布局中，由于这个属性被忽略所以这个关键字没有作用。\n在栅格布局中，这个关键字会导致类似于 stretch 的行为，除了具有高宽比或固有大小的盒子，它的行为类似于 start 。\n\n\nstart\n项目被放置到适当的轴上，朝向对齐容器的起始边缘，彼此齐平。\nend\n项目被放置到适当的轴上，朝向对齐容器的末端边缘，彼此齐平。\nflex-start\n对于非弹性容器子元素的项目，这个值被视为 start 。\nflex-end\n对于非弹性容器子元素的项目，这个值被视为 end.\nself-start\nThe item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis.\nself-end\nThe item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\ncenter\n项目被放置在对齐容器的中心向彼此平齐。\nleft\n项目在对齐容器的左边缘，并彼此对齐。如果属性的轴与内联轴不平行，则此值的行为类似于start 。\nright\n项目在对齐容器的右边缘，并彼此对齐。如果属性的轴与内联轴不平行，则此值的行为类似于 start 。\nbaseline\n first baseline\nlast baseline\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nstretch\nIf the combined size of the items is less than the size of the alignment container, any auto-sized items have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container.\nsafe\nIf the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\nunsafe\nRegardless of the relative sizes of the item and alignment container, the given alignment value is honored.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "block-level boxes, absolutely-positioned boxes, and grid items",
    "name": "justify-self"
  },
  "left": {
    "desc": "CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。/* <length> values */left: 3px;left: 2.4em; /* <percentage>s of the width of the containing block */left: 10%; /* Keyword value */left: auto; /* Global values */left: inherit;left: initial;left: unset; left的效果取决于元素的position属性： 当position设置为absolute或fixed时，left属性指定了定位元素左外边距边界与其包含块左边界之间的偏移。当position设置为relative时，left属性指定了元素的左边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，left属性的效果和 position 为relative等同；如果元素在 viewport 外面，left属性的效果和 position 为fixed等同。当position设置为static时，left属性无效。 当left和right​​​​​​同时指定时，元素的位置会被重复指定。当容器是从左到右时，left的值会被优先设定；当容器是从右到左时，right的值会被优先设定。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the width of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
    "grammar": "\n<length>\n可以是负的，正的 或者 null <length> 表示：\n \n对于绝对定位的元素，元素左外边距边界与其包含块左边界之间的偏移。\n对于相对定位定位的元素，元素的左边界离开其正常位置的偏移。\n\n\n<percentage>\n代表元素包含块的宽度的百分比 <percentage>。\nauto\n这个关键字表示：\n \n对于绝对定位元素，元素将忽略此属性而以right属性为准，如果此时设置width: auto，将基于内容需要的宽度设置宽度；如果right也为auto的话，元素的水平位置就是它假如作为静态 (即 static) 元素时该在的位置。\n对于相对定位元素，元素相对正常位置的偏移量将基于right属性；如果right也为auto的话，元素将不会有偏移。\n\n\ninherit\n这个关键字表示该值与其父元素 (可能不是它的包含块) 的计算值相同。对这个计算值的处理将和它原本为 <length>， <percentage> 或 auto 一样。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "positioned elements",
    "name": "left"
  },
  "letter-spacing": {
    "desc": "CSS 的 letter-spacing 属性用于设置文本字符的间距表现。",
    "grammar": "\nnormal\n此间距是按照当前字体的正常间距确定的。和 0 不同的是，用户代理根据此属性来确定文字的默认对齐方式。\n<length>\n指定文字间的间距以替代默认间距。可以是负值，但有可能会出现 implementation 限制。用户代理不会在此基础上进一步增加或缩减间距来对齐文字。\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "letter-spacing"
  },
  "line-break": {
    "desc": "设置 CSS 属性 line-break 可以用来处理如何断开（break lines）带有标点符号的中文、日文或韩文（CJK）文本的行。/* Keyword values */line-break: auto;line-break: loose;line-break: normal;line-break: strict;line-break: anywhere; /* Global values */line-break: inherit;line-break: initial;line-break: unset; 初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n使用默认的断行规则分解文本。\nloose\n使用尽可能松散（least restrictive）的断行规则分解文本。一般用于短行的情况，如报纸。\nnormal\n使用最一般（common）的断行规则分解文本。\nstrict\n使用最严格（stringent）的断行原则分解文本。\nanywhere\n\n在每个印刷字符单元（typographic character unit）的周围，都有一个自动换行（soft wrap）的机会，包括任何标点符号（punctuation character）或是保留的空白字符（preserved white spaces），或是单词之间。但忽略任何用于阻止换行的字符，即使是来自 GL、WJ 或 ZWJ 字符集的字符，或是由 word-break 属性强制的字符。不同的换行机会拥有相同的优先级。也不应用断字符（hyphenation，可能是 \"-\"）。\n英文原文：There is a soft wrap opportunity around every typographic character unit, including around any punctuation character or preserved white spaces, or in the middle of words, disregarding any prohibition against line breaks, even those introduced by characters with the GL, WJ, or ZWJ character class or mandated by the word-break property. The different wrapping opportunities must not be prioritized. Hyphenation is not applied.\n\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "line-break"
  },
  "line-height": {
    "desc": "line-height CSS 属性用于设置多行元素的空间量，如多行文本的间距。对于块级元素，它指定元素行盒（line boxes）的最小高度。对于非替代的 inline 元素，它用于计算行盒（line box）的高度。",
    "grammar": "/* Keyword value */\nline-height: normal;\n\n/* Unitless values: use this number multiplied\nby the element's font size */\nline-height: 3.5;\n\n/* <length> values */\nline-height: 3em;\n\n/* <percentage> values */\nline-height: 34%;\n\n/* Global values */\nline-height: inherit;\nline-height: initial;\nline-height: unset;\n\nline-height 属性被指定为以下任何一个：\n\n一个 <数字>\n一个 <长度>\n一个 <百分比>\n关键词 normal。\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "line-height"
  },
  "line-height-step (en-US)": {
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The line-height-step CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit./* Point values */line-height-step: 18pt; /* Global values */line-height-step: inherit;line-height-step: initial;line-height-step: revert;line-height-step: revert-layer;line-height-step: unset;",
    "grammar": "\n<length>\n\nThe specified <length> is used in the calculation of the line box height step.\n\n",
    "initial value": "0",
    "inherit": "yes",
    "applicable elements": "block containers",
    "name": "line-height-step (en-US)"
  },
  "list-style": {
    "desc": "list-style CSS 属性是一个简写对属性集合，包括list-style-type, list-style-image, 和 list-style-position。",
    "grammar": "Formal syntax: <'list-style-type'> || <'list-style-position'> || <'list-style-image'>",
    "initial value": "as each of the properties of the shorthand:list-style-type: disclist-style-position: outsidelist-style-image: none",
    "inherit": "yes",
    "applicable elements": "list items",
    "name": "list-style"
  },
  "list-style-image": {
    "desc": "",
    "grammar": "/* Keyword values */\nlist-style-image: none;\n\n/* <url> values */\nlist-style-image: url('starsolid.gif');\n\n/* Global values */\nlist-style-image: inherit;\nlist-style-image: initial;\nlist-style-image: unset;\n",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "list items",
    "name": "list-style-image"
  },
  "list-style-position": {
    "desc": "list-style-position 属性指定标记框在主体块框中的位置。使用助记符list-style更方便。初始值outside适用元素list items是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\noutside\n标记盒在主块盒的外面。\ninside\n标记盒是主要块盒中的第一个行内盒，处于元素的内容流之后。\n",
    "initial value": "outside",
    "inherit": "yes",
    "applicable elements": "list items",
    "name": "list-style-position"
  },
  "list-style-type": {
    "desc": "CSS 属性 list-style-type 可以设置列表元素的 marker（比如圆点、符号、或者自定义计数器样式）。 The color (en-US) of the marker will be the same as the computed color of the element it applies to.只有几个元素 (<li> 和 <summary>) 的默认值为 display: list-item。但是， list-style-type 属性可以应用在任何 display 的值为 list-item 的元素上。此外，由于这个属性是可继承的，它可以设置在父元素上 (通常是 <ol> 或 <ul>) 以便应用于所有子元素 (<li>)。",
    "grammar": "\n<custom-ident>\nA identifier matching the value of a @counter-style or one of the predefined styles:\n\n\nsymbols() (en-US)\nDefines an anonymous style of the list.\n<string>\nThe specified string will be used as the item's marker.\n\n\nnone\n不显示列表项的标记。\n\n关键字的取值是下列之一：\n\ndisc\n\n\n实心圆点 (默认值)\n\n\ncircle\n\n\n空心圆点\n\n\nsquare\n\n\n实心方块\n\n\ndecimal\n\n\n十进制阿拉伯数字\n从 1 开始\n\n\ncjk-decimal \nExperimental\n\n\n\n中日韩十进制数\n例如：一，二，三，..., 九八，九九，一〇〇\n\n\ndecimal-leading-zero\n\n\nDecimal numbers\nPadded by initial zeros\nE.g. 01, 02, 03, … 98, 99\n\n\nlower-roman\n\n\nLowercase roman numerals\nE.g. i, ii, iii, iv, v…\n\n\nupper-roman\n\n\nUppercase roman numerals\nE.g. I, II, III, IV, V…\n\n\nlower-greek\n\n\nLowercase classical Greek\nalpha, beta, gamma…\nE.g. α, β, γ…\n\n\nlower-alpha\nlower-latin\n\n\nLowercase ASCII letters\nE.g. a, b, c, … z\nlower-latin is unsupported in IE7 and earlier\nSee Browser compatibility section.\n\n\nupper-alpha\nupper-latin\n\n\nUppercase ASCII letters\nE.g. A, B, C, … Z\nupper-latin is unsupported in IE7 and earlier\n\n\narmenian\n\n\nTraditional Armenian numbering\n(ayb/ayp, ben/pen, gim/keem…\n\n\ngeorgian\n\n\nTraditional Georgian numbering\nE.g. an, ban, gan, … he, tan, in…\n\n\nhebrew \nExperimental\n\n\n\nTraditional Hebrew numbering\n\n\nethiopic-numeric \nExperimental\n\n\n\nExample\n\n\nhiragana \nExperimental\n\n\n\na, i, u, e, o, ka, ki, …\n(Japanese)\n\n\nkatakana \nExperimental\n\n\n\nA, I, U, E, O, KA, KI, …\n(Japanese)\n\n\nhiragana-iroha \nExperimental\n\n\n\ni, ro, ha, ni, ho, he, to, …\nIroha is the old japanese ordering of syllabs.\n\n\nkatakana-iroha \nExperimental\n\n\n\nI, RO, HA, NI, HO, HE, TO, …\nIroha is the old japanese ordering of syllabs.\n\n\njapanese-informal \nExperimental\n\n\n\nJapanese informal numbering\n\n\njapanese-formal \nExperimental\n\n\n\nJapanese formal numbering to be used in legal or financial document.\nE.g., 壱萬壱阡壱百壱拾壱\nThe kanjis are designed so that they can't be modified to look like another correct one\n\n\nkorean-hangul-formal \nExperimental\n\n\n\nKorean hangul numbering.\nE.g., 일만 일천일백일십일\n\n\nkorean-hanja-informal \nExperimental\n\n\n\nKorean hanja numbering.\nE.g., 萬 一千百十一\n\n\nkorean-hanja-formal \nExperimental\n\n\n\nFormal Korean Han numberging.\nE.g. 壹萬 壹仟壹百壹拾壹\n\n\nsimp-chinese-informal \nExperimental\n\n\n\nSimplified Chinese informal numberging.\nE.g. 一万一千一百一十一\n\n\ncjk-ideographic\nExperimental\n\n\n\nIdentical to simp-chinese-informal\nE.g. 一万一千一百一十一\n\n\nsimp-chinese-formal \nExperimental\n\n\n\nSimplified Chinese formal numberging.\nE.g. 壹万壹仟壹佰壹拾壹\n\n\ntrad-chinese-informal \nExperimental\n\n\n\nTraditional Chinese informal numberging.\nE.g. 一萬一千一百一十一\n\n\ntrad-chinese-formal \nExperimental\n\n\n\nTraditional Chinese formal numberging.\nE.g. 壹萬壹仟壹佰壹拾壹\n\n\n",
    "name": "list-style-type"
  },
  "margin": {
    "desc": "margin 属性为给定元素设置所有四个（上下左右）方向的外边距属性。也就是 margin-top，margin-right，margin-bottom，和 margin-left 四个外边距属性设置的简写。 这个可交互示例的源码保存在一个 GitHub 仓库中。如果你有兴趣为这个交互示例项目做作出贡献，请 clone 下 https://github.com/mdn/interactive-examples 然后给我们提一个 pull request.上、下外边框的设置对不可替换内联元素，如 <span> 和 <code>，无效。 注意： 外边距控制的是元素外部空出的空间。相反，padding 操作元素内部空出的空间。",
    "grammar": "\nlength\n以固定值为外边距。\npercentage\n相对于包含块的宽度，以百分比值为外边距。\nauto\n让浏览器自己选择一个合适的外边距。有时，在一些特殊情况下，该值可以使元素居中。\n",
    "initial value": "as each of the properties of the shorthand:margin-bottom: 0margin-left: 0margin-right: 0margin-top: 0",
    "inherit": "否",
    "applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
    "name": "margin"
  },
  "margin-block": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 margin-block这个CSS属性定义了一个元素的逻辑块开始和结束边距，根据元素的写入模式、方向性和文本方向映射到物理边界。/* 有长度的具体的值 */margin-block: 10px 20px; /* 一个绝对的长度值 */margin-block: 1em 2em; /* 相对于文本大小的值 */margin-block: 5% 2%; /* 相对于最近的块容器宽度的值 */margin-block: 10px; /* 设置开始值和结束值 */ /* 关键字 值 */margin-block: auto; /* 全局 值 */margin-block: inherit;margin-block: initial;margin-block: unset; 这些值对应的是margin-top和margin-bottom，或者 margin-right，和margin-left，这些属性取决于writing-mode，direction，和text-orientation。这些值可以单独设置为margin-block-start和margin-block-end (en-US)。inline direction 属性是margin-inline (en-US)，也可设置为margin-inline-start (en-US)，和margin-inline-end (en-US)。",
    "grammar": "margin-block属性采用和margin-left属性相同的值。",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "same as margin",
    "name": "margin-block"
  },
  "margin-block-end (en-US)": {
    "desc": "The margin-block-end CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.",
    "grammar": "/* <length> values */\nmargin-block-end: 10px;  /* An absolute length */\nmargin-block-end: 1em;   /* relative to the text size */\nmargin-block-end: 5%;    /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-block-end: auto;\n\n/* Global values */\nmargin-block-end: inherit;\nmargin-block-end: initial;\nmargin-block-end: revert;\nmargin-block-end: revert-layer;\nmargin-block-end: unset;\n\nIt corresponds to the margin-top, margin-right, margin-bottom, or margin-left property depending on the values defined for writing-mode, direction, and text-orientation.\nIt relates to margin-block-start, margin-inline-start, and margin-inline-end, which define the other margins of the element.",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as margin",
    "name": "margin-block-end (en-US)"
  },
  "margin-block-start": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。margin-block-start CSS 属性定义了一个元素的逻辑块的开始边距，是用来根据元素的书写模式，方向和文本方向进行实际边界的衡量。/* <length> values */margin-block-start: 10px; /* 绝对长度 */margin-block-start: 1em; /* 文本的相对大小 */margin-block-start: 5%; /* 相对于最近块容器的大小 */ /* 关键字值 */margin-block-start: auto; /* 全局值 */margin-block-start: inherit;margin-block-start: initial;margin-block-start: unset margin-top, margin-right, margin-bottom, or margin-left 属性对应于 writing-mode, direction, 和text-orientation属性定义的值。它涉及到 margin-block-end (en-US), margin-inline-start (en-US),和 margin-inline-end (en-US)属性，这些属性是用来定义其它元素的边界。初始值0适用元素same as margin是否是继承属性否Percentagesdepends on layout model计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length",
    "grammar": "margin-block-start 属性有着和 margin-left 属性一样的值。",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "same as margin",
    "name": "margin-block-start"
  },
  "margin-bottom": {
    "desc": "",
    "grammar": "/* <length> values */\nmargin-bottom: 10px;        /* 一个绝对的长度值 */\nmargin-bottom: 1em;         /* A length relative to the text size */\nmargin-bottom: 5%;          /* A margin relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-bottom: auto;\n\n/* Global values */\nmargin-bottom: inherit;\nmargin-bottom: initial;\nmargin-bottom: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
    "name": "margin-bottom"
  },
  "margin-inline (en-US)": {
    "desc": "The margin-inline CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nmargin-inline-start\nmargin-inline-end\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as margin",
    "name": "margin-inline (en-US)"
  },
  "margin-inline-end (en-US)": {
    "desc": "The margin-inline-end CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the margin-top, margin-right, margin-bottom or margin-left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\nmargin-inline-end: 10px;   /* An absolute length */\nmargin-inline-end: 1em;    /* relative to the text size */\nmargin-inline-end: 5%;     /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-inline-end: auto;\n\n/* Global values */\nmargin-inline-end: inherit;\nmargin-inline-end: initial;\nmargin-inline-end: revert;\nmargin-inline-end: revert-layer;\nmargin-inline-end: unset;\n\nIt relates to margin-block-start, margin-block-end, and margin-inline-start, which define the other margins of the element.",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as margin",
    "name": "margin-inline-end (en-US)"
  },
  "margin-inline-start (en-US)": {
    "desc": "The margin-inline-start CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the margin-top, margin-right, margin-bottom, or margin-left property depending on the values defined for writing-mode, direction, and text-orientation.",
    "grammar": "/* <length> values */\nmargin-inline-start: 10px;  /* An absolute length */\nmargin-inline-start: 1em;   /* relative to the text size */\nmargin-inline-start: 5%;    /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-inline-start: auto;\n\n/* Global values */\nmargin-inline-start: inherit;\nmargin-inline-start: initial;\nmargin-inline-start: revert;\nmargin-inline-start: revert-layer;\nmargin-inline-start: unset;\n\nIt relates to margin-block-start, margin-block-end, and margin-inline-end, which define the other margins of the element.",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as margin",
    "name": "margin-inline-start (en-US)"
  },
  "margin-left": {
    "desc": "",
    "grammar": "/* <length> values */\nmargin-left: 10px;  /* 绝对长度 */\nmargin-left: 1em;   /* 相对于字号的长度 */\nmargin-left: 5%;    /* 相对最近块元素的宽度 */\n\n/* Keyword values */\nmargin-left: auto;\n\n/* Global values */\nmargin-left: inherit;\nmargin-left: initial;\nmargin-left: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
    "name": "margin-left"
  },
  "margin-right": {
    "desc": "",
    "grammar": "/* <length> values */\nmargin-right: 20px;        /* An absolute length */\nmargin-right: 1em;         /* A length relative to the text size */\nmargin-right: 5%;          /* A margin relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-right: auto;\n\n/* Global values */\nmargin-right: inherit;\nmargin-right: initial;\nmargin-right: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
    "name": "margin-right"
  },
  "margin-top": {
    "desc": "",
    "grammar": "/* <length> values */\nmargin-top: 10px;        /* 绝对长度 */\nmargin-top: 1em;         /*相对于字体大小 */\nmargin-top: 5%;          /*相对于最相邻的父级元素块（block）的宽度*/\n\n/* Keyword values */\nmargin-top: auto;\n\n/* Global values */\nmargin-top: inherit;\nmargin-top: initial;\nmargin-top: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
    "name": "margin-top"
  },
  "margin-trim (en-US)": {
    "desc": "The margin-trim property allows the container to trim the margins of its children where they adjoin the container's edges.",
    "grammar": "\nnone\n\nMargins are not trimmed by the container.\n\nin-flow\n\nFor in-flow boxes contained by this box, block-axis margins adjacent to the box's edges are truncated to zero.\nIt also truncates any margins collapsed with such a margin.\n\nall\n\nTrims the margins of in-flow boxes and floats whose margins coincide with the container's content edge.\n\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "Block containers and multi-column containers. It also applies to ::first-letter and ::first-line.",
    "name": "margin-trim (en-US)"
  },
  "mask": {
    "desc": "CSS 属性 mask 允许使用者通过遮罩或者裁切特定区域的图片的方式来隐藏一个元素的部分或者全部可见区域。/* Keyword values */mask: none; /* Image values */mask: url(mask.png); /* 使用位图来做遮罩 */mask: url(masks.svg#star); /* 使用 SVG 图形中的形状来做遮罩 */ /* Combined values */mask: url(masks.svg#star) luminance; /* Element within SVG graphic used as luminance mask */mask: url(masks.svg#star) 40px 20px; /* 使用 SVG 图形中的形状来做遮罩并设定它的位置：离上边缘 40px，离左边缘 20px */mask: url(masks.svg#star) 0 0/50px 50px; /* 使用 SVG 图形中的形状来做遮罩并设定它的位置和大小：长宽都是 50px */mask: url(masks.svg#star) repeat-x; /* Element within SVG graphic used as horizontally repeated mask */mask: url(masks.svg#star) stroke-box; /* Element within SVG graphic used as mask extending to the box enclosed by the stroke */mask: url(masks.svg#star) exclude; /* Element within SVG graphic used as mask and combined with background using non-overlapping parts */ /* Global values */mask: inherit;mask: initial;mask: unset; mask 的简写会将 mask-border 设为初始值。使用 mask 的简写优于使用其他简写或者各自属性的设置来覆盖。这能保证 mask-border 也会重新设置为新的效果样式。 初始值as each of the properties of the shorthand:mask-image: nonemask-mode: match-sourcemask-repeat: no-repeatmask-position (en-US): centermask-clip (en-US): border-boxmask-origin (en-US): border-boxmask-size (en-US): automask-composite (en-US): add适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否Percentagesas each of the properties of the shorthand:mask-position (en-US): refer to size of mask painting area minus size of mask layer image (see the text for background-position)计算值as each of the properties of the shorthand:mask-image: as specified, but with url values made absolutemask-mode: as specifiedmask-repeat: Consists of two keywords, one per dimensionmask-position (en-US): Consists of two keywords representing the origin and two offsets from that origin, each given as an absolute length (if given a <length>), otherwise as a percentage.mask-clip (en-US): as specifiedmask-origin (en-US): as specifiedmask-size (en-US): as specified, but with relative lengths converted into absolute lengthsmask-composite (en-US): as specifiedAnimation typeas each of the properties of the shorthand:mask-image: discretemask-mode: discretemask-repeat: discretemask-position (en-US): repeatable list of simple list of length, percentage, or calcmask-clip (en-US): discretemask-origin (en-US): discretemask-size (en-US): repeatable list of simple list of length, percentage, or calcmask-composite (en-US): discreteCreates stacking contextyes",
    "grammar": "\n<mask-reference>\n设置遮罩图片的路径。详见 mask-image。\n<masking-mode>\n设置遮罩图片的模式。详见 mask-mode。\n<position>\n设置遮罩图片的位置。详见 mask-position (en-US)。\n<bg-size>\n设置遮罩的大小。详见 mask-size (en-US)。\n<repeat-style>\n设置遮罩图片的重复性。详见 mask-repeat。\n<geometry-box>\n如果只有一个 <geometry-box> 值被赋予，他将会设置 mask-origin (en-US) 和 mask-clip (en-US)。如果两个 <geometry-box> 值显示，第一个值代表 mask-origin (en-US) 第二个值代表 mask-clip (en-US)。\n<geometry-box> | no-clip\n设置区域，会被遮罩图片影响。详见 mask-clip (en-US)。\n<compositing-operator>\n设置遮罩图层的组合操作。详见 mask-composite (en-US)。\n",
    "initial value": "as each of the properties of the shorthand:mask-image: nonemask-mode: match-sourcemask-repeat: no-repeatmask-position (en-US): centermask-clip (en-US): border-boxmask-origin (en-US): border-boxmask-size (en-US): automask-composite (en-US): add",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask"
  },
  "mask-border": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 mask-border 允许你创建一个紧贴元素边框边缘的 mask.该属性为以下属性的简写: mask-border-source (en-US), mask-border-slice, mask-border-width, mask-border-outset (en-US), mask-border-repeat, and mask-border-mode. 与其他简写的属性一样，任何一个漏写的子属性，将会被设置为他们的初始值.",
    "grammar": "\n<'mask-border-source'>\n该属性为源图像。参见 mask-border-source (en-US).\n<'mask-border-slice'>\n将源图像切割后的区域的尺寸，最多可指定四个值。参见 mask-border-slice.\n<'mask-border-width'>\n边框 mask 的宽度。最多可指定四个值。参见 mask-border-width.\n<'mask-border-outset'>\n边框 mask 距离元素外边界的距离。最多可指定四个值。参见 mask-border-outset (en-US).\n<'mask-border-repeat'>\n定义如何调整源图像的边缘区域以适应边框 mask 的尺寸。最多可指定四个值。参见 mask-border-repeat.\n<'mask-border-mode'>\n定义是否将源图片设置为明亮度 mask，或者透明度 mask. 参见 mask-border-mode.\n",
    "initial value": "as each of the properties of the shorthand:mask-border-mode: alphamask-border-outset (en-US): 0mask-border-repeat: stretchmask-border-slice: 0mask-border-source (en-US): nonemask-border-width: auto",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border"
  },
  "mask-border-mode": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。该CSS属性指定使用的混合模式面具边界。mask-border-mode",
    "grammar": "\nluminance\n掩模边界图像的亮度值用作掩模值。\nalpha\n掩模边界图像的亮度值用作掩模值。\n",
    "initial value": "alpha",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-mode"
  },
  "mask-border-outset (en-US)": {
    "desc": "The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box.",
    "grammar": "\n<length>\n\nThe size of the mask border outset as a dimension.\n\n<number>\n\nThe size of the mask border outset as a multiple of the corresponding border-width.\n\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-outset (en-US)"
  },
  "mask-border-repeat": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-border-repeat CSS 属性设置如何调整源图像的边缘区域以适应元素遮罩边框的尺寸。",
    "grammar": "\nstretch\n拉伸源图像的边缘区域以填充每个边界之间的间隙。\nrepeat\n源图像的边缘区域被平铺（重复）以填充每个边界之间的间隙，可以裁剪平铺图形以达到合适的贴合效果。\nround\n源图像的边缘区域被平铺（重复）以填充每个边界之间的间隙，可以拉伸平铺图形以实现适当的贴合。\nspace\n源图像的边缘区域被平铺（重复）以填充每个边框之间的间隙。平铺图形之间将分配额外的空间，以实现适当的贴合。\n",
    "initial value": "stretch",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-repeat"
  },
  "mask-border-slice": {
    "desc": "的CSS属性除以掩模边界源成区域的图像集合。这些区域用于形成元素的遮罩边框的组成部分。mask-border-slice",
    "grammar": "\n<number>\n表示光栅图像的边缘偏移量（像素）和矢量图像的坐标。对于矢量图像，数字是相对于元素的大小，而不是源图像的大小，因此在这些情况下，通常最好使用百分比。\n<percentage>\n将边缘偏移量表示为源图像尺寸的百分比：水平偏移量的图像宽度，垂直偏移量的高度。\nfill\n保留中间图像区域。其宽度和高度的大小分别匹配顶部和左侧图像区域。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-slice"
  },
  "mask-border-source (en-US)": {
    "desc": "The mask-border-source CSS property sets the source image used to create an element's mask border.The mask-border-slice property is used to divide the source image into regions, which are then dynamically applied to the final mask border.",
    "grammar": "\nnone\n\nNo mask border is used.\n\n<image>\n\nImage reference to use for the mask border.\n\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-source (en-US)"
  },
  "mask-border-width": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-border-width CSS 属性设置元素的 mask border的宽度",
    "grammar": "\n<length-percentage>\nmask边框宽度指定一个值或者百分比，设定百分比时，是相对于mask的长度和宽度。不能为负数。\n<number>\nmask 边框宽度为元素border-width的倍数。不能为负数。\nauto\n使mask-border的宽度等于相应mask-border-slice的固有宽度或高度（以适用者为准），如果图像没有所需的固有尺寸，则使用相应的边框宽度。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-border-width"
  },
  "mask-clip (en-US)": {
    "desc": "The mask-clip CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area./* <geometry-box> values */mask-clip: content-box;mask-clip: padding-box;mask-clip: border-box;mask-clip: margin-box;mask-clip: fill-box;mask-clip: stroke-box;mask-clip: view-box; /* Keyword values */mask-clip: no-clip; /* Non-standard keyword values */-webkit-mask-clip: border;-webkit-mask-clip: padding;-webkit-mask-clip: content;-webkit-mask-clip: text; /* Multiple values */mask-clip: padding-box, no-clip;mask-clip: view-box, fill-box, border-box; /* Global values */mask-clip: inherit;mask-clip: initial;mask-clip: revert;mask-clip: revert-layer;mask-clip: unset;",
    "grammar": "\ncontent-box\n\nThe painted content is clipped to the content box.\n\npadding-box\n\nThe painted content is clipped to the padding box.\n\nborder-box\n\nThe painted content is clipped to the border box.\n\nmargin-box\n\nThe painted content is clipped to the margin box.\n\nfill-box\n\nThe painted content is clipped to the object bounding box.\n\nstroke-box\n\nThe painted content is clipped to the stroke bounding box.\n\nview-box\n\nUses the nearest SVG viewport as reference box. If a viewBox attribute is specified for the element creating the SVG viewport, the reference box is positioned at the origin of the coordinate system established by the viewBox attribute and the dimension of the reference box is set to the width and height values of the viewBox attribute.\n\nno-clip\n\nThe painted content is not clipped.\n\nborder\nNon-Standard\n\n\nThis keyword behaves the same as border-box.\n\npadding\nNon-Standard\n\n\nThis keyword behaves the same as padding-box.\n\ncontent\nNon-Standard\n\n\nThis keyword behaves the same as content-box.\n\ntext\nNon-Standard\n\n\nThis keyword clips the mask image to the text of the element.\n\n",
    "initial value": "border-box",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-clip (en-US)"
  },
  "mask-composite (en-US)": {
    "desc": "The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it./* Keyword values */mask-composite: add;mask-composite: subtract;mask-composite: intersect;mask-composite: exclude; /* Global values */mask-composite: inherit;mask-composite: initial;mask-composite: revert;mask-composite: revert-layer;mask-composite: unset;",
    "grammar": "For the composition the current mask layer is referred to as source, while all layers below it are referred to as destination.\n\nadd\n\nThe source is placed over the destination.\n\nsubtract\n\nThe source is placed, where it falls outside of the destination.\n\nintersect\n\nThe parts of source that overlap the destination, replace the destination.\n\nexclude\n\nThe non-overlapping regions of source and destination are combined.\n\n",
    "initial value": "add",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-composite (en-US)"
  },
  "mask-image": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* Keyword value */\nmask-image: none;\n\n/* <mask-source> value */\nmask-image: url(masks.svg#mask1);\n\n/* <image< values */\nmask-image: linear-gradient(rgba(0, 0, 0, 1.0), transparent);\nmask-image: image(url(mask.png), skyblue);\n\n/* Multiple values */\nmask-image: image(url(mask.png), skyblue), linear-gradient(rgba(0, 0, 0, 1.0), transparent);\n\n/* Global values */\nmask-image: inherit;\nmask-image: initial;\nmask-image: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-image"
  },
  "mask-mode": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-modeCSS属性指示由mask-image 指向的遮罩被视为亮度或阿尔法遮罩。/* 关取值的键字 */mask-mode: alpha;mask-mode: luminance;mask-mode: match-source; /* 多个类型的值 */mask-mode: alpha, match-source; /* 全局变量的值 */mask-mode: inherit;mask-mode: initial;mask-mode: unset; 初始值match-source适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nalpha\n此关键字指示应使用掩码层图像的透明度（阿尔法通道）值作为掩码值。\nluminance\n此关键字指示掩膜层图像的亮度值应用作掩码值。\nmatch-source\n\nIf the mask-image property is of type <mask-source>, the luminance values of the mask layer image should be used as the mask values.\nIf it is of type <image>, the alpha values of the mask layer image should be used as the mask values.\n如果mask-image属性是<mask-source>类型，掩模层图像的亮度值会被作为掩模值。\n如果它是类型<image>，掩码层图像的 alpha 值应用作掩码值。\n\n",
    "initial value": "match-source",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-mode"
  },
  "mask-origin (en-US)": {
    "desc": "The mask-origin CSS property sets the origin of a mask./* Keyword values */mask-origin: content-box;mask-origin: padding-box;mask-origin: border-box;mask-origin: margin-box;mask-origin: fill-box;mask-origin: stroke-box;mask-origin: view-box; /* Multiple values */mask-origin: padding-box, content-box;mask-origin: view-box, fill-box, border-box; /* Non-standard keyword values */-webkit-mask-origin: content;-webkit-mask-origin: padding;-webkit-mask-origin: border; /* Global values */mask-origin: inherit;mask-origin: initial;mask-origin: revert;mask-origin: revert-layer;mask-origin: unset; For elements rendered as a single box, this property specifies the mask positioning area. In other words, this property specifies the origin position of an image specified by the mask-image CSS property. For elements rendered as multiple boxes, such as inline boxes on several lines or boxes on several pages, it specifies which boxes box-decoration-break operates upon to determine the mask positioning area.",
    "grammar": "\ncontent-box\n\nThe position is relative to the content box.\n\npadding-box\n\nThe position is relative to the padding box. For single boxes 0 0 is the upper left corner of the padding edge, 100% 100% is the lower right corner.\n\nborder-box\n\nThe position is relative to the border box.\n\nmargin-box\n\nThe position is relative to the margin box.\n\nfill-box\n\nThe position is relative to the object bounding box.\n\nstroke-box\n\nThe position is relative to the stroke bounding box.\n\nview-box\n\nUses the nearest SVG viewport as reference box. If a viewBox attribute is specified for the element creating the SVG viewport, the reference box is positioned at the origin of the coordinate system established by the viewBox attribute and the dimension of the reference box is set to the width and height values of the viewBox attribute.\n\ncontent \nNon-Standard\n\n\nSame as content-box.\n\npadding \nNon-Standard\n\n\nSame as padding-box.\n\nborder \nNon-Standard\n\n\nSame as border-box.\n\n",
    "initial value": "border-box",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-origin (en-US)"
  },
  "mask-position (en-US)": {
    "desc": "The mask-position CSS property sets the initial position, relative to the mask position layer set by mask-origin, for each defined mask image./* Keyword values */mask-position: top;mask-position: bottom;mask-position: left;mask-position: right;mask-position: center; /* <position> values */mask-position: 25% 75%;mask-position: 0px 0px;mask-position: 10% 8em; /* Multiple values */mask-position: top right;mask-position: 1rem 1rem, center; /* Global values */mask-position: inherit;mask-position: initial;mask-position: revert;mask-position: revert-layer;mask-position: unset;",
    "grammar": "\n<position>\n\nOne to four values representing a 2D position regarding the edges of the element's box. Relative or absolute offsets can be given. Note that the position can be set outside of the element's box.\n\n",
    "initial value": "center",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-position (en-US)"
  },
  "mask-repeat": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 的 mask-repeat 属性定义了遮罩图片是否重复显示多个副本，以及如何重复。一个遮罩图片可以水平重复、垂直重复或双向重复，也可以不重复。/* One-value syntax */mask-repeat: repeat-x;mask-repeat: repeat-y;mask-repeat: repeat;mask-repeat: space;mask-repeat: round;mask-repeat: no-repeat; /* Two-value syntax: horizontal | vertical */mask-repeat: repeat space;mask-repeat: repeat repeat;mask-repeat: round space;mask-repeat: no-repeat round; /* Multiple values */mask-repeat: space round, no-repeat;mask-repeat: round repeat, space, repeat-x; /* Global values */mask-repeat: inherit;mask-repeat: initial;mask-repeat: unset; 默认情况下，重复的图片会被剪切为图片的大小，但他们可以自行缩放适应（使用 round），或者从一端到另一端均匀分布（使用 space）。初始值no-repeat适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否计算值Consists of two keywords, one per dimensionAnimation typediscrete",
    "grammar": "\n<repeat-style>\n单值语法可将两个值简写为一个：\n\n\n\n\n单值\n与之等效的双值\n\n\nrepeat-x\nrepeat no-repeat\n\n\nrepeat-y\nno-repeat repeat\n\n\nrepeat\nrepeat repeat\n\n\nspace\nspace space\n\n\nround\nround round\n\n\nno-repeat\nno-repeat no-repeat\n\n\n\n 在双值语法中，第一个值代表了水平方向的行为，第二个值代表了垂直方向的行为。下面是每个选项的用法解释：\n\n\n\n\nrepeat\nThe image is repeated as much as needed to cover the whole mask painting area. The last image will be clipped if it doesn't fit.\n\n\nspace\nThe image is repeated as much as possible without clipping. The first and last images are pinned to either side of the element, and whitespace is distributed evenly between the images. The mask-position (en-US) property is ignored unless only one image can be displayed without clipping. The only case where clipping happens using space is when there isn't enough room to display one image.\n\n\nround\nAs the allowed space increases in size, the repeated images will stretch (leaving no gaps) until there is room for another one to be added. When the next image is added, all of the current ones compress to allow room. Example: An image with an original width of 260px, repeated three times, might stretch until each repetition is 300px wide, and then another image will be added. They will then compress to 225px.\n\n\nno-repeat\nThe image is not repeated (and hence the mask painting area will not necessarily be entirely covered). The position of the non-repeated mask image is defined by the mask-position (en-US) CSS property.\n\n\n\n\n",
    "initial value": "no-repeat",
    "inherit": "否",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-repeat"
  },
  "mask-size (en-US)": {
    "desc": "The mask-size CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio./* Keywords syntax */mask-size: cover;mask-size: contain; /* One-value syntax *//* the width of the image (height set to 'auto') */mask-size: 50%;mask-size: 3em;mask-size: 12px;mask-size: auto; /* Two-value syntax *//* first value: width of the image, second value: height */mask-size: 50% auto;mask-size: 3em 25%;mask-size: auto 6px;mask-size: auto auto; /* Multiple values *//* Do not confuse this with mask-size: auto auto */mask-size: auto, auto;mask-size: 50%, 25%, 25%;mask-size: 6px, auto, contain; /* Global values */mask-size: inherit;mask-size: initial;mask-size: revert;mask-size: revert-layer;mask-size: unset; Note: If the value of this property is not set in a mask shorthand property that is applied to the element after the mask-size CSS property, the value of this property is then reset to its initial value by the shorthand property.",
    "grammar": "\n<length>\n\nA <length> value scales the mask image to the specified length in the corresponding dimension. Negative lengths are not allowed.\n\n<percentage>\n\nA <percentage> value scales the mask image in the corresponding dimension to the specified percentage of the mask positioning area, which is determined by the value of mask-origin. The mask positioning area is, by default, the area containing the content of the box and its padding; the area may also be changed to just the content or to the area containing borders, padding and content. Negative percentages are not allowed.\n\nauto\n\nA keyword that scales the mask image in the corresponding directions in order to maintain its intrinsic proportion.\n\ncontain\n\nA keyword that scales the image as large as possible and maintains image aspect ratio (image doesn't get squished). The image is letterboxed within the container. The image is automatically centered unless over-ridden by another property such as mask-position.\n\ncover\n\nA keyword that is the inverse of contain. Scales the image as large as possible and maintains image aspect ratio (image doesn't get squished). The image \"covers\" the entire width or height of the container. When the image and container have different dimensions, the image is clipped either on left/right or at top/bottom.\n\n\nThe interpretation of possible values depends on the image's intrinsic dimensions (width and height) and intrinsic proportion (ratio of width and height). A bitmap image always has intrinsic dimensions and an intrinsic proportion. A vector image may have both intrinsic dimensions and thus it has an intrinsic proportion too. It also may have one or no intrinsic dimensions and in either case it might or might not have an intrinsic proportion. Gradients are treated as images with no intrinsic dimensions or intrinsic proportion.\nThe rendered size of the mask image is then computed as follows:\n\nIf both components of mask-size are specified and are not auto:\n\nThe mask image renders at the specified size.\n\nIf the mask-size is contain or cover:\n\nThe image is rendered by preserving its intrinsic proportion at the largest size contained within or covering the mask positioning area. If the image has no intrinsic proportion, then it is rendered at the size of the mask positioning area.\n\nIf the mask-size is auto or auto auto:\n\nIf the image has both intrinsic dimensions, it is rendered at that size. If it has no intrinsic dimensions and no intrinsic proportion, it is rendered at the size of the mask positioning area. If it has no dimensions but has a proportion, it's rendered as if contain had been specified instead. If the image has one intrinsic dimension and a proportion, it's rendered at the size determined by that one dimension and the proportion. If the image has one intrinsic dimension but no proportion, it's rendered using the intrinsic dimension and the corresponding dimension of the mask positioning area.\n\nIf mask-size has one auto component and one non-auto component:\n\nIf the image has an intrinsic proportion, then render it using the specified dimension and compute the other dimension from the specified dimension and the intrinsic proportion. If the image has no intrinsic proportion, use the specified dimension for that dimension. For the other dimension, use the image's corresponding intrinsic dimension if there is one. If there is no such intrinsic dimension, use the corresponding dimension of the mask positioning area.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
    "name": "mask-size (en-US)"
  },
  "mask-type (en-US)": {
    "desc": "The mask-type CSS property sets whether an SVG <mask> element is used as a luminance or an alpha mask. It applies to the <mask> element itself./* Keyword values */mask-type: luminance;mask-type: alpha; /* Global values */mask-type: inherit;mask-type: initial;mask-type: revert;mask-type: revert-layer;mask-type: unset; This property may be overridden by the mask-mode property, which has the same effect but applies to the element where the mask is used. Alpha masks will generally be faster to render.",
    "grammar": "\nluminance\n\nIs a keyword indicating that the associated mask image is a luminance mask, i.e., that its relative luminance values must be used when applying it.\n\nalpha\n\nIs a keyword indicating that the associated mask image is an alpha mask, i.e., that its alpha channel values must be used when applying it.\n\n",
    "initial value": "luminance",
    "inherit": "no",
    "applicable elements": "<mask> elements",
    "name": "mask-type (en-US)"
  },
  "max-block-size (en-US)": {
    "desc": "The max-block-size CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by writing-mode. That is, if the writing direction is horizontal, then max-block-size is equivalent to max-height; if the writing direction is vertical, max-block-size is the same as max-width.The other dimension's maximum length is specified using the max-inline-size property.This is useful because the max-width is always used for horizontal sizes and max-height is always used for vertical sizes, and if you need to set lengths based on the size of your text content, you need to be able to do so with the writing direction in mind.Any time you would normally use max-height or max-width, you should instead use max-block-size to set the maximum \"height\" of the content (even though this may not be a vertical value) and max-inline-size to set the maximum \"width\" of the content (although this may instead be vertical rather than horizontal). See the Example in writing-mode, which shows the different writing modes in action.",
    "grammar": "/* <length> values */\nmax-block-size: 300px;\nmax-block-size: 25em;\n\n/* <percentage> values */\nmax-block-size: 75%;\n\n/* Keyword values */\nmax-block-size: none;\nmax-block-size: max-content;\nmax-block-size: min-content;\nmax-block-size: fit-content(20em);\n\n/* Global values */\nmax-block-size: inherit;\nmax-block-size: initial;\nmax-block-size: revert;\nmax-block-size: revert-layer;\nmax-block-size: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as width and height",
    "name": "max-block-size (en-US)"
  },
  "max-height": {
    "desc": "CSS属性 max-height 设置元素的最大高度。它防止height属性的使用值（used value） 大于 max-height 的指定值。 max-height 会覆盖height, 而min-height 会覆盖 max-height.",
    "grammar": "\n<length>\nDefines the max-height as an absolute value.\n<percentage>\nDefines the max-height as a percentage of the containing block's height.\nauto\nThe browser will calculate and select a max-height for the specified element.\nnone\nNo limit on the size of the box.\nmax-content\nThe intrinsic preferred max-height.\nmin-content\nThe intrinsic minimum max-height.\nfit-content(<length-percentage>)\nUses the fit-content formula with the available space replaced by the specified argument, i.e. min(max-content, max(min-content, argument)).\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
    "name": "max-height"
  },
  "max-inline-size (en-US)": {
    "desc": "The max-inline-size CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the max-width or the max-height property, depending on the value of writing-mode.If the writing mode is vertically oriented, the value of max-inline-size relates to the maximal height of the element; otherwise, it relates to the maximal width of the element. A related property is max-block-size, which defines the other dimension of the element.",
    "grammar": "/* <length> values */\nmax-inline-size: 300px;\nmax-inline-size: 25em;\n\n/* <percentage> values */\nmax-inline-size: 75%;\n\n/* Keyword values */\nmax-inline-size: none;\nmax-inline-size: max-content;\nmax-inline-size: min-content;\nmax-inline-size: fit-content(20em);\n\n/* Global values */\nmax-inline-size: inherit;\nmax-inline-size: initial;\nmax-inline-size: revert;\nmax-inline-size: revert-layer;\nmax-inline-size: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as width and height",
    "name": "max-inline-size (en-US)"
  },
  "max-width": {
    "desc": "",
    "grammar": "/* <长度> 值 */\nmax-width: 3.5em;\n\n/* <百分比> 值 */\nmax-width: 75%;\n\n/* 关键字 */\nmax-width: none;\nmax-width: max-content;\nmax-width: min-content;\nmax-width: fit-content;\nmax-width: fill-available;\n\n/* 全局设置 */\nmax-width: inherit;\nmax-width: initial;\nmax-width: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements but non-replaced inline elements, table rows, and row groups",
    "name": "max-width"
  },
  "min-block-size (en-US)": {
    "desc": "The min-block-size CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode.If the writing mode is vertically oriented, the value of min-block-size relates to the minimum width of the element; otherwise, it relates to the minimum height of the element. A related property is min-inline-size, which defines the other dimension of the element.",
    "grammar": "/* <length> values */\nmin-block-size: 100px;\nmin-block-size: 5em;\n\n/* <percentage> values */\nmin-block-size: 10%;\n\n/* Keyword values */\nmin-block-size: max-content;\nmin-block-size: min-content;\nmin-block-size: fit-content(20em);\n\n/* Global values */\nmin-block-size: inherit;\nmin-block-size: initial;\nmin-block-size: revert;\nmin-block-size: revert-layer;\nmin-block-size: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as width and height",
    "name": "min-block-size (en-US)"
  },
  "min-height": {
    "desc": "CSS 属性 min-height 能够设置元素的最小高度。这样能够防止 height 属性的应用值小于 min-height 的值。 当 min-height 大于 max-height 或 height 时，元素的高度会设置为 min-height 的值。",
    "grammar": "\n<length>\n定义 min-height 为一个绝对数值。\n<percentage>\n定义 min-height 为一个相对于父容器高度的百分数。\nauto\n浏览器将通过计算为指定元素选择一个 min-height 值。\nnone\n不限制盒容器的尺寸。\nmax-content\nThe intrinsic preferred min-height.\nmin-content\nThe intrinsic minimum min-height.\nfit-content(<length-percentage>)\nUses the fit-content formula with the available space replaced by the specified argument, i.e. min(max-content, max(min-content, argument)).\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
    "name": "min-height"
  },
  "min-inline-size (en-US)": {
    "desc": "The min-inline-size CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode.",
    "grammar": "/* <length> values */\nmin-inline-size: 100px;\nmin-inline-size: 5em;\n\n/* <percentage> values */\nmin-inline-size: 10%;\n\n/* Keyword values */\nmin-inline-size: max-content;\nmin-inline-size: min-content;\nmin-inline-size: fit-content(20em);\n\n/* Global values */\nmin-inline-size: inherit;\nmin-inline-size: initial;\nmin-inline-size: revert;\nmin-inline-size: revert-layer;\nmin-inline-size: unset;\n\nIf the writing mode is vertically oriented, the value of min-inline-size relates to the minimum height of the element; otherwise, it relates to the minimum width of the element. A related property is min-block-size, which defines the other dimension of the element.",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "same as width and height",
    "name": "min-inline-size (en-US)"
  },
  "min-width": {
    "desc": "",
    "grammar": "形式语法： auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)where <length-percentage> = <length> | <percentage>\n/* <length> value */\nmin-width: 3.5em\n\n/* <percentage> value */\nmin-width: 10%\n\n/* Keyword values */\nmin-width: max-content\nmin-width: min-content\nmin-width: fit-content\nmin-width: fill-available\n\n/* Global values */\nmin-width: inherit\nmin-width: initial\nmin-width: unset\n",
    "name": "min-width"
  },
  "mix-blend-mode": {
    "desc": "mix-blend-mode CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。",
    "grammar": "\n<blend-mode>\n表示应该应用的混合模式。\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "mix-blend-mode"
  },
  "object-fit": {
    "desc": "object-fit CSS 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。您可以通过使用 object-position 属性来切换被替换元素的内容对象在元素框内的对齐方式。",
    "grammar": "\ncontain\n被替换的内容将被缩放，以在填充元素的内容框时保持其宽高比。整个对象在填充盒子的同时保留其长宽比，因此如果宽高比与框的宽高比不匹配，该对象将被添加“黑边”。\ncover\n被替换的内容在保持其宽高比的同时填充元素的整个内容框。如果对象的宽高比与内容框不相匹配，该对象将被剪裁以适应内容框。\nfill\n被替换的内容正好填充元素的内容框。整个对象将完全填充此框。如果对象的宽高比与内容框不相匹配，那么该对象将被拉伸以适应内容框。\nnone\n被替换的内容将保持其原有的尺寸。\nscale-down\n内容的尺寸与 none 或 contain 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些。\n",
    "name": "object-fit"
  },
  "object-position": {
    "desc": "CSS 属性 object-position 规定了可替换元素的内容，在这里我们称其为对象（即 object-position 中的 object），在其内容框中的位置。可替换元素的内容框中未被对象所覆盖的部分，则会显示该元素的背景（background）。你还可以使用 object-fit 属性来改变可替换元素的对象的内在（原文：intrinsic）大小（即它看上去的大小）的调整方式，借助拉伸与缩放等使对象更好地适应元素的内容框。",
    "grammar": "\n<position>\n使用 1 到 4 个值来定义该元素在它所处的二维平面中的定位。可以使用相对或绝对偏移。\n\n\n注意：这些定位方式允许被替换元素的对象被定位到内容框外部。\n",
    "initial value": "50% 50%",
    "inherit": "yes",
    "applicable elements": "replaced elements",
    "name": "object-position"
  },
  "offset": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。这个 offset 是 CSS 属性的快速属性动画元素沿着定义的路径。 早期版本 规格 属性叫做 motion. 初始值as each of the properties of the shorthand:offset-position (en-US): autooffset-path (en-US): noneoffset-distance (en-US): 0offset-anchor (en-US): autooffset-rotate (en-US): auto适用元素transformable elements是否是继承属性否Percentagesas each of the properties of the shorthand:offset-position (en-US): referToSizeOfContainingBlockoffset-distance (en-US): refer to the total path lengthoffset-anchor (en-US): relativeToWidthAndHeight计算值as each of the properties of the shorthand:offset-position (en-US): for length the absolute value, otherwise a percentageoffset-path (en-US): as specifiedoffset-distance (en-US): for length the absolute value, otherwise a percentageoffset-anchor (en-US): for length the absolute value, otherwise a percentageoffset-rotate (en-US): as specifiedAnimation typeas each of the properties of the shorthand:offset-position (en-US): a positionoffset-path (en-US): as <angle>, <basic-shape> or <path()>offset-distance (en-US): a length, percentage or calc();offset-anchor (en-US): a positionoffset-rotate (en-US): as <angle>, <basic-shape> or <path()>Creates stacking contextyes",
    "grammar": "[ <'offset-position'> (en-US)? [ <'offset-path'> (en-US) [ <'offset-distance'> (en-US) || <'offset-rotate'> (en-US) ]? ]? ]! [ / <'offset-anchor'> (en-US) ]?",
    "initial value": "as each of the properties of the shorthand:offset-position (en-US): autooffset-path (en-US): noneoffset-distance (en-US): 0offset-anchor (en-US): autooffset-rotate (en-US): auto",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "offset"
  },
  "offset-anchor (en-US)": {
    "desc": "The offset-anchor CSS property specifies the point inside the box of an element traveling along an offset-path that is actually moving along the path.",
    "grammar": "/* Keyword values */\noffset-anchor: top;\noffset-anchor: bottom;\noffset-anchor: left;\noffset-anchor: right;\noffset-anchor: center;\noffset-anchor: auto;\n\n/* <percentage> values */\noffset-anchor: 25% 75%;\n\n/* <length> values */\noffset-anchor: 0 0;\noffset-anchor: 1cm 2cm;\noffset-anchor: 10ch 8em;\n\n/* Edge offsets values */\noffset-anchor: bottom 10px right 20px;\noffset-anchor: right 3em bottom 10px;\n\n/* Global values */\noffset-anchor: inherit;\noffset-anchor: initial;\noffset-anchor: revert;\noffset-anchor: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "transformable elements",
    "name": "offset-anchor (en-US)"
  },
  "offset-distance (en-US)": {
    "desc": "The offset-distance CSS property specifies a position along an offset-path for an element to be placed.",
    "grammar": "/* Default value */\noffset-distance: 0;\n\n/* the middle of the offset-path */\noffset-distance: 50%;\n\n/* a fixed length positioned along the path */\noffset-distance: 40px;\n\n/* Global values */\noffset-distance: inherit;\noffset-distance: initial;\noffset-distance: revert;\noffset-distance: revert-layer;\noffset-distance: unset;\n\n\n<length-percentage>\n\nA length that specifies how far the element is along the path (defined with offset-path).\n100% represents the total length of the path (when the offset-path is defined as a basic shape or path()).\n\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "transformable elements",
    "name": "offset-distance (en-US)"
  },
  "offset-path (en-US)": {
    "desc": "The offset-path CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.",
    "grammar": "/* Default */\noffset-path: none;\n\n/* Function values */\noffset-path: ray(45deg closest-side contain);\n\n/* URL */\noffset-path: url(#path);\n\n/* Shapes */\noffset-path: circle(50% at 25% 25%);\noffset-path: inset(50% 50% 50% 50%);\noffset-path: polygon(30% 0%, 70% 0%, 100% 50%, 30% 100%, 0% 70%, 0% 30%);\noffset-path: path('M 0,200 Q 200,200 260,80 Q 290,20 400,0 Q 300,100 400,200');\n\n/* Geometry Boxes */\noffset-path: margin-box;\noffset-path: stroke-box;\n\n/* Global values */\noffset-path: inherit;\noffset-path: initial;\noffset-path: revert;\noffset-path: unset;\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "transformable elements",
    "name": "offset-path (en-US)"
  },
  "offset-position (en-US)": {
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The offset-position CSS property defines the initial position of the offset-path.",
    "grammar": "\nauto\n\nThe initial position is the position of the box specified by the position property.\n\n<position>\n\nA <position>. A position defines an x/y coordinate, to place an item relative to the edges of an element's box. It can be defined using one to four values. If two non-keyword values are used, the first value represents the horizontal position and the second represents the vertical position. If only one value is specified, the second value is assumed to be center. If three or four values are used, the length-percentage values are offsets for the preceding keyword value(s). For more explanation of these value types, see background-position.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "transformable elements",
    "name": "offset-position (en-US)"
  },
  "offset-rotate (en-US)": {
    "desc": "The offset-rotate CSS property defines the orientation/direction of the element as it is positioned along the offset-path.",
    "grammar": "/* Follow the path direction, with optional additional angle */\noffset-rotate: auto;\noffset-rotate: auto 45deg;\n\n/* Follow the path direction but facing the opposite direction of `auto` */\noffset-rotate: reverse;\n\n/* Keep a constant rotation regardless the position on the path */\noffset-rotate: 90deg;\noffset-rotate: .5turn;\n\n/* Global values */\noffset-rotate: inherit;\noffset-rotate: initial;\noffset-rotate: revert;\noffset-rotate: revert-layer;\noffset-rotate: unset;\n\n\nauto\n\nThe element is rotated by the angle of the direction of the offset-path, relative to the positive x-axis. This is the default value.\n\n<angle>\n\nThe element has a constant clockwise rotation transformation applied to it by the specified rotation angle.\n\nauto <angle>\n\nIf auto is followed by an <angle>, the computed value of the angle is added to the computed value of auto.\n\nreverse\n\nThe element is rotated similar to auto, except it faces the opposite direction. It is the same as specifying a value of auto 180deg.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "transformable elements",
    "name": "offset-rotate (en-US)"
  },
  "opacity": {
    "desc": "",
    "grammar": "/* 完全不透明 */\nopacity: 1;\nopacity: 1.0;\n\n/* 半透明 */\nopacity: 0.6;\n\n/* 完全透明 */\nopacity: 0.0;\nopacity: 0;\n\nopacity: inherit;\n",
    "initial value": "1",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "opacity"
  },
  "order": {
    "desc": "",
    "grammar": "/* Numerical value including negative numbers */\norder: 5;\norder: -5;\n\n/* Global values */\norder: inherit;\norder: initial;\norder: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "Flex items, grid items, and absolutely-positioned flex and grid container children",
    "name": "order"
  },
  "orphans (en-US)": {
    "desc": "The orphans CSS property sets the minimum number of lines in a block container that must be shown at the bottom of a page, region, or column./* <integer> values */orphans: 2;orphans: 3; /* Global values */orphans: inherit;orphans: initial;orphans: revert;orphans: revert-layer;orphans: unset; In typography, an orphan is the first line of a paragraph that appears alone at the bottom of a page. (The paragraph continues on a following page.)",
    "grammar": "\n<integer>\n\nThe minimum number of lines that can stay by themselves at the bottom of a fragment before a fragmentation break. The value must be positive.\n\n",
    "initial value": "2",
    "inherit": "yes",
    "applicable elements": "block container elements",
    "name": "orphans (en-US)"
  },
  "outline": {
    "desc": "CSS 的 outline 属性是在一条声明中设置多个轮廓属性的简写属性 ，例如 outline-style, outline-width 和 outline-color。",
    "grammar": "border 和 outline 很类似，但有如下区别：\n\noutline 不占据空间，绘制于元素内容周围。\n根据规范，outline 通常是矩形，但也可以是非矩形的。\n",
    "initial value": "as each of the properties of the shorthand:outline-color: invert, for browsers supporting it, currentColor for the otheroutline-style: noneoutline-width: medium",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "outline"
  },
  "outline-color": {
    "desc": "outline-color CSS 属性 被用于设置一个元素轮廓的颜色。 这个展示项目的源码由 GitHub 托管 . 如果你对这个展示项目感兴趣，可以 clone https://github.com/mdn/interactive-examples 并向我们提交一个 pull request.大多时候使用outline而不是 outline-style, outline-width 和 outline-color会更方便。元素轮廓是绘制于元素周围的一条线，位于border的外围，使元素突出。不像 border，轮廓在元素的 frame 外绘制并且可能与其他元素重叠。而 border 不会出现这种现象 (除非故意).",
    "grammar": "\n<color>\n轮廓颜色，规则同 <color>.\ninvert\n反色,用于确认轮廓的显示.注意不是所有浏览器都支持该属性,若不则该属性无效.\n",
    "initial value": "invert, for browsers supporting it, currentColor for the other",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "outline-color"
  },
  "outline-offset": {
    "desc": "",
    "grammar": "/* <length> values */\noutline-offset: 3px;\noutline-offset: 0.2em;\n\n/* Global values */\noutline-offset: inherit;\noutline-offset: initial;\noutline-offset: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "outline-offset"
  },
  "outline-style": {
    "desc": "",
    "grammar": "/* 关键字 值 */\noutline-style: auto;\noutline-style: none;\noutline-style: dotted;\noutline-style: dashed;\noutline-style: solid;\noutline-style: double;\noutline-style: groove;\noutline-style: ridge;\noutline-style: inset;\noutline-style: outset;\n\n/* 全局 值*/\noutline-style: inherit;\noutline-style: initial;\noutline-style: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "outline-style"
  },
  "outline-width": {
    "desc": "CSS 属性 outline-width 用于设置一个元素的轮廓的厚度。元素轮廓是绘制于元素周围的一条线，位于 border 的外围。 大多情况下用简写属性 outline 定义轮廓外观会更方便。",
    "grammar": "\n<length>\nThe width of the outline specified as a <length>.\nthin\n取决于用户代理。通常等同于桌面浏览器的 1px （包括 Firefox）。\nmedium\n取决于用户代理。通常等同于桌面浏览器的 3px （包括 Firefox）。\nthick\n取决于用户代理。通常等同于桌面浏览器的 5px（包括 Firefox）。\n",
    "initial value": "medium",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "outline-width"
  },
  "overflow": {
    "desc": "CSS 属性 overflow 定义当一个元素的内容太大而无法适应 块级格式化上下文 时候该做什么。它是 overflow-x 和overflow-y的 简写属性 。 这个选项包含剪切，显示滚动条，或者显示 从容器溢出到周围区域的内容。指定除visible(默认值) 以外的值将创建一个新的 块级格式化上下文. 这在技术层面上是必须的——如果一个浮动元素和滚动条相交，它会在每个滚动步骤后强行重新包装内容，从而导致慢滚动体验。为使 overflow 有效果，块级容器必须有一个指定的高度（height或者max-height）或者将white-space设置为nowrap。 注意： 设置一个轴为visible（默认值），同时设置另一个轴为不同的值，会导致设置visible的轴的行为会变成auto。 注意: 即使将 overflow 设置为 hidden，也可以使用 JavaScript Element.scrollTop 属性来滚动 HTML 元素。",
    "grammar": "\nvisible\n默认值。内容不会被修剪，可以呈现在元素框之外。\nhidden\n如果需要，内容将被剪裁以适合填充框。不提供滚动条。\nscroll\n如果需要，内容将被剪裁以适合填充框。浏览器显示滚动条，无论是否实际剪切了任何内容。 （这可以防止滚动条在内容更改时出现或消失。）打印机仍可能打印溢出的内容。\nauto\n取决于用户代理。如果内容适合填充框内部，则它看起来与可见内容相同，但仍会建立新的块格式化上下文。如果内容溢出，桌面浏览器会提供滚动条。\noverlay \nExperimental\n \nDeprecated\n\n行为与auto相同，但滚动条绘制在内容之上而不是占用空间。仅在基于 WebKit（例如，Safari）和基于 Blink 的（例如，Chrome 或 Opera）浏览器中受支持。\n\nMozilla 扩展\n\n-moz-scrollbars-none \nThis is an obsolete API and is no longer guaranteed to work.\n\n[1]\n使用 overflow:hidden 代替。\n-moz-scrollbars-horizontal \nDeprecated\n[1]\n推荐使用 overflow-x 和 overflow-y .\n-moz-scrollbars-vertical \nDeprecated\n[1]\n推荐使用 overflow-x 和 overflow-y .\n-moz-hidden-unscrollable \nNon-Standard\n\n主要用于内部和主题。禁用 方向键 和 鼠标滚轮 来滚动 XML 跟元素以及<HTML>和<body>元素。\n[1] As of Firefox 63, this feature is behind a feature preference setting. In about:config, set layout.css.overflow.moz-scrollbars.enabled to true\n",
    "name": "overflow"
  },
  "overflow-anchor": {
    "desc": "overflow-anchor CSS 属性提供一种退出浏览器滚动锚定行为的方法，该行为会调整滚动位置以最大程度地减少内容偏移。默认情况下，在任何支持滚动锚定行为的浏览器中都将其启用。因此，仅当您在文档或文档的一部分中遇到滚动锚定问题并且需要关闭行为时，才通常需要更改此属性的值。",
    "grammar": "\nauto\nThe element becomes a potential anchor when adjusting scroll position.\nnone\nThe element won't be selected as a potential anchor.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "overflow-anchor"
  },
  "overflow-block": {
    "desc": "The overflow-block CSS property sets what shows when content overflows the block start and block end edges of a box. This may be nothing, a scroll bar, or the overflow content. The overflow-block property maps to overflow-y or overflow-x depending on the writing mode of the document.",
    "grammar": "\nvisible\nContent is not clipped and may be rendered outside the padding box's block start and block end edges.\nhidden\nContent is clipped if necessary to fit the block dimension in the padding box. No scrollbars are provided.\nscroll\nContent is clipped if necessary to fit in the block dimension in the padding box. Browsers display scrollbars whether or not any content is actually clipped. (This prevents scrollbars from appearing or disappearing when the content changes.) Printers may still print overflowing content.\nauto\nDepends on the user agent. If content fits inside the padding box, it looks the same as visible, but still establishes a new block-formatting context. Desktop browsers provide scrollbars if content overflows.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "Block-containers, flex containers, and grid containers",
    "name": "overflow-block"
  },
  "overflow-clip-margin (en-US)": {
    "desc": "The overflow-clip-margin CSS property determines how far outside its bounds an element with overflow: clip may be painted before being clipped.",
    "grammar": "Initial value0pxApplies toall elementsInheritednoComputed valuethe computed Animation typediscrete",
    "initial value": "0px",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "overflow-clip-margin (en-US)"
  },
  "overflow-inline (en-US)": {
    "desc": "The overflow-inline CSS property sets what shows when content overflows the inline start and end edges of a box. This may be nothing, a scroll bar, or the overflow content. Note: The overflow-inline property maps to overflow-y or overflow-x depending on the writing mode of the document.",
    "grammar": "\nvisible\n\nContent is not clipped and may be rendered outside the padding box's inline start and end edges.\n\nhidden\n\nContent is clipped if necessary to fit the inline dimension in the padding box. No scrollbars are provided.\n\nscroll\n\nContent is clipped if necessary to fit in the padding box in the inline dimension. Browsers display scrollbars whether or not any content is actually clipped. (This prevents scrollbars from appearing or disappearing when the content changes.) Printers may still print overflowing content.\n\nauto\n\nDepends on the user agent. If content fits inside the padding box, it looks the same as visible, but still establishes a new block-formatting context. Desktop browsers provide scrollbars if content overflows.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "Block-containers, flex containers, and grid containers",
    "name": "overflow-inline (en-US)"
  },
  "overflow-wrap": {
    "desc": "",
    "grammar": "/* Keyword values */\noverflow-wrap: normal;\noverflow-wrap: break-word;\n\n/* Global values */\noverflow-wrap: inherit;\noverflow-wrap: initial;\noverflow-wrap: unset;\n\n\n将 overflow-wrap 属性指定为从下面的值列表中选择的单个关键字。",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "non-replaced inline elements",
    "name": "overflow-wrap"
  },
  "overflow-x": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "合法值: visible | hidden | clip | scroll | auto\n\noverflow-x: visible\noverflow-x: hidden\noverflow-x: scroll\noverflow-x: auto\n\noverflow-x: inherit\n",
    "initial value": "visible",
    "inherit": "否",
    "applicable elements": "Block-containers, flex containers, and grid containers",
    "name": "overflow-x"
  },
  "overflow-y": {
    "desc": "",
    "grammar": "/* 在当前 css 选择器元素下，元素内容在垂直方向上溢出时 */\n\n/* overflow-y 属性 可选值 */\n\noverflow-y: visible; /*内容可见*/\noverflow-y: hidden; /*内容隐藏*/\noverflow-y: scroll; /*总是显示滚动条*/\noverflow-y: auto; /*浏览器决定*/\n\n\n/* overflow-y 属性 全局可选值 */\n\noverflow-y: inherit; /*继承*/\noverflow-y: initial; /*默认值*/\noverflow-y: unset; /*未设置*/\n",
    "initial value": "visible",
    "inherit": "否",
    "applicable elements": "Block-containers, flex containers, and grid containers",
    "name": "overflow-y"
  },
  "overscroll-behavior": {
    "desc": "overscroll-behavior CSS 属性是 overscroll-behavior-x 和 overscroll-behavior-y 属性的合并写法，让你可以控制浏览器过度滚动时的表现——也就是滚动到边界。/* 关键字的值 */overscroll-behavior: auto; /* 默认 */overscroll-behavior: contain;overscroll-behavior: none; /* 使用 2 个值 */overscroll-behavior: auto contain; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 默认情况下，当触及页面顶部或者底部时（或者是其他可滚动区域），移动端浏览器倾向于提供一种“触底”效果，甚至进行页面刷新。你可能也发现了，当对话框中含有可滚动内容时，一旦滚动至对话框的边界，对话框下方的页面内容也开始滚动了——这被称为“滚动链”。 在某些情况下我们不想要这些表现，使用 overscroll-behavior 来去除不需要的滚动链，以及类似 QQ 一类的应用下拉刷新效果。初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as each of the properties of the shorthand:overscroll-behavior-x: as specifiedoverscroll-behavior-y: as specifiedAnimation typediscrete",
    "grammar": "\nauto\n默认效果\ncontain\n设置这个值后，默认的滚动边界行为不变（“触底”效果或者刷新），但是临近的滚动区域不会被滚动链影响到，比如对话框后方的页面不会滚动。\nnone\n临近滚动区域不受到滚动链影响，而且默认的滚动到边界的表现也被阻止。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
    "name": "overscroll-behavior"
  },
  "overscroll-behavior-block (en-US)": {
    "desc": "The overscroll-behavior-block CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.See overscroll-behavior for a full explanation./* Keyword values */overscroll-behavior-block: auto; /* default */overscroll-behavior-block: contain;overscroll-behavior-block: none; /* Global values */overscroll-behavior-block: inherit;overscroll-behavior-block: initial;overscroll-behavior-block: revert;overscroll-behavior-block: revert-layer;overscroll-behavior-block: unset;",
    "grammar": "\nauto\n\nThe default scroll overflow behavior occurs as normal.\n\ncontain\n\nDefault scroll overflow behavior is observed inside the element this value is set on (e.g. \"bounce\" effects or refreshes), but no scroll chaining occurs to neighboring scrolling areas, e.g. underlying elements will not scroll.\n\nnone\n\nNo scroll chaining occurs to neighboring scrolling areas, and default scroll overflow behavior is prevented.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
    "name": "overscroll-behavior-block (en-US)"
  },
  "overscroll-behavior-inline (en-US)": {
    "desc": "The overscroll-behavior-inline CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.See overscroll-behavior for a full explanation./* Keyword values */overscroll-behavior-inline: auto; /* default */overscroll-behavior-inline: contain;overscroll-behavior-inline: none; /* Global values */overscroll-behavior-inline: inherit;overscroll-behavior-inline: initial;overscroll-behavior-inline: revert;overscroll-behavior-inline: revert-layer;overscroll-behavior-inline: unset;",
    "grammar": "\nauto\n\nThe default scroll overflow behavior occurs as normal.\n\ncontain\n\nDefault scroll overflow behavior is observed inside the element this value is set on (e.g. \"bounce\" effects or refreshes), but no scroll chaining occurs to neighboring scrolling areas, e.g. underlying elements will not scroll.\n\nnone\n\nNo scroll chaining occurs to neighboring scrolling areas, and default scroll overflow behavior is prevented.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
    "name": "overscroll-behavior-inline (en-US)"
  },
  "overscroll-behavior-x": {
    "desc": "overscroll-behavior-x 这个 CSS 属性用来控制当滚动到区域的水平边界时的浏览器行为。 备注: 详细的解释请访问 overscroll-behavior /* Keyword values */overscroll-behavior: auto; /* default */overscroll-behavior: contain;overscroll-behavior: none; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n默认的滚动溢出行为表现的和正常一样。\ncontain\n默认的滚动溢出行为将被内部的元素观察到，(例如：“bounce”效果或者刷新)，但是相邻的区域不会产生连续滚动效果，例如：在下面的元素不会被滚动。\nnone\n相邻的滚动区域不会有连续滚动效果，并且默认的滚动溢出行为会被阻止。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
    "name": "overscroll-behavior-x"
  },
  "overscroll-behavior-y": {
    "desc": "overscroll-behavior-y 这个 CSS 属性用来控制当滚动到区域的垂直边界时的浏览器行为。 Note: 详细的解释请访问 overscroll-behavior。 /* Keyword values */overscroll-behavior: auto; /* default */overscroll-behavior: contain;overscroll-behavior: none; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n默认的滚动溢出行为表现的和正常一样。 .\ncontain\n默认的滚动溢出行为将被内部的元素观察到，(例如：“bounce”效果或者刷新)，但是相邻的区域不会产生连续滚动效果，例如：在下面的元素不会被滚动。\nnone\n相邻的滚动区域不会有连续滚动效果，并且默认的滚动溢出行为会被阻止。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
    "name": "overscroll-behavior-y"
  },
  "padding": {
    "desc": "padding CSS 简写属性控制元素所有四条边的内边距区域。 这个可交互示例的源码保存在一个 GitHub 仓库中。如果你有兴趣为这个交互示例项目做作出贡献，请 clone 下 https://github.com/mdn/interactive-examples 然后给我们提一个 pull request.一个元素的内边距区域指的是其内容与其边框之间的空间。 注意：内边距控制的是元素内部空出的空间。相反，margin 操作元素 外部空出的空间。",
    "grammar": "/* 应用于所有边 */\npadding: 1em;\n\n/* 上边下边 | 左边右边 */\npadding: 5% 10%;\n\n/* 上边 | 左边右边 | 下边 */\npadding: 1em 2em 2em;\n\n/* 上边 | 右边 | 下边 | 左边 */\npadding: 5px 1em 0 2em;\n\n/* 全局值 */\npadding: inherit;\npadding: initial;\npadding: unset;\n\npadding 属性接受 1~4 个值。每个值可以是 <length> 或 <percentage>。取值不能为负。\n\n当只指定一个值时，该值会统一应用到全部四个边的内边距上。\n指定两个值时，第一个值会应用于上边和下边的内边距，第二个值应用于左边和右边。\n指定三个值时，第一个值应用于上边，第二个值应用于右边和左边，第三个则应用于下边的内边距。\n指定四个值时，依次（顺时针方向）作为上边，右边，下边，和左边的内边距。\n",
    "initial value": "as each of the properties of the shorthand:padding-bottom: 0padding-left: 0padding-right: 0padding-top: 0",
    "inherit": "否",
    "applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
    "name": "padding"
  },
  "padding-block-end (en-US)": {
    "desc": "The padding-block-end CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
    "grammar": "/* <length> values */\npadding-block-end: 10px;      /* An absolute length */\npadding-block-end: 1em;       /* A length relative to the text size */\n\n/* <percentage> value */\npadding-block-end: 5%;        /* A padding relative to the block container's width */\n\n/* Global values */\npadding-block-end: inherit;\npadding-block-end: initial;\npadding-block-end: revert;\npadding-block-end: revert-layer;\npadding-block-end: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "padding-block-end (en-US)"
  },
  "padding-block-start (en-US)": {
    "desc": "The padding-block-start CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
    "grammar": "/* <length> values */\npadding-block-start: 10px;      /* An absolute length */\npadding-block-start: 1em;       /* A length relative to the text size */\n\n/* <percentage> value */\npadding-block-start: 5%;        /* A padding relative to the block container's width */\n\n/* Global values */\npadding-block-start: inherit;\npadding-block-start: initial;\npadding-block-start: revert;\npadding-block-start: revert-layer;\npadding-block-start: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "padding-block-start (en-US)"
  },
  "padding-bottom": {
    "desc": "CSS 属性 padding-bottom 是指一个元素在内边距区域（padding area）中下方的高度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。 /* <length> values */padding-bottom: 0.5em;padding-bottom: 0;padding-bottom: 2cm; /* <percentage> value */padding-bottom: 10%; /* Global values */padding-bottom: inherit;padding-bottom: initial;padding-bottom: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
    "grammar": "\nlength\n当内边距（padding）大小是一个固定单位数值的时候，一定不能为负数。\n \npercentage\n当内边距（padding）是一个百分比的时候，百分比是和本身包含的元素的宽度有关的，同样一定不能为负数。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
    "name": "padding-bottom"
  },
  "padding-inline-end (en-US)": {
    "desc": "The padding-inline-end CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
    "grammar": "/* <length> values */\npadding-inline-end: 10px;     /* An absolute length */\npadding-inline-end: 1em;      /* A length relative to the text size */\n\n/* <percentage> value */\npadding-inline-end: 5%;       /* A padding relative to the block container's width */\n\n/* Global values */\npadding-inline-end: inherit;\npadding-inline-end: initial;\npadding-inline-end: revert;\npadding-inline-end: revert-layer;\npadding-inline-end: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "padding-inline-end (en-US)"
  },
  "padding-inline-start": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* <length> values */\npadding-inline-start: 10px;   /* An absolute length */\npadding-inline-start: 1em;    /* A length relative to the text size */\n\n/* <percentage> value */\npadding-inline-start: 5%;     /* A padding relative to the block container's width */\n\n/* Global values */\npadding-inline-start: inherit;\npadding-inline-start: initial;\npadding-inline-start: unset;\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "padding-inline-start"
  },
  "padding-left": {
    "desc": "CSS 属性 padding-left 是指一个元素在内边距区域（padding area）中左边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。 元素的“填充区域”是其内容和边框之间的空间。 贴士： padding 属性可用于通过一个声明在元素的四个边（上、下、左、右）上设置填充。",
    "grammar": "\n<length>\n填充内边距的长度。它必须是非负的。\n<percentage>\n以与父级盒子的百分比表示的填充大小。它也必须是非负的。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
    "name": "padding-left"
  },
  "padding-right": {
    "desc": "CSS 属性 padding-right 是指一个元素在内边距区域（padding area）中右边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。/* <length> values */padding-right: 0.5em;padding-right: 0;padding-right: 2cm; /* <percentage> value */padding-right: 10%; /* Global values */padding-right: inherit;padding-right: initial;padding-right: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
    "grammar": "\nlength\n当内边距（padding）大小是一个固定单位数值的时候，一定不能为负数。\npercentage\n当内边距（padding）是一个百分比的时候，百分比是和本身包含的元素的宽度有关的，同样一定不能为负数。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
    "name": "padding-right"
  },
  "padding-top": {
    "desc": "CSS 属性 padding-top 是指一个元素在内边距区域（padding area）中上方的高度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。 /* <length> values */padding-top: 0.5em;padding-top: 0;padding-top: 2cm; /* <percentage> value */padding-top: 10%; /* Global values */padding-top: inherit;padding-top: initial;padding-top: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
    "grammar": "\nlength\n当内边距（padding）大小是一个固定单位数值的时候，一定不能为负数。\npercentage\n当内边距（padding）是一个百分比的时候，百分比是和包含块（containing block）的宽度有关的，同样一定不能为负数。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
    "name": "padding-top"
  },
  "page-break-after": {
    "desc": "page-break-after CSS 属性调整当前元素之后的分页符。此属性适用于生成一个盒子的块元素。它不适用于不会生成一个盒子的空 <div>。/* Keyword values */page-break-after: auto;page-break-after: always;page-break-after: avoid;page-break-after: left;page-break-after: right;page-break-after: recto;page-break-after: verso; /* Global values */page-break-after: inherit;page-break-after: initial;page-break-after: unset; Note: 这个属性正在被更通用的 break-after 取代。这个新的属性也处理列和区域中断，并在语法上兼容 page-break-after。在使用 page-break-after 之前，请检查是否可以使用 break-after 代替。在将来， page-break-after 将只是它的一些值的别名。",
    "grammar": "\nauto\n初始值。自动分页符（既不强制也不禁止）。\nalways\n始终在元素后强制分页。\navoid\n避免在元素后出现分页符。\nleft\n在元素之后足够的分页符，一直到一张空白的左页为止。\nright\n在元素之后足够的分页符，一直到一张空白的右页为止。\nrecto \nExperimental\n\nIf pages progress left-to-right, then this acts like right. If pages progress right-to-left, then this acts like left.\nverso \nExperimental\n\nIf pages progress left-to-right, then this acts like left. If pages progress right-to-left, then this acts like right.\n",
    "name": "page-break-after"
  },
  "page-break-before (en-US)": {
    "desc": "Warning: This property has been replaced by the break-before property. The page-break-before CSS property adjusts page breaks before the current element.This property applies to block elements that generate a box. It won't apply on an empty <div> that won't generate a box./* Keyword values */page-break-before: auto;page-break-before: always;page-break-before: avoid;page-break-before: left;page-break-before: right;page-break-before: recto;page-break-before: verso; /* Global values */page-break-before: inherit;page-break-before: initial;page-break-before: revert;page-break-before: revert-layer;page-break-before: unset;",
    "grammar": "\nauto\n\nInitial value. Automatic page breaks (neither forced nor forbidden).\n\nalways\n\nAlways force page breaks before the element.\n\navoid\n\nAvoid page breaks before the element.\n\nleft\n\nForce page breaks before the element so that the next page is formatted as a left page. It's the page placed on the left side of the spine of the book or the back side of the page in duplex printing.\n\nright\n\nForce page breaks before the element so that the next page is formatted as a right page. It's the page placed on the right side of the spine of the book or the front side of the page in duplex printing.\n\nrecto \nExperimental\n\n\nIf pages progress left-to-right, then this acts like right. If pages progress right-to-left, then this acts like left.\n\nverso \nExperimental\n\n\nIf pages progress left-to-right, then this acts like left. If pages progress right-to-left, then this acts like right.\n\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.",
    "name": "page-break-before (en-US)"
  },
  "page-break-inside": {
    "desc": "page-break-inside CSS 属性调整当前元素内的分页符。/* Keyword values */page-break-inside: auto;page-break-inside: avoid; /* Global values */page-break-inside: inherit;page-break-inside: initial;page-break-inside: unset; 初始值auto适用元素block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\nInitial value. Automatic page breaks (neither forced nor forbidden).\navoid\nAvoid page breaks inside the element.\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.",
    "name": "page-break-inside"
  },
  "perspective": {
    "desc": "CSS 属性 perspective指定了观察者与 z=0 平面的距离，使具有三维位置变换的元素产生透视效果。z>0 的三维元素比正常大，而 z<0 时则比正常小，大小程度由该属性的值决定。 三维元素在观察者后面的部分不会绘制出来，即 z 轴坐标值大于 perspective 属性值的部分。默认情况下，消失点位于元素的中心，但是可以通过设置 perspective-origin 属性来改变其位置。当该属性值不为 0 和 none 时，会创建新的 层叠上下文。在这种情况下，容器内元素的层叠关系像是使用了 position: fixed 一样。",
    "grammar": "\nnone\n没有应用 perspective 样式时的默认值。\n<length>\n<length> 指定观察者距离 z=0 平面的距离，为元素及其内容应用透视变换。当值为 0 或负值时，无透视变换。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "perspective"
  },
  "perspective-origin": {
    "desc": "CSS 属性 perspective-origin 指定了观察者的位置，用作 perspective 属性的消失点。",
    "grammar": "\nx-position\n指定消失点的横坐标，其值有以下形式：\n \n<length-percentage> 长度值或相对于元素宽度的百分比值，可为负值。\nleft, 关键字，0 值的简记。\ncenter, 关键字，50% 的简记。\nright, 关键字，100% 的简记。\n\n\ny-position\n指定消失点的纵坐标，其值有以下形式：\n \n<length-percentage> 长度值或相对于元素高度的百分比值，可为负值。\ntop, 关键字，0 值的简记。\ncenter, 关键字，50% 的简记。\nbottom, 关键字，100% 的简记。\n\n\n",
    "initial value": "50% 50%",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "perspective-origin"
  },
  "place-content": {
    "desc": "place-content 属性是align-content 和 justify-content的简写。使用这两个属性的值可以用于任何的布局情况。",
    "grammar": "\nstart\n所有的子元素堆叠在父元素上合适的轴线上的起点对齐。\nend\n所有的子元素堆叠在父元素上合适的轴线上的终点对齐\nflex-start\n所有的子元素堆叠在父元素的主轴或交叉轴上起点对齐，主要取决于 flex-direction 的设置。\n 仅适用于 flex 布局的子元素.。如果父元素没有设置为 flex，flex-start将被视为start\nflex-end\n所有的子元素堆叠在父元素的主轴或交叉轴上终点对齐，主要取决于 flex-direction 的设置。\n 仅适用于 flex 布局的子元素.。如果父元素没有设置为 flex，flex-end将被视为end\ncenter\n所有的子元素堆叠在父元素的中间对齐\nleft\nThe items are packed flush to each other toward the left edge of the alignment container. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nright\nThe items are packed flush to each other toward the right edge of the alignment container in the appropriate axis. If the property’s axis is not parallel with the inline axis, this value behaves like start.\nspace-between\nThe items are evenly distributed within the alignment container. The spacing between each pair of adjacent items is the same. The first item is flush with the main-start edge, and the last item is flush with the main-end edge.\nbaseline\n first baseline\nlast baseline\nSpecifies participation in first- or last-baseline alignment: aligns the alignment baseline of the box’s first or last baseline set with the corresponding baseline in the shared first or last baseline set of all the boxes in its baseline-sharing group.\n The fallback alignment for first baseline is start, the one for last baseline is end.\nspace-around\nThe items are evenly distributed within the alignment container. The spacing between each pair of adjacent items is the same. The empty space before the first and after the last item equals half of the space between each pair of adjacent items.\nspace-evenly\nThe items are evenly distributed within the alignment container. The spacing between each pair of adjacent items, the main-start edge and the first item, and the main-end edge and the last item, are all exactly the same.\nstretch\nIf the combined size of the items is less than the size of the alignment container, any auto-sized items have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "multi-line flex containers",
    "name": "place-content"
  },
  "place-items": {
    "desc": "CSS 中的 place-items 是一个简写属性 ，它允许你在相关的布局（如 Grid 或 Flexbox）中可以同时沿着块级和内联方向对齐元素 (例如：align-items 和 justify-items 属性) 。如果未提供第二个值，则第一个值作为第二个值的默认值。",
    "grammar": "/* Keyword values */\nplace-items: auto center;\nplace-items: normal start;\n\n/* Positional alignment */\nplace-items: center normal;\nplace-items: start auto;\nplace-items: end normal;\nplace-items: self-start auto;\nplace-items: self-end normal;\nplace-items: flex-start auto;\nplace-items: flex-end normal;\nplace-items: left auto;\nplace-items: right normal;\n\n/* Baseline alignment */\nplace-items: baseline normal;\nplace-items: first baseline auto;\nplace-items: last baseline normal;\nplace-items: stretch auto;\n\n/* Global values */\nplace-items: inherit;\nplace-items: initial;\nplace-items: unset;\n",
    "initial value": "as each of the properties of the shorthand:align-items: normaljustify-items: legacy",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "place-items"
  },
  "place-self (en-US)": {
    "desc": "The place-self CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the align-self and justify-self properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nalign-self\njustify-self\n",
    "initial value": "as each of the properties of the shorthand:align-self: autojustify-self: auto",
    "inherit": "no",
    "applicable elements": "block-level boxes, absolutely-positioned boxes, and grid items",
    "name": "place-self (en-US)"
  },
  "pointer-events": {
    "desc": "pointer-events CSS 属性指定在什么情况下 (如果有) 某个特定的图形元素可以成为鼠标事件的 target (en-US)。/* Keyword values */pointer-events: auto;pointer-events: none;pointer-events: visiblePainted; /* SVG only */pointer-events: visibleFill; /* SVG only */pointer-events: visibleStroke; /* SVG only */pointer-events: visible; /* SVG only */pointer-events: painted; /* SVG only */pointer-events: fill; /* SVG only */pointer-events: stroke; /* SVG only */pointer-events: all; /* SVG only */ /* Global values */pointer-events: inherit;pointer-events: initial;pointer-events: unset;当此属性未指定时，visiblePainted值的相同特征适用于 SVG（可缩放矢量图形）内容。除了指示该元素不是鼠标事件的目标之外，值none表示鼠标事件“穿透”该元素并且指定该元素“下面”的任何东西。初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n与pointer-events属性未指定时的表现效果相同，对于 SVG 内容，该值与visiblePainted效果相同\nnone\n元素永远不会成为鼠标事件的target。但是，当其后代元素的pointer-events属性指定其他值时，鼠标事件可以指向后代元素，在这种情况下，鼠标事件将在捕获或冒泡阶段触发父元素的事件侦听器。\nvisiblePainted\n\n只适用于 SVG。元素只有在以下情况才会成为鼠标事件的目标：\n\nvisibility属性值为visible，且鼠标指针在元素内部，且fill属性指定了none之外的值\nvisibility属性值为visible，鼠标指针在元素边界上，且stroke属性指定了none之外的值\n\n\nvisibleFill\n只适用于 SVG。只有在元素visibility属性值为visible，且鼠标指针在元素内部时，元素才会成为鼠标事件的目标，fill属性的值不影响事件处理。\nvisibleStroke\n只适用于 SVG。只有在元素visibility属性值为visible，且鼠标指针在元素边界时，元素才会成为鼠标事件的目标，stroke属性的值不影响事件处理。\nvisible\n只适用于 SVG。只有在元素visibility属性值为visible，且鼠标指针在元素内部或边界时，元素才会成为鼠标事件的目标，fill和stroke属性的值不影响事件处理。\npainted\n\n只适用于 SVG。元素只有在以下情况才会成为鼠标事件的目标：\n\n鼠标指针在元素内部，且fill属性指定了none之外的值\n鼠标指针在元素边界上，且stroke属性指定了none之外的值\n\nvisibility属性的值不影响事件处理。\n\nfill\n只适用于 SVG。只有鼠标指针在元素内部时，元素才会成为鼠标事件的目标，fill和visibility属性的值不影响事件处理。\nstroke\n只适用于 SVG。只有鼠标指针在元素边界上时，元素才会成为鼠标事件的目标，stroke和visibility属性的值不影响事件处理。\nall\n只适用于 SVG。只有鼠标指针在元素内部或边界时，元素才会成为鼠标事件的目标，fill、stroke和visibility属性的值不影响事件处理。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "pointer-events"
  },
  "position": {
    "desc": "CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。",
    "grammar": "position 属性被指定为从下面的值列表中选择的单个关键字。",
    "initial value": "static",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "position"
  },
  "print-color-adjust (en-US)": {
    "desc": "The print-color-adjust CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.",
    "grammar": "\neconomy\n\n\n      The user agent is allowed to make adjustments to the element as it deems appropriate and prudent in order to optimize the output for the device it's being rendered for.\n      For example, when printing, a browser might opt to leave out all background images and to adjust text colors to be sure the contrast is optimized for reading on white paper.\n      This is the default.\n    \n\nexact\n\n\n      The element's content has been specifically and carefully crafted to use colors, images, and styles in a thoughtful and/or important way, such that being altered by the browser might actually make things worse rather than better.\n      The appearance of the content should not be changed except by the user's request.\n      For example, a page might include a list of information with rows whose background colors alternate between white and a light grey.\n      Removing the background color would decrease the legibility of the content.\n    \n\n",
    "initial value": "economy",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "print-color-adjust (en-US)"
  },
  "quotes": {
    "desc": "quotes CSS 属性用于设置引号的样式。",
    "grammar": "\nnone\n content 属性的值 open-quote 和 close-quote 将不会展示引号。\nauto\n用适当的引号，基于在所选元素上设置的任何语言值（例如，通过 lang 属性）。\n[<string> <string>]+\n一组或者多组 <string> 的值对应 open-quote and close-quote. 第一对表示引号的外层，第二对表示第一个嵌套层，下一对表示第三层，依此类推。\n",
    "initial value": "depends on user agent",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "quotes"
  },
  "resize": {
    "desc": "",
    "grammar": "/* Keyword values */\nresize: none;\nresize: both;\nresize: horizontal;\nresize: vertical;\nresize: block;\nresize: inline;\n\n/* Global values */\nresize: inherit;\nresize: initial;\nresize: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "elements with overflow other than visible, and optionally replaced elements representing images or videos, and iframes",
    "name": "resize"
  },
  "right": {
    "desc": "right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。/* <length> values */right: 3px;right: 2.4em; /* <percentage>s of the width of the containing block */right: 10%; /* Keyword value */right: auto; /* Global values */right: inherit;right: initial;right: unset; right的效果取决于元素的position属性： 当position设置为absolute或fixed时，right属性指定了定位元素右外边距边界与其包含块右边界之间的偏移。当position设置为relative时，right属性指定了元素的右边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，right属性的效果和 position 为relative等同；如果元素在 viewport 外面，right属性的效果和 position 为fixed等同。当position设置为static时，right属性无效。 当left​​​​​​和 right 同时指定时，元素的位置会被重复指定。当容器是从左到右时，left的值会被优先设定；当容器是从右到左时，right的值会被优先设定。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the width of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
    "grammar": "\n<length>\n可以是负的，正的 或者 null <length> 表示：\n \n对于绝对定位的元素，元素右外边距边界与其包含块右边界之间的偏移。\n对于相对定位定位的元素，元素的右边界离开其正常位置的偏移。\n\n\n<percentage>\n代表元素包含块的宽度的百分比 <percentage>。\nauto\n这个关键字表示：\n \n对于绝对定位元素，元素将忽略此属性而以left属性为准，如果此时设置width: auto，将基于内容需要的宽度设置宽度；如果left也为auto的话，元素的水平位置就是它假如作为静态 (即 static) 元素时该在的位置。\n对于相对定位元素，元素相对正常位置的偏移量将基于left属性；如果left也为 auto的话，元素将不会有偏移。\n\n\ninherit\n这个关键字表示该值与其父元素 (可能不是它的包含块) 的计算值相同。对这个计算值的处理将和它原本为 <length>， <percentage> 或 auto 一样。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "positioned elements",
    "name": "right"
  },
  "rotate": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。rotate属性允许你单独设置transform的旋转属性。这种映射方式可以让我们更方便的设置我们想要的效果，并且避免了简写形式需要记忆属性顺序的不方便之处。",
    "grammar": "\n角度值\nAn <angle> specifying the angle to rotate the affected element through, around the Z axis. Equivalent to a rotate() (2D rotation) function.\nx, y 或者 z 轴名称加上角度值\nThe name of the axis you want to rotate the affected element around (\"x\", \"y\", or \"z\"), plus an <angle> specifying the angle to rotate the element through. Equivalent to a rotateX()/rotateY()/rotateZ() (3D rotation) function.\n向量加上角度值\nThree <number>s representing an origin-centered vector that defines a line around which you want to rotate the element, plus an <angle> specifying the angle to rotate the element through. Equivalent to a rotate3d() (3D rotation) function.\nnone\n指定不应用旋转\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "rotate"
  },
  "row-gap (grid-row-gap)": {
    "desc": "row-gap 该 CSS 属性用来设置行元素之间的间隙（gutter）大小。",
    "grammar": "/* <length> values */\nrow-gap: 20px;\nrow-gap: 1em;\nrow-gap: 3vmin;\nrow-gap: 0.5cm;\n\n/* <percentage> value */\nrow-gap: 10%;\n\n/* Global values */\nrow-gap: inherit;\nrow-gap: initial;\nrow-gap: revert;\nrow-gap: revert-layer;\nrow-gap: unset;\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "multi-column elements, flex containers, grid containers",
    "name": "row-gap (grid-row-gap)"
  },
  "ruby-align (en-US)": {
    "desc": "The ruby-align CSS property defines the distribution of the different ruby elements over the base./* Keyword values */ruby-align: start;ruby-align: center;ruby-align: space-between;ruby-align: space-around; /* Global values */ruby-align: inherit;ruby-align: initial;ruby-align: revert;ruby-align: revert-layer;ruby-align: unset;",
    "grammar": "\nstart\n\nIs a keyword indicating that the ruby will be aligned with the start of the base text.\n\ncenter\n\nIs a keyword indicating that the ruby will be aligned at the middle of the base text.\n\nspace-between\n\nIs a keyword indicating that the extra space will be distributed between the elements of the ruby.\n\nspace-around\n\nIs a keyword indicating that the extra space will be distributed between the elements of the ruby, and around it.\n\n",
    "initial value": "space-around",
    "inherit": "yes",
    "applicable elements": "ruby bases, ruby annotations, ruby base containers, ruby annotation containers",
    "name": "ruby-align (en-US)"
  },
  "ruby-position (en-US)": {
    "desc": "The ruby-position CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (over), under it (under), or between the characters on their right side (inter-character).",
    "grammar": "/* Keyword values */\nruby-position: over;\nruby-position: under;\nruby-position: inter-character;\nruby-position: alternate;\n\n/* Global values */\nruby-position: inherit;\nruby-position: initial;\nruby-position: revert;\nruby-position: revert-layer;\nruby-position: unset;\n",
    "initial value": "alternate",
    "inherit": "yes",
    "applicable elements": "ruby annotations containers",
    "name": "ruby-position (en-US)"
  },
  "scale": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 scale 允许你可以分别且独立地指定 CSS 属性 transform 缩放的比例。这更好地映射到典型的 UI（用户界面）用法中，并免去了在指定变换值时必须记住变换函数的精确顺序的麻烦。",
    "grammar": "\n单一数值\n单一的数值即指定了一个缩放系数，同时作用于 X 轴和 Y 轴让该元素进行缩放，相当于指定了单个值的 scale()(2D 缩放) 函数。\n两个长度/百分比值\n两个数值即分别指定了 2D 比例的 X 轴和 Y 轴的缩放系数，相当于指定了两个值的 scale()（2D 缩放）函数。\n三个长度/百分比值\n三个数值即分别指定了 3D 比例的 X 轴、Y 轴和 Z 轴的缩放系数。相当于一个 scale3d() 函数。\nnone\n指定不进行缩放。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "scale"
  },
  "scroll-behavior": {
    "desc": "当用户手动导航或者 CSSOM scrolling API 触发滚动操作时，CSS 属性 scroll-behavior 为一个滚动框指定滚动行为，其他任何的滚动，例如那些由于用户行为而产生的滚动，不受这个属性的影响。在根元素中指定这个属性时，它反而适用于视窗。初始值auto适用元素scrolling boxes是否是继承属性否计算值as specifiedAnimation typediscrete 用户代理可以忽略此属性。",
    "grammar": "\nauto\n滚动框立即滚动。\nsmooth\n滚动框通过一个用户代理预定义的时长、使用预定义的时间函数，来实现平稳的滚动，用户代理应遵循其平台的约定，如果有的话。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "scrolling boxes",
    "name": "scroll-behavior"
  },
  "scroll-margin": {
    "desc": "scroll-margin 属性是修改一系列 scroll-margin 手写特性的快捷方式，它分配值的方式与 margin 属性为各个 margin-* 手写特性分配值的方式非常类似。 这个示例的代码存放在 Github 仓库。如果你想对这个项目贡献代码，请从 https://github.com/mdn/interactive-examples 克隆项目，并且向我们提交 PR。scroll-margin 属性的值代表用于将盒元素拖拽到显示区域的拖拽滚动区域的起点。拖拽滚动区域由是由转换后边框大小的盒元素决定的，它会找到盒元素的矩形边界（在滚动的容器的坐标空间轴上），并添加指定的起点。初始值0适用元素all elements是否是继承属性否计算值as specifiedAnimation typeby computed value type",
    "grammar": "\n<length>\n从滚动容器的相应边缘开始。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "scroll-margin"
  },
  "scroll-margin-block (en-US)": {
    "desc": "The scroll-margin-block shorthand property sets the scroll margins of an element in the block dimension.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nscroll-margin-block-end\nscroll-margin-block-start\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-block (en-US)"
  },
  "scroll-margin-block-end (en-US)": {
    "desc": "The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-block-end: 10px;\nscroll-margin-block-end: 1em;\n\n/* Global values */\nscroll-margin-block-end: inherit;\nscroll-margin-block-end: initial;\nscroll-margin-block-end: revert;\nscroll-margin-block-end: revert-layer;\nscroll-margin-block-end: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-block-end (en-US)"
  },
  "scroll-margin-block-start (en-US)": {
    "desc": "The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-block-start: 10px;\nscroll-margin-block-start: 1em;\n\n/* Global values */\nscroll-margin-block-start: inherit;\nscroll-margin-block-start: initial;\nscroll-margin-block-start: revert;\nscroll-margin-block-start: revert-layer;\nscroll-margin-block-start: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-block-start (en-US)"
  },
  "scroll-margin-bottom (en-US)": {
    "desc": "The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-bottom: 10px;\nscroll-margin-bottom: 1em;\n\n/* Global values */\nscroll-margin-bottom: inherit;\nscroll-margin-bottom: initial;\nscroll-margin-bottom: revert;\nscroll-margin-bottom: revert-layer;\nscroll-margin-bottom: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-bottom (en-US)"
  },
  "scroll-margin-inline (en-US)": {
    "desc": "The scroll-margin-inline shorthand property sets the scroll margins of an element in the inline dimension.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nscroll-margin-inline-end\nscroll-margin-inline-start\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-inline (en-US)"
  },
  "scroll-margin-inline-end (en-US)": {
    "desc": "The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-inline-end: 10px;\nscroll-margin-inline-end: 1em;\n\n/* Global values */\nscroll-margin-inline-end: inherit;\nscroll-margin-inline-end: initial;\nscroll-margin-inline-end: revert;\nscroll-margin-inline-end: revert-layer;\nscroll-margin-inline-end: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-inline-end (en-US)"
  },
  "scroll-margin-inline-start (en-US)": {
    "desc": "The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-inline-start: 10px;\nscroll-margin-inline-start: 1em;\n\n/* Global values */\nscroll-margin-inline-start: inherit;\nscroll-margin-inline-start: initial;\nscroll-margin-inline-start: revert;\nscroll-margin-inline-start: revert-layer;\nscroll-margin-inline-start: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-inline-start (en-US)"
  },
  "scroll-margin-left (en-US)": {
    "desc": "The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-left: 10px;\nscroll-margin-left: 1em;\n\n/* Global values */\nscroll-margin-left: inherit;\nscroll-margin-left: initial;\nscroll-margin-left: revert;\nscroll-margin-left: revert-layer;\nscroll-margin-left: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-left (en-US)"
  },
  "scroll-margin-right (en-US)": {
    "desc": "The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
    "grammar": "/* <length> values */\nscroll-margin-right: 10px;\nscroll-margin-right: 1em;\n\n/* Global values */\nscroll-margin-right: inherit;\nscroll-margin-right: initial;\nscroll-margin-right: revert;\nscroll-margin-right: revert-layer;\nscroll-margin-right: unset;\n",
    "initial value": "0",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "scroll-margin-right (en-US)"
  },
  "scroll-margin-top": {
    "desc": "scroll-margin-top 属性定义了滚动捕捉区域的顶边距，用于在捕捉视口上捕捉该盒子。滚动捕捉区域是由变换后的边框决定的，找到它的矩形边界框（在滚动容器的坐标空间轴中轴对齐），然后添加指定的起始点。",
    "grammar": "\n<length>\n滚动容器顶部边缘的起点\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "scroll-margin-top"
  },
  "scroll-padding (en-US)": {
    "desc": "The scroll-padding shorthand property sets scroll padding on all sides of an element at once, much like the padding property does for padding on an element.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nscroll-padding-bottom\nscroll-padding-left\nscroll-padding-right\nscroll-padding-top\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding (en-US)"
  },
  "scroll-padding-block-end (en-US)": {
    "desc": "The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-block-end: auto;\n\n/* <length> values */\nscroll-padding-block-end: 10px;\nscroll-padding-block-end: 1em;\nscroll-padding-block-end: 10%;\n\n/* Global values */\nscroll-padding-block-end: inherit;\nscroll-padding-block-end: initial;\nscroll-padding-block-end: revert;\nscroll-padding-block-end: revert-layer;\nscroll-padding-block-end: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-block-end (en-US)"
  },
  "scroll-padding-block-start (en-US)": {
    "desc": "The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-block-start: auto;\n\n/* <length> values */\nscroll-padding-block-start: 10px;\nscroll-padding-block-start: 1em;\nscroll-padding-block-start: 10%;\n\n/* Global values */\nscroll-padding-block-start: inherit;\nscroll-padding-block-start: initial;\nscroll-padding-block-start: revert;\nscroll-padding-block-start: revert-layer;\nscroll-padding-block-start: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-block-start (en-US)"
  },
  "scroll-padding-bottom (en-US)": {
    "desc": "The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-bottom: auto;\n\n/* <length> values */\nscroll-padding-bottom: 10px;\nscroll-padding-bottom: 1em;\nscroll-padding-bottom: 10%;\n\n/* Global values */\nscroll-padding-bottom: inherit;\nscroll-padding-bottom: initial;\nscroll-padding-bottom: revert;\nscroll-padding-bottom: revert-layer;\nscroll-padding-bottom: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-bottom (en-US)"
  },
  "scroll-padding-inline (en-US)": {
    "desc": "The scroll-padding-inline shorthand property sets the scroll padding of an element in the inline dimension.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\nscroll-padding-inline-end\nscroll-padding-inline-start\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-inline (en-US)"
  },
  "scroll-padding-inline-end (en-US)": {
    "desc": "The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-inline-end: auto;\n\n/* <length> values */\nscroll-padding-inline-end: 10px;\nscroll-padding-inline-end: 1em;\nscroll-padding-inline-end: 10%;\n\n/* Global values */\nscroll-padding-inline-end: inherit;\nscroll-padding-inline-end: initial;\nscroll-padding-inline-end: revert;\nscroll-padding-inline-end: revert-layer;\nscroll-padding-inline-end: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-inline-end (en-US)"
  },
  "scroll-padding-inline-start (en-US)": {
    "desc": "The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-inline-start: auto;\n\n/* <length> values */\nscroll-padding-inline-start: 10px;\nscroll-padding-inline-start: 1em;\nscroll-padding-inline-start: 10%;\n\n/* Global values */\nscroll-padding-inline-start: inherit;\nscroll-padding-inline-start: initial;\nscroll-padding-inline-start: revert;\nscroll-padding-inline-start: revert-layer;\nscroll-padding-inline-start: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-inline-start (en-US)"
  },
  "scroll-padding-left (en-US)": {
    "desc": "The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-left: auto;\n\n/* <length> values */\nscroll-padding-left: 10px;\nscroll-padding-left: 1em;\nscroll-padding-left: 10%;\n\n/* Global values */\nscroll-padding-left: inherit;\nscroll-padding-left: initial;\nscroll-padding-left: revert;\nscroll-padding-left: revert-layer;\nscroll-padding-left: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-left (en-US)"
  },
  "scroll-padding-right (en-US)": {
    "desc": "The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-right: auto;\n\n/* <length> values */\nscroll-padding-right: 10px;\nscroll-padding-right: 1em;\nscroll-padding-right: 10%;\n\n/* Global values */\nscroll-padding-right: inherit;\nscroll-padding-right: initial;\nscroll-padding-right: revert;\nscroll-padding-right: revert-layer;\nscroll-padding-right: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-right (en-US)"
  },
  "scroll-padding-top (en-US)": {
    "desc": "The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
    "grammar": "/* Keyword values */\nscroll-padding-top: auto;\n\n/* <length> values */\nscroll-padding-top: 10px;\nscroll-padding-top: 1em;\nscroll-padding-top: 10%;\n\n/* Global values */\nscroll-padding-top: inherit;\nscroll-padding-top: initial;\nscroll-padding-top: revert;\nscroll-padding-top: revert-layer;\nscroll-padding-top: unset;\n",
    "initial value": "auto",
    "inherit": "no",
    "applicable elements": "scroll containers",
    "name": "scroll-padding-top (en-US)"
  },
  "scroll-snap-coordinate": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* 关键值 */\nscroll-snap-coordinate: none;\n\n/* <位置>值 */\nscroll-snap-coordinate: 50px 50px;                   /* 单坐标 */\nscroll-snap-coordinate: 100px 100px, 100px bottom;   /* 多坐标 */\n\n/* 全局值 */\nscroll-snap-coordinate: inherit;\nscroll-snap-coordinate: initial;\nscroll-snap-coordinate: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "scroll-snap-coordinate"
  },
  "scroll-snap-destination": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* <位置>值 */\nscroll-snap-destination: 400px 600px;\n\n/* 全局值 */\nscroll-snap-destination: inherit;\nscroll-snap-destination: initial;\nscroll-snap-destination: unset;\n",
    "initial value": "0px 0px",
    "inherit": "否",
    "applicable elements": "scroll containers",
    "name": "scroll-snap-destination"
  },
  "scroll-snap-points-x": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
    "grammar": "/* 关键值 */\nscroll-snap-points-x: none;\n\n/* 重复的 snap 点 */\nscroll-snap-points-x: repeat(400px);\n\n/* 全局值 */\nscroll-snap-points-x: inherit;\nscroll-snap-points-x: initial;\nscroll-snap-points-x: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "scroll containers",
    "name": "scroll-snap-points-x"
  },
  "scroll-snap-points-y": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
    "grammar": "/* 关键值 */\nscroll-snap-points-y: none;\n\n/* 重复的 snap 点 */\nscroll-snap-points-y: repeat(400px);\n\n/* 全局值 */\nscroll-snap-points-y: inherit;\nscroll-snap-points-y: initial;\nscroll-snap-points-y: unset;\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "scroll containers",
    "name": "scroll-snap-points-y"
  },
  "scroll-snap-type": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "\n此属性不能用来指定任何精确的动画或者物理运动效果来执行临时点，而是交给用户代理来处理。\n/* 关键值 */\nscroll-snap-type: none;\nscroll-snap-type: x;\nscroll-snap-type: y;\nscroll-snap-type: block;\nscroll-snap-type: inline;\nscroll-snap-type: both;\n\n/* 可选 mandatory | proximity*/\nscroll-snap-type: x mandatory;\nscroll-snap-type: y proximity;\nscroll-snap-type: both mandatory;\n\n/* etc */\n\n/* 全局值 */\nscroll-snap-type: inherit;\nscroll-snap-type: initial;\nscroll-snap-type: unset;\n初始值none适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "scroll-snap-type"
  },
  "scrollbar-color": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。scrollbar-color该CSS属性设置滚动条轨道和拇指的颜色track（轨道）是指滚动条，其一般是固定的而不管滚动位置的背景。thumb（拇指）是指滚动条通常漂浮在轨道的顶部上的移动部分。初始值auto适用元素scrolling boxes是否是继承属性yes计算值as specifiedAnimation typea color",
    "grammar": "\n<scrollbar-color>\n定义滚动条的颜色。\n \n\n\nauto\n在没有任何其他相关滚动条颜色属性的情况下，滚动条的轨道部分默认平台渲染。\n\n\ndark\n显示黑色滚动条，可以是平台提供的滚动条的深色变体，也可以是带深色的自定义滚动条。\n\n\nlight\n显示一个轻量滚动条，可以是平台提供的滚动条的轻微变体，也可以是带有浅色的自定义滚动条。\n\n\n<color> <color>\n将第一种颜色应用于滚动条拇指，第二种颜色应用于滚动条轨道。\n\n\n\n\n注意: 用户代理必须将scrollbar-color根元素上设置的任何值应用于视口。\n\n\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "scrolling boxes",
    "name": "scrollbar-color"
  },
  "scrollbar-width": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 scrollbar-width 属性允许开发者设置滚动条出现时的厚度",
    "grammar": "/* Keyword values */\nscrollbar-width: auto;\nscrollbar-width: thin;\nscrollbar-width: none;\n\n/* Global values */\nscrollbar-width: inherit;\nscrollbar-width: initial;\nscrollbar-width: unset;\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "scrolling boxes",
    "name": "scrollbar-width"
  },
  "shape-image-threshold": {
    "desc": "CSS 属性 shape-image-threshold 通过设定一个 alpha 通道的界限值来提取shape-outside 值为图像的形状。 所有 alpha 值比这个界限值大的像素都会被当做形状的一部分，以此确定形状的边界。举个例子，界限值为0.5时，形状会包含所有不透明度超过 50% 的像素。/* <number> value */shape-image-threshold: 0.7; /* Global values */shape-image-threshold: inherit;shape-image-threshold: initial;shape-image-threshold: unset; 初始值0.0适用元素floats是否是继承属性否计算值The same as the specified value after clipping the number to the range [0.0, 1.0].Animation typea number",
    "grammar": "\n<alpha-value> (en-US)\n设定界限值以从图像中提取形状。形状由所有 alpha 值比界限值大的像素定义。在 0.0（完全透明）到 1.0（完全不透明）之外的值会被重置（译者：如，小于 0.0 的值会被重置成 0.0）。\n",
    "initial value": "0.0",
    "inherit": "否",
    "applicable elements": "floats",
    "name": "shape-image-threshold"
  },
  "shape-margin": {
    "desc": "CSS 属性 shape-margin 用于设定由shape-outside创建的 CSS 形状的外边距。 这个外边距可以让你调整（浮动元素的）形状边缘与环绕内容之间的距离。",
    "grammar": "\n<length-percentage>\n使用<length>值，或者相对于元素容纳块的<percentage>值来设定形状的外边距。\n",
    "initial value": "0",
    "inherit": "否",
    "applicable elements": "floats",
    "name": "shape-margin"
  },
  "shape-outside": {
    "desc": "shape-outside的CSS 属性定义了一个可以是非矩形的形状，相邻的内联内容应围绕该形状进行包装。默认情况下，内联内容包围其边距框; shape-outside提供了一种自定义此包装的方法，可以将文本包装在复杂对象周围而不是简单的框中。",
    "grammar": "\nnone\n该浮动区域不产生影响，行内元素以默认的方式包裹着该元素的 margin box。\n<shape-box>\n根据浮动元素的边缘（通过 CSS box model 来定义）形状计算出浮动的区域。可能是 margin-box, border-box, padding-box, 或者 content-box。这个形状包括了由 border-radius 属性制造出来的弧度（与 background-clip 的表现类似）。\n\n\nmargin-box\n定义一个由外边距的外边缘封闭形成的形状。这个形状的角的半径由相应的border-radius 和margin 的值决定。如果 border-radius / margin 的比率大于等于 1 , 那么这个 margin box 的角的弧度就是 border-radius + margin ；如果比率小于 1，那么这个 margin box 的角的弧度就是 border-radius + (margin * (1 + (ratio-1)^3)) 。\nborder-box\n\n定义一个由边界的外边缘封闭形成的形状。这个形状遵循正常的边界外部圆角的形成规则。\n\npadding-box\n\n定义一个由内边距的外边缘封闭形成的形状。这个形状遵循正常的边界内部圆角的形成规则。\n\ncontent-box\n\n定义一个由内容区域的外边缘封闭形成的形状（译者：表述的不太好，就是被 padding 包裹的区域，在 chrome 控制台中的盒子模型图中的蓝色区域。）。每一个角的弧度取 0 或 border-radius - border-width - padding 中的较大值。\n\n\n\n<basic-shape>\n基于 inset()， circle()， ellipse()，或者 polygon()其中一个创造出来的形状计算出浮动区域。如果同时存在 <shape-box> ，那么会为 <basic-shape> 方法定义一个参考盒，这个参考盒默认为 margin-box 。\n<image>\n提取并且计算指定 <image> 的 alpha 通道得出浮动区域（译者：即根据图片的非透明区域进行包裹）。就跟通过 shape-image-threshold来定义一样。\n\nNote: 用户代理 必须使用由 HTML5 规范定义的 CORS-enabled fetch 方法来处理 shape-outside 的值中的所有 URL。当捕获的时候，用户代理必须使用“匿名”模式来设置层叠样式表的 URL 的 referrer source 和设置所在文档的 URL 的 origin 。如果这导致出现没有有效的备份图像这样的网络错误， 产生的影响就跟指定了值 none 一样。\n\n",
    "name": "shape-outside"
  },
  "tab-size": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 tab-size 用于自定义制表符 (U+0009) 的宽度。/* <integer> values */tab-size: 4;tab-size: 0; /* <length> values */tab-size: 10px;tab-size: 2em; /* Global values */tab-size: inherit;tab-size: initial;tab-size: unset; 初始值8适用元素block containers是否是继承属性yes计算值the specified integer or an absolute lengthAnimation typea length",
    "grammar": "\n<integer>\n制表符对应的空格数。必须为非负值。\n<length>\n制表符的宽度。必须为非负值。\n",
    "initial value": "8",
    "inherit": "yes",
    "applicable elements": "block containers",
    "name": "tab-size"
  },
  "table-layout": {
    "desc": "table-layout CSS 属性定义了用于布局表格单元格，行和列的算法。/* Keyword values */table-layout: auto;table-layout: fixed; /* Global values */table-layout: inherit;table-layout: initial;table-layout: unset;初始值auto适用元素table and inline-table elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto (en-US)\n大多数浏览器采用自动表格布局算法对表格布局。表格及单元格的宽度取决于其包含的内容。\nfixed\n表格和列的宽度通过表格的宽度来设置，某一列的宽度仅由该列首行的单元格决定。在当前列中，该单元格所在行之后的行并不会影响整个列宽。\n\n 使用“fixed”布局方式时，整个表格可以在其首行被下载后就被解析和渲染。这样对于“automatic”自动布局方式来说可以加速渲染，但是其后的单元格内容并不会自适应当前列宽。任何一个包含溢出内容的单元格可以使用 overflow  属性控制是否允许内容溢出。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "table and inline-table elements",
    "name": "table-layout"
  },
  "text-align": {
    "desc": "text-align CSS 属性定义行内内容（例如文字）如何相对它的块父元素对齐。text-align 并不控制块元素自己的对齐，只控制它的行内内容的对齐。/* Keyword values */text-align: left;text-align: right;text-align: center;text-align: justify;text-align: justify-all;text-align: start;text-align: end;text-align: match-parent; /* Block alignment values (Non-standard syntax) */text-align: -moz-center;text-align: -webkit-center; /* Global values */text-align: inherit;text-align: initial;text-align: unset; 初始值start, or a nameless value that acts as left if direction is ltr, right if direction is rtl if start is not supported by the browser.适用元素block containers是否是继承属性yes计算值as specified, except for the match-parent value which is calculated against its parent's direction value and results in a computed value of either left or rightAnimation typediscrete",
    "grammar": "\nstart \nExperimental\n\n如果内容方向是左至右，则等于left，反之则为right。\nend \nExperimental\n\n如果内容方向是左至右，则等于right，反之则为left。\nleft\n行内内容向左侧边对齐。\nright\n行内内容向右侧边对齐。\ncenter\n行内内容居中。\n<string> \nExperimental\n\n第一个出现的该（单字符）字符串被用来对齐。跟随的关键字定义对齐的方向。例如，可用于让数字值根据小数点对齐。\njustify\n文字向两侧对齐，对最后一行无效。\njustify-all\n和 justify 一致，但是强制使最后一行两端对齐。\nmatch-parent \nExperimental\n\n和inherit类似，区别在于start和end的值根据父元素的direction确定，并被替换为恰当的left或right。\n",
    "initial value": "start, or a nameless value that acts as left if direction is ltr, right if direction is rtl if start is not supported by the browser.",
    "inherit": "yes",
    "applicable elements": "block containers",
    "name": "text-align"
  },
  "text-align-last": {
    "desc": "CSS 属性 text-align-last 描述的是一段文本中最后一行在被强制换行之前的对齐规则。/* Keyword values */text-align-last: auto;text-align-last: start;text-align-last: end;text-align-last: left;text-align-last: right;text-align-last: center;text-align-last: justify; /* Global values */text-align-last: inherit;text-align-last: initial;text-align-last: unset; 初始值auto适用元素block containers是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n每一行的对齐规则由 text-align 的值来确定，当 text-align 的值是 justify，text-align-last 的表现和设置了 start 的表现是一样的，即如果文本的展示方向是从左到右，则最后一行左侧对齐与内容盒子。\n\n译者注：\n  经测试，当 text-align 的值为 right，并且 text-align-last 设置为 auto 时，文本最后一行的对齐方式相当于 text-align-last 被设置为 right 时的效果。即 text-align-last 设置为 auto 后的表现跟 text-align 的设置有关。\n\nstart\n与 direction 的设置有关。\n 如果文本展示方向是从左到右，起点在左侧，则是左对齐；\n 如果文本展示方向是从右到左，起点在右侧，则是右对齐。\n 如果没有设置 direction ，则按照浏览器文本的默认显示方向来确定。\nend\n与 direction 的设置有关。\n 如果文本展示方向是从左到右，末尾在右侧，则是右对齐；\n 如果文本展示方向是从右到左，末尾在左侧，则是左对齐。\n 如果没有设置 direction ，则按照浏览器文本的默认显示方向来确定。\nleft\n最后一行文字与内容盒子的左侧对齐\nright\n最后一行文字与内容盒子的右侧对齐\ncenter\n最后一行文字与内容盒子居中对齐\njustify\n最后一行文字的开头与内容盒子的左侧对齐，末尾与右侧对齐。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "block containers",
    "name": "text-align-last"
  },
  "text-combine-upright (en-US)": {
    "desc": "The text-combine-upright CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.This is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.",
    "grammar": "/* Keyword values */\ntext-combine-upright: none;\ntext-combine-upright: all;\n\n/* Digits values */\ntext-combine-upright: digits;     /* fits 2 consecutive digits horizontally inside vertical text */\ntext-combine-upright: digits 4;   /* fits up to 4 consecutive digits horizontally inside vertical text */\n\n/* Global values */\ntext-combine-upright: inherit;\ntext-combine-upright: initial;\ntext-combine-upright: revert;\ntext-combine-upright: revert-layer;\ntext-combine-upright: unset;\n",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "non-replaced inline elements",
    "name": "text-combine-upright (en-US)"
  },
  "text-decoration": {
    "desc": "",
    "grammar": "\ntext-decoration 这个 CSS 属性是用于设置文本的修饰线外观的（下划线、上划线、贯穿线/删除线  或 闪烁）它是 text-decoration-line, text-decoration-color, text-decoration-style, 和新出现的 text-decoration-thickness 属性的缩写。\n文本修饰属性会延伸到子元素。这意味着如果祖先元素指定了文本修饰属性，子元素则不能将其删除。例如，在如下标记中 <p>This text has <em>some emphasized words</em> in it.</p>，应用样式p { text-decoration: underline } 会对整个段落添加下划线，此时再添加样式 em { text-decoration: none } 则不会引起任何改变，整个段落仍然有下划线修饰。然而，新加样式 em { text-decoration: overline } 则会在<em>标记的文字上再添加上这种 overline 样式。",
    "initial value": "as each of the properties of the shorthand:text-decoration-color: currentcolortext-decoration-style: solidtext-decoration-line: none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "text-decoration"
  },
  "text-decoration-color": {
    "desc": "CSS 属性 text-decoration-color 用于设置文本修饰线的颜色，文本修饰线是通过 text-decoration-line 属性指定的。修饰线包括下划线、上划线、删除线和波浪线，波浪线的典型用途是标明内容拼写错误（仅举例）。被指定的颜色会作用到该属性值有效范围内的所有修饰线上。 CSS 没有直接的机制为每种线型指定唯一的颜色，不过可以通过嵌套元素的方法来实现这种效果：用 text-decoration-line 属性为每个元素应用一种线型，再用 text-decoration-color 指定线的颜色。",
    "grammar": "\n<color>\n修饰文本的线的颜色。\n",
    "name": "text-decoration-color"
  },
  "text-decoration-line": {
    "desc": "CSS 属性 text-decoration-line 用于设置元素中的文本的修饰类型。当要设置多个线修饰属性时，用 text-decoration 简写属性会比分别写多个属性更方便。/* Keyword values */text-decoration-line: none;text-decoration-line: underline;text-decoration-line: overline;text-decoration-line: line-through;text-decoration-line: blink;text-decoration-line: underline overline; /* Two decoration lines */text-decoration-line: overline underline line-through; /* Multiple decoration lines */ /* Global values */text-decoration-line: inherit;text-decoration-line: initial;text-decoration-line: unset; 初始值none适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "text-decoration-line 属性可以设置为 none, 或者一个及多个用空格分隔的下列值。\n\nnone\n表示没有文本修饰效果。\nunderline\n在文本的下方有一条修饰线。\noverline\n在文本的上方有一条修饰线。\nline-through\n有一条贯穿文本中间的修饰线。\nblink \nDeprecated\n\n文本闪烁（文本交替处于显示与隐藏状态）。客户代理都一致没有实现文本闪烁效果。考虑到为了支持使用 CSS 动画，该值也不宜使用。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "text-decoration-line"
  },
  "text-decoration-skip": {
    "desc": "CSS text-decoration-skip 属性定义了元素哪些部分的内容需要被文本修饰所跳过。它可以控制所有该元素或该元素的祖先所绘制的文本修饰线。/* 关键字 */text-decoration-skip: none;text-decoration-skip: objects;text-decoration-skip: spaces;text-decoration-skip: edges;text-decoration-skip: box-decoration; /* 使用多个关键字 */text-decoration-skip: objects spaces;text-decoration-skip: leading-spaces trailing-spaces;text-decoration-skip: objects edges box-decoration; /* 全局值 */text-decoration-skip: inherit;text-decoration-skip: initial;text-decoration-skip: unset; 注意： ink 值被移动至 text-decoration-skip-ink (en-US) 属性。 初始值objects适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n没有任何内容被跳过。因此，文本修饰会为所有文本内容和行内元素进行绘制。\nobjects\n拥有完整盒模型的原子行内元素会被跳过，例如图片和行内块元素。\nspaces\n所有的空格会被跳过，包括：所有的 Unicode 空白字符 和所有的分词符，以及任意相邻的 letter-spacing 或 word-spacing。\nleading-spaces\n除了只跳过开始的空格外，与 spaces 相同。\ntrailing-spaces\n除了只跳过结尾的空格外，与 spaces 相同。\nedges\n文本修饰的开始与结束会比原有的装饰范围向内收缩（例如半个线宽）。这样，相邻的元素的下划线就可以分开。（这对于中文很重要，因为在中文中，下划线也是一种形式的标点符号。）\n\nbox-decoration\n文本修饰会跳过盒模型的内边距、边框、外边距。这只会影响到祖先元素定义的修饰；修饰的盒不会渲染本身的盒修饰。\n",
    "initial value": "objects",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "text-decoration-skip"
  },
  "text-decoration-skip-ink (en-US)": {
    "desc": "The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.",
    "grammar": "/* Single keyword */\ntext-decoration-skip-ink: none;\ntext-decoration-skip-ink: auto;\ntext-decoration-skip-ink: all;\n\n/* Global keywords */\ntext-decoration-skip-ink: inherit;\ntext-decoration-skip-ink: initial;\ntext-decoration-skip-ink: revert;\ntext-decoration-skip-ink: revert-layer;\ntext-decoration-skip-ink: unset;\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "text-decoration-skip-ink (en-US)"
  },
  "text-decoration-style": {
    "desc": "CSS 属性 text-decoration-style 用于设置由 text-decoration-line 设定的线的样式。线的样式会应用到所有被 text-decoration-line 设定的线，不能为其中的每条线设置不同的样式。当要设置多个线修饰属性时，用 text-decoration 简写属性会比分别写多个属性更方便。 如果设定的修饰效果具有特定的语义，例如删除线的意味着某些文本被删除了，开发者最好使用有语义的 HTML 标签来表达，比如 <del> 或 <s> 标签，因为浏览器有时可能会屏蔽某些样式，但语义化的标签则不会出现这样的问题。当一次使用多个 line-decoration 属性时，使用 text-decoration 简写属性会更方便。",
    "grammar": "\nsolid\n画一条实线。\ndouble\n画一条双实线。\ndotted\n画一条点划线。\ndashed\n画一条虚线。\nwavy\n画一条波浪线。\n-moz-none\nNon-Standard\n\n不画线。亦可用 text-decoration-line: none 替代。\n",
    "name": "text-decoration-style"
  },
  "text-emphasis (en-US)": {
    "desc": "The text-emphasis CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for text-emphasis-style and text-emphasis-color.",
    "grammar": "This property is a shorthand for the following CSS properties:\n\ntext-emphasis-color\ntext-emphasis-style\n",
    "initial value": "as each of the properties of the shorthand:text-emphasis-style: nonetext-emphasis-color: currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "text-emphasis (en-US)"
  },
  "text-emphasis-color (en-US)": {
    "desc": "The text-emphasis-color CSS property sets the color of emphasis marks. This value can also be set using the text-emphasis shorthand.",
    "grammar": "/* Initial value */\ntext-emphasis-color: currentcolor;\n\n/* <color> */\ntext-emphasis-color: #555;\ntext-emphasis-color: blue;\ntext-emphasis-color: rgba(90, 200, 160, 0.8);\ntext-emphasis-color: transparent;\n\n/* Global values */\ntext-emphasis-color: inherit;\ntext-emphasis-color: initial;\ntext-emphasis-color: revert;\ntext-emphasis-color: revert-layer;\ntext-emphasis-color: unset;\n",
    "initial value": "currentcolor",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "text-emphasis-color (en-US)"
  },
  "text-emphasis-position (en-US)": {
    "desc": "The text-emphasis-position CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.",
    "grammar": "/* Initial value */\ntext-emphasis-position: over right;\n\n/* Keywords value */\ntext-emphasis-position: over left;\ntext-emphasis-position: under right;\ntext-emphasis-position: under left;\n\ntext-emphasis-position: left over;\ntext-emphasis-position: right under;\ntext-emphasis-position: left under;\n\n/* Global values */\ntext-emphasis-position: inherit;\ntext-emphasis-position: initial;\ntext-emphasis-position: revert;\ntext-emphasis-position: revert-layer;\ntext-emphasis-position: unset;\n",
    "initial value": "over right",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "text-emphasis-position (en-US)"
  },
  "text-emphasis-style (en-US)": {
    "desc": "The text-emphasis-style CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the text-emphasis shorthand.",
    "grammar": "/* Initial value */\ntext-emphasis-style: none; /* No emphasis marks */\n\n/* <string> values */\ntext-emphasis-style: 'x';\ntext-emphasis-style: '点';\ntext-emphasis-style: '\\25B2';\ntext-emphasis-style: '*';\ntext-emphasis-style: 'foo'; /* Should NOT be used. It may be computed to or rendered as 'f' only */\n\n/* Keyword values */\ntext-emphasis-style: filled;\ntext-emphasis-style: open;\ntext-emphasis-style: dot;\ntext-emphasis-style: circle;\ntext-emphasis-style: double-circle;\ntext-emphasis-style: triangle;\ntext-emphasis-style: filled sesame;\ntext-emphasis-style: open sesame;\n\n/* Global values */\ntext-emphasis-style: inherit;\ntext-emphasis-style: initial;\ntext-emphasis-style: revert;\ntext-emphasis-style: revert-layer;\ntext-emphasis-style: unset;\n",
    "initial value": "none",
    "inherit": "no",
    "applicable elements": "all elements",
    "name": "text-emphasis-style (en-US)"
  },
  "text-indent": {
    "desc": "text-indent 属性能定义一个块元素首行文本内容之前的缩进量。",
    "grammar": "\n<length>\n使用固定的<length>值来指定文本的缩进。允许使用负值。查阅可能的 <length> 单位。\n<percentage>\n使用包含块宽度的百分比作为缩进。\neach-line \nExperimental\n\n文本缩进会影响第一行，以及使用<br>强制断行后的第一行。\nhanging \nExperimental\n\n该值会对所有的行进行反转缩进：除了第一行之外的所有的行都会被缩进，看起来就像第一行设置了一个负的缩进值。\n",
    "initial value": "0",
    "inherit": "yes",
    "applicable elements": "block containers",
    "name": "text-indent"
  },
  "text-justify": {
    "desc": "CSS 属性 text-justify 定义的是当文本的 text-align 属性被设置为 :justify 时的齐行方法。text-justify: none;text-justify: auto;text-justify: inter-word;text-justify: inter-character;text-justify: distribute; /* 已被废除，不提倡使用 */ 初始值auto适用元素inline-level and table-cell elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n表示关闭掉齐行的设置。表现的效果和没有设置 text-align 一样，当你因为某种原因需要在已经设置了 text-align 的元素上禁用齐行效果的时候，这个属性值很有用。\n译者注：经过测试，在谷歌（v 58.0.3029.110）下的表现与在火狐下的表现是不一样的，火狐下使用 none 属性时，的确可以禁用掉齐行设置，但是谷歌下还是没有设置 none 属性时的效果。\nauto\n默认值，浏览器根据显示的效果和质量来确定符合当前状态的最佳对齐方式，当然这种对齐方式将是最适合某种语言文字的排版（例如：英语，中文，日语，韩语等）。如果没有对 text-justify 进行设置的话，则是默认使用这样子的对齐规则。\ninter-word\n通过在文本中的单词之间添加空间来实现行对齐（这将会改变 word-spacing 的值），比如英语或韩语就是最适合使用这个属性来用空格分隔单词的语言。\ninter-character\nThe text is justified by adding space between characters (effectively varying letter-spacing), which is most appropriate for languages like Japanese.\n通过在文本中的字符之间添加空间来实现行对齐（这将会改变 letter-spacing 的值），比如日语就是最适合使用这个属性的语言。\ndistribute \nDeprecated\n\n显示效果与设置了 inter-word 一致，不提倡使用这个属性，现在这个属性或许还能有效果，但那完全是为了向后兼容而被保留着。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "inline-level and table-cell elements",
    "name": "text-justify"
  },
  "text-orientation": {
    "desc": "text-orientation CSS 属性设定行中字符的方向。但它仅影响纵向模式（当 writing-mode 的值不是horizontal-tb）下的文本。此属性在控制使用竖排文字的语言的显示上很有作用，也可以用来构建垂直的表格头。",
    "grammar": "\nmixed\n默认值。顺时针旋转水平书写的字符 90°，将垂直书写的文字自然布局。\nupright\n将水平书写的字符自然布局（直排），包括垂直书写的文字（as well as the glyphs for vertical scripts）。注意这个关键字会导致所有字符被视为从左到右，也就是 direction 被强制设为 ltr。\nsideways\n所有字符被布局为与水平方式一样，但是整行文本被顺时针旋转 90°。\nsideways-right\n处于兼容目的，sideways 的别名。\nuse-glyph-orientation\n对于 SVG 元素，这个关键字导致使用已弃用的 SVG 属性。 glyph-orientation-vertical 和 glyph-orientation-horizontal。\n",
    "initial value": "mixed",
    "inherit": "yes",
    "applicable elements": "all elements, except table row groups, rows, column groups, and columns",
    "name": "text-orientation"
  },
  "text-overflow": {
    "desc": "text-overflow CSS 属性确定如何向用户发出未显示的溢出内容信号。它可以被剪切，显示一个省略号（'...'，U + 2026 HORIZONTAL ELLIPSIS）或显示一个自定义字符串。 一般在容器的极限处进行截断。如果想在裁剪处显示空白符，可以使用 ('').这个属性只对那些在块级元素溢出的内容有效，但是必须要与块级元素内联 (inline) 方向一致（举个反例：内容在盒子的下方溢出。此时就不会生效）。文本可能在以下情况下溢出：当其因为某种原因而无法换行 (例子：设置了\"white-space:nowrap\")，或者一个单词因为太长而不能合理地被安置 (fit)。这个属性并不会强制“溢出”事件的发生，因此为了能让\"text-overflow\"能够生效，程序员们必须要在元素上添加几个额外的属性，比如\"将overflow 设置为 hidden\"。初始值clip适用元素block container elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nclip\n此为默认值。这个关键字的意思是\"在内容区域的极限处截断文本\"，因此在字符的中间可能会发生截断。如果你的目标浏览器支持 text-overflow: ''，为了能在两个字符过渡处截断，你可以使用一个空字符串值 ('') 作为 text-overflow 属性的值。\nellipsis\n这个关键字的意思是“用一个省略号 ('…', U+2026 HORIZONTAL ELLIPSIS) 来表示被截断的文本”。这个省略号被添加在内容区域中，因此会减少显示的文本。如果空间太小到连省略号都容纳不下，那么这个省略号也会被截断。\n<string> \nExperimental\n\n<string>用来表示被截断的文本。字符串内容将被添加在内容区域中，所以会减少显示出的文本。如果空间太小到连省略号都容纳不下，那么这个字符串也会被截断。\n",
    "initial value": "clip",
    "inherit": "否",
    "applicable elements": "block container elements",
    "name": "text-overflow"
  },
  "text-rendering": {
    "desc": "",
    "grammar": "/* Keyword values */\ntext-rendering: auto;\ntext-rendering: optimizeSpeed;\ntext-rendering: optimizeLegibility;\ntext-rendering: geometricPrecision;\n\n/* Global values */\ntext-rendering: inherit;\ntext-rendering: initial;\ntext-rendering: unset;\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "text elements",
    "name": "text-rendering"
  },
  "text-shadow": {
    "desc": "text-shadow为文字添加阴影。可以为文字与 text-decorations 添加多个阴影，阴影值之间用逗号隔开。每个阴影值由元素在 X 和 Y 方向的偏移量、模糊半径和颜色值组成。",
    "grammar": "/* offset-x | offset-y | blur-radius | color */\ntext-shadow: 1px 1px 2px black;\n\n/* color | offset-x | offset-y | blur-radius */\ntext-shadow: #fc0 1px 0 10px;\n\n/* offset-x | offset-y | color */\ntext-shadow: 5px 5px #558abb;\n\n/* color | offset-x | offset-y */\ntext-shadow: white 2px 5px;\n\n/* offset-x | offset-y\n/* Use defaults for color and blur-radius */\ntext-shadow: 5px 10px;\n\n/* Global values */\ntext-shadow: inherit;\ntext-shadow: initial;\ntext-shadow: unset;\n当阴影大于一个时要用逗号区别开阴影之间的参数\n每个阴影都有两到三个<length>参数，以及一个与阴影颜色相关的<color>参数。前两个<length>参数，是以“文字中心”为原点的坐标轴，分别为 x 轴 <offset-x> 和 y 轴 <offset-y> 的值；如果有第三个<length>参数，则第三个数值为形成阴影效果的半径的数值 <blur-radius> 。\n当所给的阴影大于一个时，阴影应用的顺序为从前到后，第一个指定的阴影在顶部。\n这个属性同时适用于::first-line 以及 ::first-letter 伪元素.",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "text-shadow"
  },
  "text-size-adjust": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 text-size-adjust CSS 控制将一些手机或平板设备上使用的文本溢出算法（text inflation algorithm）。其他类型的设备上的浏览器会忽略此属性。/* 专有属性值 */text-size-adjust: none;text-size-adjust: auto; /* <percentage> 值 */text-size-adjust: 80%; /* 全局属性值 */text-size-adjust: inherit;text-size-adjust: initial;text-size-adjust: unset; 因为许多网站还没有适配屏幕较小的设备，移动设备的浏览器和桌面浏览器在渲染网页时可能会有不同。他们不是以设备屏幕宽度布局网页，而是用比屏幕宽一些的 视窗 去布局网页，通常是 800 到 1000 像素。为了将视窗上的布局映射到原始设备屏幕上，手机浏览器要么只渲染整个页面的一部分，要么将视窗缩放至原始屏幕大小。因为缩放适配小屏幕而导致文字会变得很小，许多手机浏览器会使用文本溢出算法放大文本，改善可读性。当一个包含文本的元素使用了 100% 的屏幕宽度，该算法会增加文本大小，但是不会修改布局。text-size-adjust 这个属性允许开发者去除或者修改浏览器的这种行为，比如，当网页已经适配了小屏幕之后，就不需要这么做了。注意： 这个属性并不是标准。 你必须为每个你想要应用的浏览器加上属性前缀。不同浏览器，这个属性有不同的行为和语法。更多的信息，请查看下面的浏览器兼容性部分。这个属性只在一些智能手机和平板电脑上使用。桌面浏览器和一些平板电脑浏览器并没有一些溢出算法。如果 -webkit-text-size-adjust 显式设置为 none, 老的基于桌面的 WebKit 和平板电脑浏览器，像 Chrome≤26 或者 Safari≤5，不会忽略这个属性，反而会阻止用户在 web 界面放大或缩小。#不是所有的浏览器都支持这个属性使用百分比值 (例如 Webkit 和 Trident , 但是 Gecko 不支持). 检查下面浏览器兼容的部分查看更多的信息。 初始值auto for smartphone browsers supporting inflation, none in other cases (and then not modifiable).适用元素all elements是否是继承属性yesPercentagesyes, refer to the corresponding size of the text font计算值as specifiedAnimation typediscrete",
    "grammar": "\nnone\n禁用浏览器的文本溢出算法。\nauto\n启用浏览器的文本溢出算法。该值一般用于取消先前使用 CSS 设置的 none。\n<percentage>\n 启用浏览器的文本溢出算法，并使用用一个百分数来确定文本放大程度。\n\nnone | auto | <percentage>\n\n\n\n规范\n状态\n备注\n\n\n\n\nCSS Mobile Text Size Adjustment Module Level 1text-size-adjust\nEditor's Draft\nInitial definition\n\n\n\n\n[1] There is a bug in older WebKit-based desktop browsers. If -webkit-text-size-adjust is explicitly set to none, older Webkit-based desktop browsers, instead of ignoring the property, will prevent the user from zooming in or out of the web page. See Bug 56543 (affected Safari≤5 & Chrome≤26), Bug 163359, and Bug 84186.\n[2] In addition to the -moz- prefixed support, Gecko 44.0 (Firefox 44.0 / Thunderbird 44.0 / SeaMonkey 2.41) added support for a -webkit- prefixed version of the property for web compatibility reasons behind the layout.css.prefixes.webkit flag, defaulting to false. Since Gecko 49.0 (Firefox 49.0 / Thunderbird 49.0 / SeaMonkey 2.46) the preference defaults to true.\n[3] If the viewport is set using <meta> element, the value of the CSS text-size-adjust property is ignored. See detailed implementation hints on MSDN.\n\nApple's documentation\nGecko's behavior description, by L. David Baron\nMicrosoft's documentation\n",
    "initial value": "auto for smartphone browsers supporting inflation, none in other cases (and then not modifiable).",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "text-size-adjust"
  },
  "text-transform": {
    "desc": "",
    "grammar": "/* Keyword values */\ntext-transform: capitalize;\ntext-transform: uppercase;\ntext-transform: lowercase;\ntext-transform: none;\ntext-transform: full-width;\n\n/* Global values */\ntext-transform: inherit;\ntext-transform: initial;\ntext-transform: unset;",
    "initial value": "none",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "text-transform"
  },
  "text-underline-position": {
    "desc": "当 text-decoration属性的值设置为 underline 之后，可以用 text-underline-position 属性为其设置下划线的位置。 /* 只设置一个属性值 */text-underline-position: auto;text-underline-position: under;text-underline-position: left;text-underline-position: right; /* 设置多个属性值 */text-underline-position: under left;text-underline-position: right under; /* 全局属性值 */text-underline-position: inherit;text-underline-position: initial;text-underline-position: unset; 初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n用户代理 会根据自己的算法来确认下划线是放在字母基线上还是 放在字母基线下方。\nunder\n强制下划线的位置为字母基线的下方，在这个位置，下划线不会穿过任何字母，这样能确保数学方程式或者化学式的下标不会被下划线阻挡。\nleft\n在垂直排版模式下，使下划线的位置在文字的左侧，在水平排版模式下，和 under 相同。\nright\n在垂直排版模式下，使下划线的位置在文字的右侧，在水平排版模式下，和 under 相同。\nauto-pos \nNon-Standard\n\nauto的同义词 ，应使用 auto。\nabove \nNon-Standard\n\n强制下划线放置于文本上面。当使用东亚文字时，此效果和使用 auto 相同。\nbelow \nNon-Standard\n\n强制下划线放置于文本下面。当使用字母文字的时候，此效果和使用 auto 相同。\n",
    "initial value": "auto",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "text-underline-position"
  },
  "top": {
    "desc": "top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。/* <length> values */top: 3px;top: 2.4em; /* 参照于包含块高度的百分比 */top: 10%; /* Keyword value */top: auto; /* Global values */top: inherit;top: initial;top: unset; top的效果取决于元素的position属性： 当position设置为absolute或fixed时，top属性指定了定位元素上外边距边界与其包含块上边界之间的偏移。当position设置为relative时，top属性指定了元素的上边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，top属性的效果和 position 为relative等同；如果元素在 viewport 外面，top属性的效果和 position 为fixed等同。当position设置为static时，top属性无效。 当top和bottom同时指定时，并且 height没有被指定或者指定为auto的时候，top和bottom​​​​​都会生效，在其他情况下，如果 height被限制，则top属性会优先设置，bottom属性则会被忽略。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the height of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
    "grammar": "\n<length>\n可以是负的，正的 或者 null <length> 表示：\n \n对于绝对定位的元素，元素下外边距边界与其包含块下边界之间的偏移。\n对于相对定位定位的元素，元素的下边界离开其正常位置的偏移。\n\n\n<percentage>\n代表元素包含块的高度的百分比 <percentage>。\nauto\n这个关键字表示：\n \n对于绝对定位元素，元素将忽略此属性已bottom属性为准，如果此时设置height: auto，将基于内容需要的高度设置高度；如果bottom也为auto的话，元素的垂直位置就是它假如作为静态 (即 static) 元素时该在的位置。\n对于相对定位元素，元素相对正常位置的偏移量将基于bottom属性；如果bottom也为auto的话，元素将不会有偏移。\n\n\ninherit\n这个关键字表示该值与其父元素 (可能不是它的包含块) 的计算值相同。对这个计算值的处理将和它原本为 <length>， <percentage> 或 auto 一样。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "positioned elements",
    "name": "top"
  },
  "touch-action": {
    "desc": "CSS 属性 touch-action 用于设置触摸屏用户如何操纵元素的区域 (例如，浏览器内置的缩放功能)。/* Keyword values */touch-action: auto;touch-action: none;touch-action: pan-x;touch-action: pan-left;touch-action: pan-right;touch-action: pan-y;touch-action: pan-up;touch-action: pan-down;touch-action: pinch-zoom;touch-action: manipulation; /* Global values */touch-action: inherit;touch-action: initial;touch-action: unset; 初始值auto适用元素all elements except: non-replaced inline elements, table rows, row groups, table columns, and column groups是否是继承属性否计算值as specifiedAnimation typediscrete默认情况下，平移（滚动）和缩放手势由浏览器专门处理。使用 Pointer_events 的应用程序将在浏览器开始处理触摸手势时收到一个 pointercancel 事件。通过明确指定浏览器应该处理哪些手势，应用程序可以在 pointermove 和 pointerup 监听器中为其余的手势提供自己的行为。使用 Touch_events 的应用程序通过调用 preventDefault() 禁用浏览器处理手势，但也应使用触摸操作确保浏览器在调用任何事件侦听器之前，了解应用程序的意图。当手势开始时，浏览器与触摸的元素及其所有祖先的触摸动作值相交直到一个实现手势（换句话说，第一个包含滚动元素）的触摸动作值。这意味着在实践中，触摸动作通常仅适用于具有某些自定义行为的单个元素，而无需在该元素的任何后代上明确指定触摸动作。手势开始之后，触摸动作值的更改将不会对当前手势的行为产生任何影响。",
    "grammar": "\nauto\n当触控事件发生在元素上时，由浏览器来决定进行哪些操作，比如对 viewport 进行平滑、缩放等。\nnone\n当触控事件发生在元素上时，不进行任何操作。\npan-x\n启用单指水平平移手势。可以与 pan-y 、pan-up、pan-down 和／或 pinch-zoom 组合使用。\npan-y\n启用单指垂直平移手势。可以与 pan-x 、pan-left 、pan-right 和／或 pinch-zoom 组合使用。\nmanipulation\n浏览器只允许进行滚动和持续缩放操作。任何其它被 auto 值支持的行为不被支持。启用平移和缩小缩放手势，但禁用其他非标准手势，例如双击以进行缩放。禁用双击可缩放功能可减少浏览器在用户点击屏幕时延迟生成点击事件的需要。这是“pan-x pan-y pinch-zoom”（为了兼容性本身仍然有效）的别名。\npan-left, pan-right,pan-up,pan-down \nExperimental\n\n启用以指定方向滚动开始的单指手势。一旦滚动开始，方向可能仍然相反。请注意，滚动“向上”（pan-up）意味着用户正在将其手指向下拖动到屏幕表面上，同样 pan-left 表示用户将其手指向右拖动。多个方向可以组合，除非有更简单的表示（例如，“pan-left pan-right”无效，因为“pan-x”更简单，而“pan-left pan-down”有效）。\npinch-zoom\n启用多手指平移和缩放页面。这可以与任何平移值组合。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements except: non-replaced inline elements, table rows, row groups, table columns, and column groups",
    "name": "touch-action"
  },
  "transform": {
    "desc": "CSStransform属性允许你旋转，缩放，倾斜或平移给定元素。这是通过修改 CSS 视觉格式化模型的坐标空间来实现的。 只能转换由盒模型定位的元素。根据经验，如果元素具有display: block，则由盒模型定位元素。",
    "grammar": "\n<transform-function>\n要应用的一个或多个 CSS 变换函数。变换函数按从左到右的顺序相乘，这意味着复合变换按从右到左的顺序有效地应用。\nnone\n不应用任何变换。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "transform"
  },
  "transform-box": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* Keyword values */\ntransform-box: border-box;\ntransform-box: fill-box;\ntransform-box: view-box;\n\n/* Global values */\ntransform-box: inherit;\ntransform-box: initial;\ntransform-box: unset;\n\ntransform-box属性被指定为以下所列出的关键字值之一。",
    "initial value": "view-box",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "transform-box"
  },
  "transform-origin": {
    "desc": "transform-origin CSS 属性让你更改一个元素变形的原点。 转换起点是应用转换的点。例如，rotate()函数的转换原点是旋转中心。（这个属性的应用原理是先用这个属性的赋值转换该元素，进行变形，然后再用这个属性的值把元素转换回去）默认的转换原点是 center",
    "grammar": "\nx-offset\n定义变形中心距离盒模型的左侧的<length>或<percentage>偏移值。\noffset-keyword\nleft，right，top，bottom或center中之一，定义相对应的变形中心偏移。\ny-offset\n定义变形中心距离盒模型的顶的<length>或<percentage>偏移值。\nx-offset-keyword\nleft，right或center中之一，定义相对应的变形中心偏移。\ny-offset-keyword\ntop，bottom或center中之一，定义相对应的变形中心偏移。\nz-offset\n定义变形中心距离用户视线（z=0 处）的<length>（不能是<percentage>）偏移值。\n\n关键字是方便的简写方法，等同于以下<percentage>值：\n\n\n\nkeyword\nvalue\n\n\n\n\nleft\n0%\n\n\ncenter\n50%\n\n\nright\n100%\n\n\ntop\n0%\n\n\nbottom\n100%\n\n\n",
    "initial value": "50% 50% 0",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "transform-origin"
  },
  "transform-style": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 transform-style 设置元素的子元素是位于 3D 空间中还是平面中。 如果选择平面，元素的子元素将不会有 3D 的遮挡关系。由于这个属性不会被继承，因此必须为元素的所有非叶子子元素设置它。",
    "grammar": "\nflat\n设置元素的子元素位于该元素的平面中。\npreserve-3d\n指示元素的子元素应位于 3D 空间中。\n",
    "initial value": "flat",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "transform-style"
  },
  "transition": {
    "desc": "transition CSS 属性是 transition-property，transition-duration，transition-timing-function 和 transition-delay 的一个简写属性。 过渡可以为一个元素在不同状态之间切换的时候定义不同的过渡效果。比如在不同的伪元素之间切换，像是 :hover，:active 或者通过 JavaScript 实现的状态变化。",
    "grammar": "<single-transition>#where <single-transition> = [ none | <single-transition-property> ] || <time> || <easing-function> || <time>where <single-transition-property> = all | <custom-ident><easing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>where <cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)where <step-position> = jump-start | jump-end | jump-none | jump-both | start | end",
    "initial value": "as each of the properties of the shorthand:transition-delay: 0stransition-duration: 0stransition-property: alltransition-timing-function: ease",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "transition"
  },
  "transition-delay": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* <time>?值 */\ntransition-delay: 3s;\ntransition-delay: 2s, 4ms;\n\n/* 全局变量 */\ntransition-delay: inherit;\ntransition-delay: initial;\ntransition-delay: unset;\n",
    "initial value": "0s",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "transition-delay"
  },
  "transition-duration": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* <time> 值 */\ntransition-duration: 6s;\ntransition-duration: 120ms;\ntransition-duration: 1s, 15s;\ntransition-duration: 10s, 30s, 230ms;\n\n/* 全局值 */\ntransition-duration: inherit;\ntransition-duration: initial;\ntransition-duration: unset;\n",
    "initial value": "0s",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "transition-duration"
  },
  "transition-property": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "/* Keyword values */\ntransition-property: none;\ntransition-property: all;\ntransition-property: test_05;\ntransition-property: -specific;\ntransition-property: sliding-vertically;\n\ntransition-property: test1;\ntransition-property: test1, animation4;\ntransition-property: all, height, all;\ntransition-property: all, -moz-specific, sliding;\n\n/* Global values */\ntransition-property: inherit;\ntransition-property: initial;\ntransition-property: unset;\n",
    "initial value": "all",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "transition-property"
  },
  "transition-timing-function": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
    "grammar": "Formal syntax: <easing-function>#where <easing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>where <cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)where <step-position> = jump-start | jump-end | jump-none | jump-both | start | end\n\ntransition-timing-function: ease\ntransition-timing-function: ease-in\ntransition-timing-function: ease-out\ntransition-timing-function: ease-in-out\ntransition-timing-function: linear\ntransition-timing-function: cubic-bezier(0.1, 0.7, 1.0, 0.1)\ntransition-timing-function: step-start\ntransition-timing-function: step-end\ntransition-timing-function: steps(4, end)\n\ntransition-timing-function: ease, step-start, cubic-bezier(0.1, 0.7, 1.0, 0.1)\n\ntransition-timing-function: inherit\n",
    "initial value": "ease",
    "inherit": "否",
    "applicable elements": "all elements, ::before and ::after pseudo-elements",
    "name": "transition-timing-function"
  },
  "translate": {
    "desc": "CSS 属性 translate 允许你单独声明平移变换，并独立于 transform 属性。这在一些典型的用户界面上更好用，而且这样就无需在 transform 中声明该函数并记住转换函数的确切顺序了。",
    "grammar": "\n单个长度/百分比值\n一个长度值或百分比，表示二维平移，与声明了 X 轴和 Y 轴的平移一样（此时省略的第二个值默认为 0）。等同于在 translate() 函数（2D 平移）中指定单个值。\n两个长度/百分比值\n两个长度值或百分比表示在二维上分别按照指定 X 轴和 Y 轴的值进行的平移。等同于在 translate() 函数（2D 平移）中函数指定两个值。\n三个长度/百分比值\n三个长度值或百分比，表示分别指定 X 轴、Y 轴、Z 轴的值进行三维平移。等同于translate3d() 函数（3D 平移）。\nnone\n表示不应用平移效果。\n",
    "initial value": "none",
    "inherit": "否",
    "applicable elements": "transformable elements",
    "name": "translate"
  },
  "unicode-bidi": {
    "desc": "CSS unicode-bidi 属性，和 direction 属性，决定如何处理文档中的双书写方向文本（bidirectional text）。比如，如果一块内容同时包含有从左到右书写和从右到左书写的文本，那么用户代理（the user-agent）会使用复杂的 Unicode 算法来决定如何显示文本。unicode-bidi 属性会覆盖此算法，允许开发人员控制文本嵌入（text embedding）。unicode-bidi 与 direction 是仅有的两个不受 all 简写影响的属性。注意：此属性是文档类型定义（Document Type Definition, DTD）的设计者专用的。Web 设计者与其他类似的人员不应覆盖此属性。/* 关键字值 */unicode-bidi: normal;unicode-bidi: embed;unicode-bidi: isolate;unicode-bidi: bidi-override;unicode-bidi: isolate-override;unicode-bidi: plaintext;/* 全局值 */unicode-bidi: inherit;unicode-bidi: initial;unicode-bidi: unset; 初始值normal适用元素all elements, though some values have no effect on non-inline elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nnormal\n对双向算法，此元素不提供额外的嵌入级别。对于内联元素，隐式的重新排序在元素的边界上起作用。\nembed\n对于内联元素，该值会为双向算法打开一个额外的嵌入级别。嵌入级别的方向是由 direction 属性给出的。\nbidi-override\n对于内联元素，该值会创建一个覆盖；对于块容器元素，该值将为不在另一个块容器元素内的内联级别的后代创建一个覆盖。这意味着在元素内部，根据 direction 属性，重新排序是严格按照顺序排列的；双向算法的隐式部分被忽略。\nisolate\n这个关键字表示计算元素容器的方向时，不考虑这个元素的内容。因此，这个元素就从它的兄弟姐妹中分离出来了。当应用它的双向分辨算法的时候，它的容器元素将其视为一个或多个 U+FFFC Object Replacement Character，即像 image 一样。\nisolate-override\n这个关键字将 isolate 关键字的隔离行为应用于周围的内容，并将 bidi-override 关键字的覆盖行为应用于内部内容。\nplaintext\n这个关键字在计算元素方向的时候，不考虑父元素的双向状态，也不考虑 direction 属性的值。它是使用 Unicode 双向算法的 P2 和 P3 规则计算的。 \n 这个值允许按照 Unicode 双向算法显示已经格式化的数据。\n",
    "initial value": "normal",
    "inherit": "否",
    "applicable elements": "all elements, though some values have no effect on non-inline elements",
    "name": "unicode-bidi"
  },
  "user-select": {
    "desc": "CSS 属性 user-select 控制用户能否选中文本。除了文本框内，它对被载入为 chrome 的内容没有影响。/* Keyword values */user-select: none;user-select: auto;user-select: text;user-select: contain;user-select: all; /* Global values */user-select: inherit;user-select: initial;user-select: unset; /* Mozilla-specific values */-moz-user-select: none;-moz-user-select: text;-moz-user-select: all; /* WebKit-specific values */-webkit-user-select: none;-webkit-user-select: text;-webkit-user-select: all; /* Doesn't work in Safari; use only \"none\" or \"text\", or else it will allow typing in the <html> container */ /* Microsoft-specific values */-ms-user-select: none;-ms-user-select: text;-ms-user-select: element; 初始值auto适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete 注意：user-select 不是继承属性，即使默认的属性值 auto 的表现基本上以继承为主，似乎是继承属性。甚至，WebKit/基于 Chromium 的浏览器在实现此属性时将其作为继承属性，但这和有关规范是相悖的，且会带来一些问题。目前，Chromium 暂时选择修复将其作为继承属性所带来的问题，使最终表现符合规范。",
    "grammar": "auto | text | none | contain | all",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "user-select"
  },
  "vertical-align": {
    "desc": "CSS 的属性 vertical-align 用来指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。 vertical-align 属性可被用于两种环境： 使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本内的图片<img>： <p>top:<img style=\"vertical-align:top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>middle:<img style=\"vertical-align:middle\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>bottom:<img style=\"vertical-align:bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>super:<img style=\"vertical-align:super\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>sub:<img style=\"vertical-align:sub\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/></p><p>text-top:<img style=\"vertical-align:text-top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>text-bottom:<img style=\"vertical-align:text-bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>0.2em:<img style=\"vertical-align:0.2em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>-1em:<img style=\"vertical-align:-1em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>20%:<img style=\"vertical-align:20%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>-100%:<img style=\"vertical-align:-100%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/></p> #* { box-sizing: border-box;} img { margin-right: 0.5em;} p { height: 3em; padding: 0 .5em; font-family: monospace; text-decoration: underline overline; margin-left: auto; margin-right: auto; width: 80%;} 垂直对齐表格单元内容： <table> <tr> <td style=\"vertical-align: baseline\">baseline</td> <td style=\"vertical-align: top\">top</td> <td style=\"vertical-align: middle\">middle</td> <td style=\"vertical-align: bottom\">bottom</td> <td> <p>There is a theory which states that if ever anyone discovers exactly what the Universe is for and why it is here, it will instantly disappear and be replaced by something even more bizarre and inexplicable.</p><p>There is another theory which states that this has already happened.</p> </td> </tr></table> table { margin-left: auto; margin-right: auto; width: 80%;} table, th, td { border: 1px solid black;} td { padding: 0.5em; font-family: monospace;} 注意 vertical-align 只对行内元素、行内块元素和表格单元格元素生效：不能用它垂直对齐块级元素。",
    "grammar": "相对父元素的值\n这些值使元素相对其父元素垂直对齐：\n\nbaseline\n使元素的基线与父元素的基线对齐。HTML 规范没有详细说明部分可替换元素的基线，如<textarea> ，这意味着这些元素使用此值的表现因浏览器而异。\nsub\n使元素的基线与父元素的下标基线对齐。\nsuper\n使元素的基线与父元素的上标基线对齐。\ntext-top\n使元素的顶部与父元素的字体顶部对齐。\ntext-bottom\n使元素的底部与父元素的字体底部对齐。\nmiddle\n使元素的中部与父元素的基线加上父元素 x-height（译注：x 高度）的一半对齐。\n<length>\n使元素的基线对齐到父元素的基线之上的给定长度。可以是负数。\n<percentage>\n使元素的基线对齐到父元素的基线之上的给定百分比，该百分比是line-height属性的百分比。可以是负数。\n\n相对行的值\n下列值使元素相对整行垂直对齐：\n\ntop\n使元素及其后代元素的顶部与整行的顶部对齐。\nbottom\n使元素及其后代元素的底部与整行的底部对齐。\n\n没有基线的元素，使用外边距的下边缘替代。",
    "initial value": "baseline",
    "inherit": "否",
    "applicable elements": "inline-level and table-cell elements. It also applies to ::first-letter and ::first-line.",
    "name": "vertical-align"
  },
  "visibility": {
    "desc": "CSS 属性 visibility 显示或隐藏元素而不更改文档的布局。该属性还可以隐藏 <table> 中的行或列。",
    "grammar": "\nvisible\n元素正常显示。\nhidden\n隐藏元素，但是其他元素的布局不改变，相当于此元素变成透明。要注意若将其子元素设为 visibility: visible，则该子元素依然可见。\ncollapse\n\n\n用于 <table> 行、列、列组和行组，隐藏表格的行或列，并且不占用任何空间（与将 display: none 用于表格的行/列上的效果相\n    当）。但是，仍会计算其他行和列的大小，就好像折叠的行或列中的单元格一样。此值允许从表中快速删除行或列，而不强制重新计算整个表的宽度和高度。\n折叠的弹性项目被隐藏，他们将占用的空间被删除。\n对于 XUL 元素，元素的计算大小始终为零，而且通常会忽略影响大小的其他样式，尽管边距仍然有效。\n对于其他元素，折叠处理与隐藏相同。\n\n\n",
    "name": "visibility"
  },
  "white-space": {
    "desc": "white-space CSS 属性是用来设置如何处理元素中的 空白 (en-US)。",
    "grammar": "/* Keyword values */\nwhite-space: normal;\nwhite-space: nowrap;\nwhite-space: pre;\nwhite-space: pre-wrap;\nwhite-space: pre-line;\n\n/* https://github.com/w3c/csswg-drafts/pull/2841 */\nwhite-space: break-spaces;\n\n/* Global values */\nwhite-space: inherit;\nwhite-space: initial;\nwhite-space: unset;\n\nwhite-space属性被指定为从下面的值列表中选择的单个关键字。",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "white-space"
  },
  "widows": {
    "desc": "CSS属性 widows 可以用来设置一个块级容器在新的分页，区域或者列的顶部需要结合在一起的最小行数。/* <integer> values */widows: 2;widows: 3; /* Global values */widows: inherit;widows: initial;widows: unset; 在排版中，widow 指的是在新页面顶部单独出现的段落的最后一行。（这一行来自于上一个页面的段落）",
    "grammar": "\n<integer>\n在一个片段打断后，新的片段顶部需要结合在一起的最小行数。该值必须为正值。\n",
    "initial value": "2",
    "inherit": "yes",
    "applicable elements": "block container elements",
    "name": "widows"
  },
  "width": {
    "desc": "width 属性用于设置元素的宽度。width 默认设置内容区域的宽度，但如果 box-sizing 属性被设置为 border-box，就转而设置边框区域的宽度。 The source for this interactive example is stored in a GitHub repository. If you'd like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request.min-width 和 max-width 属性的优先级高于 width。",
    "grammar": "\n<length>\n使用绝对值定义宽度。\n<percentage>\n使用外层元素的容纳区块宽度（the containing block's width）的百分比定义宽度。\nauto\n浏览器将会为指定的元素计算并选择一个宽度。\nmax-content \nExperimental\n\n元素内容固有的（intrinsic）合适宽度。\nmin-content \nExperimental\n\n元素内容固有的最小宽度。\nfit-content \nExperimental\n\n取以下两种值中的较大值：\n \n固有的最小宽度\n固有首选宽度（max-content）和可用宽度（available）两者中的较小值\n\n 可表示为：min(max-content, max(min-content, <length-percentage>))\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements but non-replaced inline elements, table rows, and row groups",
    "name": "width"
  },
  "will-change": {
    "desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 will-change 为 web 开发者提供了一种告知浏览器该元素会有哪些变化的方法，这样浏览器可以在元素属性真正发生变化之前提前做好对应的优化准备工作。这种优化可以将一部分复杂的计算工作提前准备好，使页面的反应更为快速灵敏。用好这个属性并不是很容易： 不要将 will-change 应用到太多元素上：浏览器已经尽力尝试去优化一切可以优化的东西了。有一些更强力的优化，如果与 will-change 结合在一起的话，有可能会消耗很多机器资源，如果过度使用的话，可能导致页面响应缓慢或者消耗非常多的资源。 有节制地使用：通常，当元素恢复到初始状态时，浏览器会丢弃掉之前做的优化工作。但是如果直接在样式表中显式声明了 will-change 属性，则表示目标元素可能会经常变化，浏览器会将优化工作保存得比之前更久。所以最佳实践是当元素变化之前和之后通过脚本来切换 will-change 的值。 不要过早应用 will-change 优化：如果你的页面在性能方面没什么问题，则不要添加 will-change 属性来榨取一丁点的速度。 will-change 的设计初衷是作为最后的优化手段，用来尝试解决现有的性能问题。它不应该被用来预防性能问题。过度使用 will-change 会导致大量的内存占用，并会导致更复杂的渲染过程，因为浏览器会试图准备可能存在的变化过程。这会导致更严重的性能问题。 给它足够的工作时间：这个属性是用来让页面开发者告知浏览器哪些属性可能会变化的。然后浏览器可以选择在变化发生前提前去做一些优化工作。所以给浏览器一点时间去真正做这些优化工作是非常重要的。使用时需要尝试去找到一些方法提前一定时间获知元素可能发生的变化，然后为它加上 will-change 属性。 初始值auto适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete",
    "grammar": "\nauto\n表示没有特别指定哪些属性会变化，浏览器需要自己去猜，然后使用浏览器经常使用的一些常规方法优化。\n\n<animateable-feature> 可以是以下值：\n\nscroll-position\n表示开发者希望在不久后改变滚动条的位置或者使之产生动画。\ncontents\n表示开发者希望在不久后改变元素内容中的某些东西，或者使它们产生动画。\n<custom-ident>\n表示开发者希望在不久后改变指定的属性名或者使之产生动画。如果属性名是简写，则代表所有与之对应的简写或者全写的属性。\n",
    "initial value": "auto",
    "inherit": "否",
    "applicable elements": "all elements",
    "name": "will-change"
  },
  "word-break": {
    "desc": "CSS 属性 word-break 指定了怎样在单词内断行。",
    "grammar": "\nnormal\n使用默认的断行规则。\nbreak-all\n对于 non-CJK (CJK 指中文/日文/韩文) 文本，可在任意字符间断行。\nkeep-all\nCJK 文本不断行。Non-CJK 文本表现同 normal。\nbreak-word \nDeprecated\n\n他的效果是word-break: normal 和 overflow-wrap: anywhere  的合，不论 overflow-wrap的值是多少。\n\n\n注意：与 word-break: break-word 和 overflow-wrap: break-word（详见 overflow-wrap）对比，word-break: break-word 将在文本可能溢出其容器的确切位置创建一个断点。\n",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements",
    "name": "word-break"
  },
  "word-spacing": {
    "desc": "",
    "grammar": "word-spacing: normal;    /* Keyword value */\nword-spacing: 3px;       /* <length> values */\nword-spacing: 0.3em;\n\nword-spacing: inherit;\n \n \n \n \n ",
    "initial value": "normal",
    "inherit": "yes",
    "applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
    "name": "word-spacing"
  },
  "writing-mode": {
    "desc": "writing-mode 属性定义了文本水平或垂直排布以及在块级元素中文本的行进方向。为整个文档设置书时，应在根元素上设置它（对于 HTML 文档应该在 html 元素上设置）此属性指定块流动方向，即块级容器堆叠的方向，以及行内内容在块级容器中的流动方向。因此，它也确定块级内容的顺序。",
    "grammar": "\nhorizontal-tb\n对于左对齐 (ltr) 文本，内容从左到右水平流动。对于右对齐 (rtr) 文本，内容从右到左水平流动。下一水平行位于上一行下方。\nvertical-rl\n对于左对齐 (ltr) 文本，内容从上到下垂直流动，下一垂直行位于上一行左侧。对于右对齐 (rtr) 文本，内容从下到上垂直流动，下一垂直行位于上一行右侧。\nvertical-lr\n对于左对齐 (ltr) 文本，内容从上到下垂直流动，下一垂直行位于上一行右侧。对于右对齐 (rtr) 文本，内容从下到上垂直流动，下一垂直行位于上一行左侧。\nsideways-rl\nExperimental\n\n对于左对齐 (ltr) 文本，内容从下到上垂直流动。对于右对齐 (rtr) 文本，内容从上到下垂直流动。所有字形（即使是垂直文本中的字形）都朝向右侧。\n\n\nsideways-lr\nExperimental\n\n对于左对齐 (ltr) 文本，内容从上到下垂直流动。对于右对齐 (rtr) 文本，内容从下到上垂直流动。所有字形（即使是垂直文本中的字形）都朝向左侧。\nlr \nDeprecated\n\n除 SVG1 文档外，已弃用。对于 CSS，请改用 horizontal-tb。\nlr-tb \nDeprecated\n\n除 SVG1 文档外，已弃用。对于 CSS，请改用 horizontal-tb。\nrl \nDeprecated\n\n除 SVG1 文档外，已弃用。对于 CSS，请改用 horizontal-tb。\ntb \nDeprecated\n\n除 SVG1 文档外，已弃用。对于 CSS，请改用 vertical-lr。\ntb-rl \nDeprecated\n\n除 SVG1 文档外，已弃用。对于 CSS，请改用 vertical-rl。\n",
    "name": "writing-mode"
  },
  "z-index": {
    "desc": "z-index 属性设定了一个定位元素及其后代元素或 flex 项目的 z-order。当元素之间重叠的时候，z-index 较大的元素会覆盖较小的元素在上层进行显示。",
    "grammar": "/* 字符值 */\nz-index: auto;\n\n/* 整数值 */\nz-index: 0;\nz-index: 3;\nz-index: 289;\nz-index: -1;/* 使用负值降低优先级 */\n\n/* 全局值 */\nz-index: inherit;\nz-index: initial;\nz-index: unset;\nz-index 属性可以被设定为关键词 auto 或 <integer>。",
    "name": "z-index"
  }
}