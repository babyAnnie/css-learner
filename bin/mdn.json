{
	"accent-color (en-US)": {
		"desc": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements.",
		"grammar": "/* Keyword values */\naccent-color: auto;\n\n/* <color> values */\naccent-color: red;\naccent-color: #5729e9;\naccent-color: rgb(0, 200, 0);\naccent-color: hsl(228, 4%, 24%);\n\n/* Global values */\naccent-color: inherit;\naccent-color: initial;\naccent-color: revert;\naccent-color: revert-layer;\naccent-color: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "accent-color (en-US)"
	},
	"align-content": {
		"desc": "CSS 的 align-content 属性设置了浏览器如何沿着弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间。 该属性对单行弹性盒子模型无效。（即：带有 flex-wrap: nowrap）。",
		"grammar": "/* 基本位置对齐 */\n/*align-content 不采用左右值 */\nalign-content: center;     /* 将项目放置在中点 */\nalign-content: start;      /* 最先放置项目 */\nalign-content: end;        /* 最后放置项目 */\nalign-content: flex-start; /* 从起始点开始放置 flex 元素 */\nalign-content: flex-end;   /* 从终止点开始放置 flex 元素 */\n\n/* 默认对齐 */\nalign-content: normal;\n\n/*基线对齐*/\nalign-content: baseline;\nalign-content: first baseline;\nalign-content: last baseline;\n\n/* 分布式对齐 */\nalign-content: space-between; /* 均匀分布项目\n                                 第一项与起始点齐平，\n                                 最后一项与终止点齐平 */\nalign-content: space-around;  /* 均匀分布项目\n                                 项目在两端有一半大小的空间*/\nalign-content: space-evenly;  /* 均匀分布项目\n                                 项目周围有相等的空间 */\nalign-content: stretch;       /* 均匀分布项目\n                                 拉伸‘自动’ - 大小的项目以充满容器 */\n\n/* 溢出对齐 */\nalign-content: safe center;\nalign-content: unsafe center;\n\n/* 全局属性 */\nalign-content: inherit; /* 继承 */\nalign-content: initial;  /* 初始值 */\nalign-content: unset; /* 未设置 */\n",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "multi-line flex containers",
		"name": "align-content"
	},
	"align-items": {
		"desc": "CSS align-items 属性将所有直接子节点上的 align-self 值设置为一个组。align-self 属性设置项目在其包含块中在交叉轴方向上的对齐方式。 目前，Flexbox 和 CSS 网格布局支持此属性。在 Flexbox 中，它控制十字轴上项目的对齐方式，在网格布局中，它控制块轴上项目的对齐方式。",
		"grammar": "/* Basic keywords */\nalign-items: normal;\nalign-items: stretch;\n\n/* Positional alignment */\nalign-items: center; /* Pack items around the center */\nalign-items: start; /* Pack items from the start */\nalign-items: end; /* Pack items from the end */\nalign-items: flex-start; /* Pack flex items from the start */\nalign-items: flex-end; /* Pack flex items from the end */\nalign-items: self-start;\nalign-items: self-end;\n\n/* Baseline alignment */\nalign-items: baseline;\nalign-items: first baseline;\nalign-items: last baseline; /* Overflow alignment (for positional alignment only) */\nalign-items: safe center;\nalign-items: unsafe center;\n\n/* Global values */\nalign-items: inherit;\nalign-items: initial;\nalign-items: unset;",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "align-items"
	},
	"align-self": {
		"desc": "CSS 属性 align-self 会对齐当前 grid 或 flex 行中的元素，并覆盖已有的 align-items 的值。In Grid, it aligns the item inside the grid area. 在 Flexbox 中，会按照 cross axis（当前 flex 元素排列方向的垂直方向）进行排列。 align-self 属性不适用于块类型的盒模型和表格单元。如果任何 flexbox 元素的侧轴方向 margin 值设置为 auto，则会忽略 align-self。",
		"grammar": "/* Keyword values */\nalign-self: auto;\nalign-self: normal;\n\n/* Positional alignment */\n/* align-self does not take left and right values */\nalign-self: center; /* Put the item around the center */\nalign-self: start;  /* Put the item at the start */\nalign-self: end;    /* Put the item at the end */\nalign-self: self-start; /* Align the item flush at the start */\nalign-self: self-end;   /* Align the item flush at the end */\nalign-self: flex-start; /* Put the flex item at the start */\nalign-self: flex-end;   /* Put the flex item at the end */\n\n/* Baseline alignment */\nalign-self: baseline;\nalign-self: first baseline;\nalign-self: last baseline;\nalign-self: stretch; /* Stretch 'auto'-sized items to fit the container */\n\n/* Overflow alignment */\nalign-self: safe center;\nalign-self: unsafe center;\n\n/* Global values */\nalign-self: inherit;\nalign-self: initial;\nalign-self: unset;",
		"name": "align-self"
	},
	"all": {
		"desc": "CSS all 简写属性 将除了 unicode-bidi 与 direction 之外的所有属性重设至其初始值，或继承值。",
		"grammar": "/* Global values */\nall: initial\nall: inherit\nall: unset\n\n/* CSS Cascading and Inheritance Level 4 */\nall: revert;\n",
		"initial value": "There is no practical initial value for it.",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "all"
	},
	"animation": {
		"desc": "CSS animation 属性是 animation-name，animation-duration, animation-timing-function，animation-delay，animation-iteration-count，animation-direction，animation-fill-mode 和 animation-play-state 属性的一个简写属性形式。",
		"grammar": "/* @keyframes duration | timing-function | delay |\n   iteration-count | direction | fill-mode | play-state | name */\nanimation: 3s ease-in 1s 2 reverse both paused slidein;\n\n/* @keyframes duration | timing-function | delay | name */\nanimation: 3s linear 1s slidein;\n\n/* @keyframes duration | name */\nanimation: 3s slidein;",
		"initial value": "as each of the properties of the shorthand:animation-name: noneanimation-duration: 0sanimation-timing-function: easeanimation-delay: 0sanimation-iteration-count: 1animation-direction: normalanimation-fill-mode: noneanimation-play-state: runninganimation-timeline (en-US): auto",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation"
	},
	"animation-delay": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "animation-delay: 3s;\nanimation-delay: 2s, 4ms;\n",
		"initial value": "0s",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-delay"
	},
	"animation-direction": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-direction"
	},
	"animation-duration": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"initial value": "0s",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-duration"
	},
	"animation-fill-mode": {
		"desc": "CSS 属性 animation-fill-mode 设置 CSS 动画在执行之前和之后如何将样式应用于其目标。 使用简写属性 animation 一次性设置所有动画属性通常很方便。",
		"grammar": "/* Single animation */\nanimation-fill-mode: none;\nanimation-fill-mode: forwards;\nanimation-fill-mode: backwards;\nanimation-fill-mode: both;\n\n/* Multiple animations */\nanimation-fill-mode: none, backwards;\nanimation-fill-mode: both, forwards, none;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-fill-mode"
	},
	"animation-iteration-count": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* 值为关键字 */\nanimation-iteration-count: infinite;\n\n/* 值为数字 */\nanimation-iteration-count: 3;\nanimation-iteration-count: 2.4;\n\n/* 指定多个值 */\nanimation-iteration-count: 2, 0, infinite;\n",
		"name": "animation-iteration-count"
	},
	"animation-name": {
		"desc": "animation-name属性指定应用的一系列动画，每个名称代表一个由@keyframes定义的动画序列。/* Single animation */animation-name: none;animation-name: test_05;animation-name: -specific;animation-name: sliding-vertically; /* Multiple animations */animation-name: test1, animation4;animation-name: none, -moz-specific, sliding; /* Global values */animation-name: initialanimation-name: inheritanimation-name: unset使用简写属性animation可以很方便地同时设置所有的动画属性。初始值none适用元素all elements, ::before and ::after pseudo-elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Single animation */\nanimation-name: none;\nanimation-name: test_05;\nanimation-name: -specific;\nanimation-name: sliding-vertically;\n\n/* Multiple animations */\nanimation-name: test1, animation4;\nanimation-name: none, -moz-specific, sliding;\n\n/* Global values */\nanimation-name: initial\nanimation-name: inherit\nanimation-name: unset",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-name"
	},
	"animation-play-state": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* Single animation */\nanimation-play-state: running;\nanimation-play-state: paused;\n\n/* Multiple animations */\nanimation-play-state: paused, running, running;\n\n/* Global values */\nanimation-play-state: inherit;\nanimation-play-state: initial;\nanimation-play-state: unset;\n",
		"initial value": "running",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-play-state"
	},
	"animation-timeline (en-US)": {
		"desc": "The animation-timeline CSS property specifies the names of one or more @scroll-timeline at-rules describing the scroll animations to apply to the element.It is often convenient to use the shorthand property animation to set all animation properties at once.",
		"grammar": "/* Single animation */\nanimation-timeline: none;\nanimation-timeline: test_05;\nanimation-timeline: -specific;\nanimation-timeline: sliding-vertically;\n\n/* Multiple animations */\nanimation-timeline: test1, animation4;\nanimation-timeline: none, -moz-specific, sliding;\n\n/* Global values */\nanimation-timeline: inherit;\nanimation-timeline: initial;\nanimation-timeline: revert;\nanimation-timeline: revert-layer;\nanimation-timeline: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "animation-timeline (en-US)"
	},
	"animation-timing-function": {
		"desc": "",
		"grammar": "/* Keyword values */\nanimation-timing-function: ease;\nanimation-timing-function: ease-in;\nanimation-timing-function: ease-out;\nanimation-timing-function: ease-in-out;\nanimation-timing-function: linear;\nanimation-timing-function: step-start;\nanimation-timing-function: step-end;\n\n/* Function values */\nanimation-timing-function: cubic-bezier(0.1, 0.7, 1.0, 0.1);\nanimation-timing-function: steps(4, end);\nanimation-timing-function: frames(10);\n\n/* Multiple animations */\nanimation-timing-function: ease, step-start, cubic-bezier(0.1, 0.7, 1.0, 0.1);\n\n/* Global values */\nanimation-timing-function: inherit;\nanimation-timing-function: initial;\nanimation-timing-function: unset;",
		"initial value": "ease",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "animation-timing-function"
	},
	"appearance": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。在基于 Gecko 的浏览器（如 Firefox）中，-moz-appearance CSS 属性被用于按照 浏览器所在的操作系统所用主题，以平台本地的样式显示元素。在基于 WebKit 的浏览器（如 Safari）和基于 Blink 的浏览器（如 Chrome, Opera）中，-webkit-appearance 属性被用于达到相同 to achieve the same thing. Note that Edge also supports -webkit-appearance (instead of -ms-appearance) for compatibility reasons./* 在 Gecko 中可用的部分值 */-moz-appearance: none;-moz-appearance: button;-moz-appearance: checkbox;-moz-appearance: scrollbarbutton-up; /* 在 WebKit/Blink 中可用的部分值 */-webkit-appearance: none;-webkit-appearance: button;-webkit-appearance: checkbox;-webkit-appearance: scrollbarbutton-up; 这个属性经常用在 XUL 的样式表中，用来设计拥有平台原生 UI 样式的自定义的组件，也用于 XBL 之中以实现 Mozilla 平台的组件。 兼容性提示：如果您想在网站上使用此属性，您应非常小心地测试它。尽管在大部分现代浏览器中它是被支持的，它的实现差别很大。在版本较旧的浏览器中，即使是 none 也会在不同浏览器中产生差别，而且一些浏览器完全不支持这个属性。在版本较新的浏览器中这些差距会更小一些。 初始值none适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* 在 Gecko 中可用的部分值 */\n-moz-appearance: none;\n-moz-appearance: button;\n-moz-appearance: checkbox;\n-moz-appearance: scrollbarbutton-up;\n\n/* 在 WebKit/Blink 中可用的部分值 */\n-webkit-appearance: none;\n-webkit-appearance: button;\n-webkit-appearance: checkbox;\n-webkit-appearance: scrollbarbutton-up;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "appearance"
	},
	"aspect-ratio": {
		"desc": "aspect-ratio CSS 属性为 box 容器规定了一个期待的纵横比，这个纵横比可以用来计算自动尺寸以及为其他布局函数服务。aspect-ratio: 1 / 1; /* 全局值 */aspect-ratio: inherit;aspect-ratio: initial;aspect-ratio: unset;",
		"grammar": "aspect-ratio: 1 / 1;\n\n/* 全局值 */\naspect-ratio: inherit;\naspect-ratio: initial;\naspect-ratio: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements except inline boxes and internal ruby or table boxes",
		"name": "aspect-ratio"
	},
	"backdrop-filter": {
		"desc": "backdrop-filter CSS 属性可以让你为一个元素后面区域添加图形效果（如模糊或颜色偏移）。因为它适用于元素背后的所有元素，为了看到效果，必须使元素或其背景至少部分透明。/* 关键词值 */backdrop-filter: none; /* 指向 SVG 滤镜的 URL */backdrop-filter: url(commonfilters.svg#filter); /* <filter-function> 滤镜函数值 */backdrop-filter: blur(2px);backdrop-filter: brightness(60%);backdrop-filter: contrast(40%);backdrop-filter: drop-shadow(4px 4px 10px blue);backdrop-filter: grayscale(30%);backdrop-filter: hue-rotate(120deg);backdrop-filter: invert(70%);backdrop-filter: opacity(20%);backdrop-filter: sepia(90%);backdrop-filter: saturate(80%); /* 多重滤镜 */backdrop-filter: url(filters.svg#filter) blur(4px) saturate(150%); /* 全局值 */backdrop-filter: inherit;backdrop-filter: initial;backdrop-filter: revert;backdrop-filter: unset;",
		"grammar": "/* 关键词值 */\nbackdrop-filter: none;\n\n/* 指向 SVG 滤镜的 URL */\nbackdrop-filter: url(commonfilters.svg#filter);\n\n/* <filter-function> 滤镜函数值 */\nbackdrop-filter: blur(2px);\nbackdrop-filter: brightness(60%);\nbackdrop-filter: contrast(40%);\nbackdrop-filter: drop-shadow(4px 4px 10px blue);\nbackdrop-filter: grayscale(30%);\nbackdrop-filter: hue-rotate(120deg);\nbackdrop-filter: invert(70%);\nbackdrop-filter: opacity(20%);\nbackdrop-filter: sepia(90%);\nbackdrop-filter: saturate(80%);\n\n/* 多重滤镜 */\nbackdrop-filter: url(filters.svg#filter) blur(4px) saturate(150%);\n\n/* 全局值 */\nbackdrop-filter: inherit;\nbackdrop-filter: initial;\nbackdrop-filter: revert;\nbackdrop-filter: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "backdrop-filter"
	},
	"backface-visibility": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 backface-visibility 指定当元素背面朝向观察者时是否可见。 元素的背面是其正面的镜像。虽然在 2D 中不可见，但是当变换导致元素在 3D 空间中旋转时，背面可以变得可见。 （此属性对 2D 变换没有影响，它没有透视。）",
		"grammar": "/* Keyword values */\nbackface-visibility: visible;\nbackface-visibility: hidden;\n\n/* Global values */\nbackface-visibility: inherit;\nbackface-visibility: initial;\nbackface-visibility: unset;",
		"initial value": "visible",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "backface-visibility"
	},
	"background": {
		"desc": "background 是一种 CSS 简写属性，用于一次性集中定义各种背景属性，包括 color, image, origin 与 size, repeat 方式等等。 此属性是一个 简写属性，可以在一次声明中定义一个或多个属性：background-clip、background-color、background-image、background-origin、background-position、background-repeat、background-size，和 background-attachment。对于所有简写属性，任何没有被指定的值都会被设定为它们的 初始值。",
		"grammar": "/* 使用 <background-color> */\nbackground: green;\n\n/* 使用 <bg-image> 和 <repeat-style> */\nbackground: url(\"test.jpg\") repeat-y;\n\n/* 使用 <box> 和 <background-color> */\nbackground: border-box red;\n\n/* 将背景设为一张居中放大的图片 */\nbackground: no-repeat center/80% url(\"../img/image.png\");\n",
		"name": "background"
	},
	"background-attachment": {
		"desc": "background-attachment CSS 属性决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动。",
		"grammar": "/* 关键 属性值 */\nbackground-attachment: scroll;\nbackground-attachment: fixed;\nbackground-attachment: local;\n\n/* 全局 属性值 */\nbackground-attachment: inherit;\nbackground-attachment: initial;\nbackground-attachment: unset;",
		"initial value": "scroll",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-attachment"
	},
	"background-blend-mode": {
		"desc": "",
		"grammar": "#div {\n    width: 300px;\n    height: 300px;\n    background: url('https://mdn.mozillademos.org/files/8543/br.png'),url('https://mdn.mozillademos.org/files/8545/tr.png');\n    background-blend-mode: screen;\n}",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.. It also applies to ::first-letter and ::first-line.",
		"name": "background-blend-mode"
	},
	"background-clip": {
		"desc": "background-clip 设置元素的背景（背景图片或颜色）是否延伸到边框、内边距盒子、内容盒子下面。 如果没有设置背景图片（background-image）或背景颜色（background-color），那么这个属性只有在边框（ border）被设置为非固实（soild）、透明或半透明时才能看到视觉效果（与 border-style 或 border-image 有关），否则，本属性产生的样式变化会被边框覆盖。",
		"grammar": "/* Keyword values */\nbackground-clip: border-box;\nbackground-clip: padding-box;\nbackground-clip: content-box;\nbackground-clip: text;\n\n/* Global values */\nbackground-clip: inherit;\nbackground-clip: initial;\nbackground-clip: unset;\n",
		"initial value": "border-box",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-clip"
	},
	"background-color": {
		"desc": "",
		"grammar": "/* Keyword values */\nbackground-color: red;\n\n/* Hexadecimal value */\nbackground-color: #bbff00;\n\n/* RGB value */\nbackground-color: rgb(255, 255, 128);\n\n/* HSLA value */\nbackground-color: hsla(50, 33%, 25%, 0.75);\n\n/* Special keyword values */\nbackground-color: currentColor;\nbackground-color: transparent;\n\n/* Global values */\nbackground-color: inherit;\nbackground-color: initial;\nbackground-color: unset;\n",
		"initial value": "transparent",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-color"
	},
	"background-image": {
		"desc": "CSS background-image 属性用于为一个元素设置一个或者多个背景图像。 在绘制时，图像以 z 方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像“最接近用户”。然后元素的边框 border 会在它们之上被绘制，而 background-color 会在它们之下绘制。图像的绘制与盒子以及盒子的边框的关系，需要在 CSS 属性background-clip 和 background-origin 中定义。如果一个指定的图像无法被绘制 (比如，被指定的 URI 所表示的文件无法被加载)，浏览器会将此情况等同于其值被设为 none。注意： 即使图像是不透明的，背景色在通常情况下并不会被显示，web 开发者仍然应该指定 background-color 属性。如果图像无法被加载—例如，在网络连接断开的情况下—背景色就会被绘制。",
		"grammar": "background-image:\n  linear-gradient(to bottom, rgba(255,255,0,0.5), rgba(0,0,255,0.5)),\n  url('https://mdn.mozillademos.org/files/7693/catfront.png');",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-image"
	},
	"background-origin": {
		"desc": "",
		"grammar": " .example {\n   border: 10px double;\n   padding: 10px;\n   background: url('image.jpg');\n   background-position: center left;\n   /* 背景将在内容区 padding 内部填充 */\n   background-origin: content-box;\n}\n",
		"initial value": "padding-box",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-origin"
	},
	"background-position": {
		"desc": "The background-position CSS 属性为每一个背景图片设置初始位置。这个位置是相对于由 background-origin 定义的位置图层的。",
		"grammar": "/* Keyword values */\nbackground-position: top;\nbackground-position: bottom;\nbackground-position: left;\nbackground-position: right;\nbackground-position: center;\n\n/* <percentage> values */\nbackground-position: 25% 75%;\n\n/* <length> values */\nbackground-position: 0 0;\nbackground-position: 1cm 2cm;\nbackground-position: 10ch 8em;\n\n/* Multiple images */\nbackground-position: 0 0, center;\n\n/* Edge offsets values */\nbackground-position: bottom 10px right 20px;\nbackground-position: right 3em bottom 10px;\nbackground-position: bottom 10px right;\nbackground-position: top right 10px;\n\n/* Global values */\nbackground-position: inherit;\nbackground-position: initial;\nbackground-position: revert;\nbackground-position: unset;\n",
		"initial value": "0% 0%",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-position"
	},
	"background-position-x": {
		"desc": "",
		"grammar": "/* Keyword values */\nbackground-position-x: left;\nbackground-position-x: center;\nbackground-position-x: right;\n\n/* <percentage> values */\nbackground-position-x: 25%;\n\n/* <length> values */\nbackground-position-x: 0px;\nbackground-position-x: 1cm;\nbackground-position-x: 8em;\n\n/* side-relative values */\nbackground-position-x: right 3px;\nbackground-position-x: left 25%;\n\n/* Multiple values */\nbackground-position-x: 0px, center;\n\n/* Global values */\nbackground-position-x: inherit;\nbackground-position-x: initial;\nbackground-position-x: unset;\n",
		"initial value": "0%",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "background-position-x"
	},
	"background-position-y": {
		"desc": "",
		"grammar": "/* Keyword values */\nbackground-position-y: top;\nbackground-position-y: center;\nbackground-position-y: bottom;\n\n/* <percentage> values */\nbackground-position-y: 25%;\n\n/* <length> values */\nbackground-position-y: 0px;\nbackground-position-y: 1cm;\nbackground-position-y: 8em;\n\n/* side-relative values */\nbackground-position-y: bottom 3px;\nbackground-position-y: bottom 10%;\n\n/* Multiple values */\nbackground-position-y: 0px, center;\n\n/* Global values */\nbackground-position-y: inherit;\nbackground-position-y: initial;\nbackground-position-y: unset;\n",
		"initial value": "0%",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "background-position-y"
	},
	"background-repeat": {
		"desc": "background-repeat CSS 属性定义背景图像的重复方式。背景图像可以沿着水平轴，垂直轴，两个轴重复，或者根本不重复。",
		"grammar": "<ol>\n    <li>no-repeat\n        <div class=\"one\">&nbsp;</div>\n    </li>\n    <li>repeat\n        <div class=\"two\">&nbsp;</div>\n    </li>\n    <li>repeat-x\n        <div class=\"three\">&nbsp;</div>\n    </li>\n    <li>repeat-y\n        <div class=\"four\">&nbsp;</div>\n    </li>\n    <li>repeat-x, repeat-y (multiple images)\n        <div class=\"five\">&nbsp;</div>\n    </li>\n</ol>",
		"name": "background-repeat"
	},
	"background-size": {
		"desc": "background-size 设置背景图片大小。图片可以保有其原有的尺寸，或者拉伸到新的尺寸，或者在保持其原有比例的同时缩放到元素的可用空间的尺寸。",
		"grammar": "<div id=\"container\">\n\n  <div class=\"subcontainer contain\">contain</div>\n  <div class=\"subcontainer cover\">cover</div>\n  <div class=\"subcontainer width\">120px</div>\n  <div class=\"subcontainer width-height\">120px 200px</div>\n\n\n\n</div>\n\n\n",
		"initial value": "auto auto",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "background-size"
	},
	"block-size": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 的 block-size 属性定义了元素区块的水平宽度和垂直高度，也就是width或height属性，它们的大小取决于写入模式，即writing-mode的值。",
		"grammar": "/* <length> values */\nblock-size: 300px;\nblock-size: 25em;\n\n/* <percentage> values */\nblock-size: 75%;\n\n/* Keyword values */\nblock-size: 25em border-box;\nblock-size: 75% content-box;\nblock-size: max-content;\nblock-size: min-content;\nblock-size: available;\nblock-size: fit-content;\nblock-size: auto;\n\n/* Global values */\nblock-size: inherit;\nblock-size: initial;\nblock-size: unset;If the writing mode is vertically oriented, the value of block-size relates to the width of the element; otherwise, it relates to the height of the element. A related property is inline-size, which defines the other dimension of the element.\n",
		"name": "block-size"
	},
	"border": {
		"desc": "",
		"name": "border"
	},
	"border-block": {
		"desc": "该CSS属性是一个简写属性在样式表一个单一的地方设置单独的逻辑块边界属性值。border-blockborder-block: 1px;border-block: 2px dotted;border-block: medium dashed blue; border-block can be used to set the values for one or more of border-block-width (en-US), border-block-style (en-US), and border-block-color (en-US) setting both the start and end in the block dimension at once. The physical borders to which it maps depends on the element's writing mode, directionality, and text orientation. It corresponds to the border-top and border-bottom or border-right, and border-left properties depending on the values defined for writing-mode, direction, and text-orientation.The borders in the other dimension can be set with border-inline (en-US), which sets border-inline-start (en-US), and border-inline-end (en-US).",
		"grammar": "border-block: 1px;\nborder-block: 2px dotted;\nborder-block: medium dashed blue;\n",
		"initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "border-block"
	},
	"border-block-color (en-US)": {
		"desc": "The border-block-color CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "border-block-color: yellow;\nborder-block-color: #F5F6F7;\n\n/* Global values */\nborder-block-color: inherit;\nborder-block-color: initial;\nborder-block-color: revert;\nborder-block-color: revert-layer;\nborder-block-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-color (en-US)"
	},
	"border-block-end": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。border-block-end 属性是一个简写属性，用于在样式表中的单个位置设置各个逻辑块结尾边界属性值。",
		"grammar": "border-block-end: 1px;\nborder-block-end: 2px dotted;\nborder-block-end: medium dashed blue;\n",
		"initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "border-block-end"
	},
	"border-block-end-color (en-US)": {
		"desc": "The border-block-end-color CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "border-block-end-color: yellow;\nborder-block-end-color: #F5F6F7;\n\n/* Global values */\nborder-block-end-color: inherit;\nborder-block-end-color: initial;\nborder-block-end-color: revert;\nborder-block-end-color: revert-layer;\nborder-block-end-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-end-color (en-US)"
	},
	"border-block-end-style (en-US)": {
		"desc": "The border-block-end-style CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-block-end-style: dashed;\nborder-block-end-style: dotted;\nborder-block-end-style: groove;\n\n/* Global values */\nborder-block-end-style: inherit;\nborder-block-end-style: initial;\nborder-block-end-style: revert;\nborder-block-end-style: revert-layer;\nborder-block-end-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-end-style (en-US)"
	},
	"border-block-end-width (en-US)": {
		"desc": "The border-block-end-width CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-block-end-width: 5px;\nborder-block-end-width: thick;\n\n/* Global values */\nborder-block-end-width: inherit;\nborder-block-end-width: initial;\nborder-block-end-width: revert;\nborder-block-end-width: revert-layer;\nborder-block-end-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-end-width (en-US)"
	},
	"border-block-start (en-US)": {
		"desc": "The border-block-start CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.",
		"grammar": "border-block-start: 1px;\nborder-block-start: 2px dotted;\nborder-block-start: medium dashed blue;\n\n/* Global values */\nborder-block-start: inherit;\nborder-block-start: initial;\nborder-block-start: revert;\nborder-block-start: revert-layer;\nborder-block-start: unset;\n",
		"initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-start (en-US)"
	},
	"border-block-start-color (en-US)": {
		"desc": "The border-block-start-color CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "border-block-start-color: blue;\nborder-block-start-color: #4c5d21;\n\n/* Global values */\nborder-block-start-color: inherit;\nborder-block-start-color: initial;\nborder-block-start-color: revert;\nborder-block-start-color: revert-layer;\nborder-block-start-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-start-color (en-US)"
	},
	"border-block-start-style (en-US)": {
		"desc": "The border-block-start-style CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-block-start-style: dashed;\nborder-block-start-style: dotted;\nborder-block-start-style: groove;\n\n/* Global values */\nborder-block-start-style: inherit;\nborder-block-start-style: initial;\nborder-block-start-style: revert;\nborder-block-start-style: revert-layer;\nborder-block-start-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-start-style (en-US)"
	},
	"border-block-start-width (en-US)": {
		"desc": "The border-block-start-width CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-block-start-width: 5px;\nborder-block-start-width: thick;\n\n/* Global values */\nborder-block-start-width: inherit;\nborder-block-start-width: initial;\nborder-block-start-width: revert;\nborder-block-start-width: revert-layer;\nborder-block-start-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-start-width (en-US)"
	},
	"border-block-style (en-US)": {
		"desc": "The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-block-style: dashed;\nborder-block-style: dotted;\nborder-block-style: groove;\n\n/* Global values */\nborder-block-style: inherit;\nborder-block-style: initial;\nborder-block-style: revert;\nborder-block-style: revert-layer;\nborder-block-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-style (en-US)"
	},
	"border-block-width (en-US)": {
		"desc": "The border-block-width CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-block-width: 5px;\nborder-block-width: thick;\n\n/* Global values */\nborder-block-width: inherit;\nborder-block-width: initial;\nborder-block-width: revert;\nborder-block-width: revert-layer;\nborder-block-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-block-width (en-US)"
	},
	"border-bottom": {
		"desc": "border-bottom 简写属性把下边框的所有属性：border-bottom-color，border-bottom-style 与 border-bottom-width 设置到了一个声明中。这些属性描述了元素的下边框样式。 与所有的简记属性相同， border-bottom 定义了它所有可以定义的属性，即使他们并没有被显式地定义。它把所有未被显式定义的参数都设置为了默认值，这意味着这些值将被定义为：border-bottom-style: dotted;border-bottom: thick green;它和以下的代码是等价的：border-bottom-style: dotted;border-bottom: none thick green;顺便一提，在 border-bottom 之前定义的 border-bottom-style 的值因此被忽略了。由于 border-bottom-style 并没有默认值，未被定义的 border-style 参数的值将被设置为 none，也就是无底边框。",
		"grammar": "border-bottom-style: dotted;\nborder-bottom: thick green;",
		"name": "border-bottom"
	},
	"border-bottom-color": {
		"desc": "",
		"grammar": "border-bottom-color: yellow;\nborder-bottom-color: #F5F6F7;\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-bottom-color"
	},
	"border-bottom-left-radius": {
		"desc": "",
		"grammar": "/* 圆形 */\n/* border-bottom-left-radius: radius */\nborder-bottom-left-radius: 3px;\n\n/* 椭圆形 */\n/* border-bottom-left-radius: 水平方向 垂直方向 */\nborder-bottom-left-radius: 0.5em 1em;\n\nborder-bottom-left-radius: inherit;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-bottom-left-radius"
	},
	"border-bottom-right-radius": {
		"desc": "The border-bottom-right-radius CSS property sets the rounding of the bottom-right corner of the element./* The corner is a circle *//* border-bottom-right-radius: radius */border-bottom-right-radius: 3px; /* Percentage values */border-bottom-right-radius: 20%; /* corner of a circle if box is a square or else corner of a rectangle */border-bottom-right-radius: 20% 20%; /* same as above */ /* 20% of horizontal(width) and vertical(height) */border-bottom-right-radius: 20% 10%; /* 20% of horizontal(width) and 10% of vertical(height) */ /*The corner is an ellipsis *//* border-bottom-right-radius: horizontal vertical */border-bottom-right-radius: 0.5em 1em; border-bottom-right-radius: inherit;The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square. A background, being an image or a color, is clipped at the border, even a rounded one; the exact location of the clipping is defined by the value of the background-clip property.If the value of this property is not set in a border-radius shorthand property that is applied to the element after the border-bottom-right-radius CSS property, the value of this property is then reset to its initial value by the shorthand property.初始值0适用元素all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.是否是继承属性否Percentagesrefer to the corresponding dimension of the border box计算值two absolute lengths or percentagesAnimation typea length, percentage or calc();",
		"grammar": "/* The corner is a circle */\n/* border-bottom-right-radius: radius */\nborder-bottom-right-radius: 3px;\n\n/* Percentage values */\nborder-bottom-right-radius: 20%; /* corner of a circle if box is a square or else corner of a rectangle */\nborder-bottom-right-radius: 20% 20%; /* same as above */ /* 20% of horizontal(width) and vertical(height) */\nborder-bottom-right-radius: 20% 10%; /* 20% of horizontal(width) and 10% of vertical(height) */\n\n/*The corner is an ellipsis */\n/* border-bottom-right-radius: horizontal vertical */\nborder-bottom-right-radius: 0.5em 1em;\n\nborder-bottom-right-radius: inherit;",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-bottom-right-radius"
	},
	"border-bottom-style": {
		"desc": "The border-bottom-style CSS property sets the line style of an element's bottom border./* Keyword values */border-bottom-style: none;border-bottom-style: hidden;border-bottom-style: dotted;border-bottom-style: dashed;border-bottom-style: solid;border-bottom-style: double;border-bottom-style: groove;border-bottom-style: ridge;border-bottom-style: inset;border-bottom-style: outset; /* Global values */border-bottom-style: inherit;border-bottom-style: initial;border-bottom-style: unset; Note: The specification doesn't define how borders of different styles connect in the corners.初始值none适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nborder-bottom-style: none;\nborder-bottom-style: hidden;\nborder-bottom-style: dotted;\nborder-bottom-style: dashed;\nborder-bottom-style: solid;\nborder-bottom-style: double;\nborder-bottom-style: groove;\nborder-bottom-style: ridge;\nborder-bottom-style: inset;\nborder-bottom-style: outset;\n\n/* Global values */\nborder-bottom-style: inherit;\nborder-bottom-style: initial;\nborder-bottom-style: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-bottom-style"
	},
	"border-bottom-width": {
		"desc": "CSS 属性 border-bottom-width 设置一个元素的底部边框宽度。/* Keyword values */border-bottom-width: thin;border-bottom-width: medium;border-bottom-width: thick; /* <length> values */border-bottom-width: 10em;border-bottom-width: 3vmax;border-bottom-width: 6px; /* Global keywords */border-bottom-width: inherit;border-bottom-width: initial;border-bottom-width: unset; 初始值medium适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值the absolute length or 0 if border-bottom-style is none or hiddenAnimation typea length",
		"grammar": "/* Keyword values */\nborder-bottom-width: thin;\nborder-bottom-width: medium;\nborder-bottom-width: thick;\n\n/* <length> values */\nborder-bottom-width: 10em;\nborder-bottom-width: 3vmax;\nborder-bottom-width: 6px;\n\n/* Global keywords */\nborder-bottom-width: inherit;\nborder-bottom-width: initial;\nborder-bottom-width: unset;\n",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-bottom-width"
	},
	"border-collapse": {
		"desc": "border-collapse CSS 属性是用来决定表格的边框是分开的还是合并的。在分隔模式下，相邻的单元格都拥有独立的边框。在合并模式下，相邻单元格共享边框。 合并（collapsed ）模式下，表格中相邻单元格共享边框。在这种模式下，CSS 属性border-style 的值 inset 表现为槽，值 outset 表现为脊。分隔（separated）模式是 HTML 表格的传统模式。相邻单元格都拥有不同的边框。边框之间的距离是通过 CSS 属性 border-spacing 来确定的。",
		"grammar": "/* Keyword values */\nborder-collapse: collapse;\nborder-collapse: separate;\n\n/* Global values */\nborder-collapse: inherit;\nborder-collapse: initial;\nborder-collapse: unset;\n",
		"name": "border-collapse"
	},
	"border-color": {
		"desc": "",
		"grammar": "/* border-color: color; 单值语法 */\nborder-color: red;\n\n/* border-color: vertical horizontal; 双值语法*/\nborder-color: red #f015ca;\n\n/* border-color: top horizontal bottom; 三值语法 */\nborder-color: red yellow green;\n\n/* border-color: top right bottom left; 四值语法 */\nborder-color: red yellow green blue;\n\nborder-color: inherit\n",
		"initial value": "as each of the properties of the shorthand:border-top-color: currentcolorborder-right-color: currentcolorborder-bottom-color: currentcolorborder-left-color: currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-color"
	},
	"border-end-end-radius (en-US)": {
		"desc": "The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
		"grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-end-end-radius: 10px;\nborder-end-end-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-end-end-radius: 1em 2em;\n\n/* Global values */\nborder-end-end-radius: inherit;\nborder-end-end-radius: initial;\nborder-end-end-radius: revert;\nborder-end-end-radius: revert-layer;\nborder-end-end-radius: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-end-end-radius (en-US)"
	},
	"border-end-start-radius (en-US)": {
		"desc": "The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
		"grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-end-start-radius: 10px;\nborder-end-start-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-end-start-radius: 1em 2em;\n\n/* Global values */\nborder-end-start-radius: inherit;\nborder-end-start-radius: initial;\nborder-end-start-radius: revert;\nborder-end-start-radius: revert-layer;\nborder-end-start-radius: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-end-start-radius (en-US)"
	},
	"border-image": {
		"desc": "border-image CSS 属性允许在元素的边框上绘制图像。这使得绘制复杂的外观组件更加简单，也不用在某些情况下使用九宫格了。使用 border-image 时，其将会替换掉 border-style 属性所设置的边框样式。虽然规范要求使用 border-image 时边框样式必须存在，但一些浏览器可能没有实现这一点。特别注意，若 border-image-source（此值可用 border-image-source 或 border-image 简写设置) 的值为 none 或者图片不能显示，则将应用 border-style。初始值as each of the properties of the shorthand:border-image-source: noneborder-image-slice: 100%border-image-width: 1border-image-outset: 0border-image-repeat: stretch适用元素all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.是否是继承属性否Percentagesas each of the properties of the shorthand:border-image-slice: refer to the size of the border imageborder-image-width: refer to the width or height of the border image area计算值as each of the properties of the shorthand:border-image-outset: as specified, but with relative lengths converted into absolute lengthsborder-image-repeat: as specifiedborder-image-slice: one to four percentage(s) (as specified) or absolute length(s), plus the keyword fill if specifiedborder-image-source: none or the image with its URI made absoluteborder-image-width: as specified, but with relative lengths converted into absolute lengthsAnimation typediscrete",
		"grammar": "<div id=\"bitmap\">The image is stretched to fill the area.</div>",
		"initial value": "as each of the properties of the shorthand:border-image-source: noneborder-image-slice: 100%border-image-width: 1border-image-outset: 0border-image-repeat: stretch",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image"
	},
	"border-image-outset": {
		"desc": "",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image-outset"
	},
	"border-image-repeat": {
		"desc": "",
		"initial value": "stretch",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image-repeat"
	},
	"border-image-slice": {
		"desc": "border-image-slice CSS 属性将使用 border-image-source 引用的图像划分为多个区域。这些区域组成了一个元素的边框图像。",
		"grammar": "/* All sides */\nborder-image-slice: 30%;\n\n/* vertical | horizontal */\nborder-image-slice: 10% 30%;\n\n/* top | horizontal | bottom */\nborder-image-slice: 30 30% 45;\n\n/* top | right | bottom | left */\nborder-image-slice: 7 12 14 5;\n\n/* Using the `fill` keyword */\nborder-image-slice: 10% fill 7 12;\n\n/* Global values */\nborder-image-slice: inherit;\nborder-image-slice: initial;\nborder-image-slice: revert;\nborder-image-slice: revert-layer;\nborder-image-slice: unset;\n",
		"initial value": "100%",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image-slice"
	},
	"border-image-source": {
		"desc": "",
		"grammar": "/* no border-image, use the specified border-style */\nborder-image-source: none;\n\n/* the image.jpg is used as image */\nborder-image-source: url(image.jpg);\n\n/* a gradient is used as image */\nborder-image-source: linear-gradient(to top, red, yellow);\n\n/* Global values */\nborder-image-source: inherit;\nborder-image-source: initial;\nborder-image-source: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image-source"
	},
	"border-image-width": {
		"desc": "CSS属性 border-image-width 指定了 边界图像 (border image) 的宽度 如果本属性值大于元素的 border-width，边界图像将会向 padding 边缘延展",
		"grammar": "/* 关键字 */\nborder-image-width: auto;\n\n/* 长度 */\nborder-image-width: 1rem;\n\n/* 百分比 */\nborder-image-width: 25%;\n\n/* 数值 */\nborder-image-width: 3;\n\n/* 垂直 | 水平 */\nborder-image-width: 2em 3em;\n\n/* 上 | 横向 | 下 */\nborder-image-width: 5% 15% 10%;\n\n/* 上 | 右 | 下 | 左 */\nborder-image-width: 5% 2em 10% auto;\n\n/* 全局值 */\nborder-image-width: inherit;\nborder-image-width: initial;\nborder-image-width: unset;\n",
		"initial value": "1",
		"inherit": "否",
		"applicable elements": "all elements, except internal table elements when border-collapse is collapse. It also applies to ::first-letter.",
		"name": "border-image-width"
	},
	"border-inline (en-US)": {
		"desc": "The border-inline CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.",
		"grammar": "border-inline: 1px;\nborder-inline: 2px dotted;\nborder-inline: medium dashed blue;\n\n/* Global values */\nborder-inline: inherit;\nborder-inline: initial;\nborder-inline: revert;\nborder-inline: revert-layer;\nborder-inline: unset;\n",
		"initial value": "as each of the properties of the shorthand:border-top-width: mediumborder-top-style: noneborder-top-color: currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline (en-US)"
	},
	"border-inline-color": {
		"desc": "The border-inline-color CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.border-inline-color: yellow;border-inline-color: #F5F6F7; The border color in the other dimension can be set with border-block-color (en-US) which sets border-block-start-color (en-US), and border-block-end-color (en-US).",
		"grammar": "border-inline-color: yellow;\nborder-inline-color: #F5F6F7;\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "border-inline-color"
	},
	"border-inline-end (en-US)": {
		"desc": "The border-inline-end CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.",
		"grammar": "border-inline-end: 1px;\nborder-inline-end: 2px dashed;\nborder-inline-end: medium dashed blue;\n\n/* Global values */\nborder-inline-end: inherit;\nborder-inline-end: initial;\nborder-inline-end: revert;\nborder-inline-end: revert-layer;\nborder-inline-end: unset;\n",
		"initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-end (en-US)"
	},
	"border-inline-end-color (en-US)": {
		"desc": "The border-inline-end-color CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "border-inline-end-color: rebeccapurple;\nborder-inline-end-color: #663399;\n\n/* Global values */\nborder-inline-end-color: inherit;\nborder-inline-end-color: initial;\nborder-inline-end-color: revert;\nborder-inline-end-color: revert-layer;\nborder-inline-end-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-end-color (en-US)"
	},
	"border-inline-end-style (en-US)": {
		"desc": "The border-inline-end-style CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-inline-end-style: dashed;\nborder-inline-end-style: dotted;\nborder-inline-end-style: groove;\n\n/* Global values */\nborder-inline-end-style: inherit;\nborder-inline-end-style: initial;\nborder-inline-end-style: revert;\nborder-inline-end-style: revert-layer;\nborder-inline-end-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-end-style (en-US)"
	},
	"border-inline-end-width (en-US)": {
		"desc": "The border-inline-end-width CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-inline-end-width: 2px;\nborder-inline-end-width: thick;\n\n/* Global values */\nborder-inline-end-width: inherit;\nborder-inline-end-width: initial;\nborder-inline-end-width: revert;\nborder-inline-end-width: revert-layer;\nborder-inline-end-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-end-width (en-US)"
	},
	"border-inline-start (en-US)": {
		"desc": "The border-inline-start CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.",
		"grammar": "border-inline-start: 1px;\nborder-inline-start: 2px dotted;\nborder-inline-start: medium dashed green;\n\n/* Global values */\nborder-inline-start: inherit;\nborder-inline-start: initial;\nborder-inline-start: revert;\nborder-inline-start: revert-layer;\nborder-inline-start: unset;\n",
		"initial value": "as each of the properties of the shorthand:border-width: as each of the properties of the shorthand:border-top-width: mediumborder-right-width: mediumborder-bottom-width: mediumborder-left-width: mediumborder-style: as each of the properties of the shorthand:border-top-style: noneborder-right-style: noneborder-bottom-style: noneborder-left-style: nonecolor: canvastext",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-start (en-US)"
	},
	"border-inline-start-color (en-US)": {
		"desc": "The border-inline-start-color CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "border-inline-start-color: red;\nborder-inline-start-color: #ee4141;\n\n/* Global values */\nborder-inline-start-color: inherit;\nborder-inline-start-color: initial;\nborder-inline-start-color: revert;\nborder-inline-start-color: revert-layer;\nborder-inline-start-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-start-color (en-US)"
	},
	"border-inline-start-style (en-US)": {
		"desc": "The border-inline-start-style CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-inline-start-style: dashed;\nborder-inline-start-style: dotted;\nborder-inline-start-style: groove;\n\n/* Global values */\nborder-inline-start-style: inherit;\nborder-inline-start-style: initial;\nborder-inline-start-style: revert;\nborder-inline-start-style: revert-layer;\nborder-inline-start-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-start-style (en-US)"
	},
	"border-inline-start-width (en-US)": {
		"desc": "The border-inline-start-width CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-inline-start-width: 5px;\nborder-inline-start-width: thick;\n\n/* Global values */\nborder-inline-start-width: inherit;\nborder-inline-start-width: initial;\nborder-inline-start-width: revert;\nborder-inline-start-width: revert-layer;\nborder-inline-start-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-start-width (en-US)"
	},
	"border-inline-style (en-US)": {
		"desc": "The border-inline-style CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-style'> values */\nborder-inline-style: dashed;\nborder-inline-style: dotted;\nborder-inline-style: groove;\n\n/* Global values */\nborder-inline-style: inherit;\nborder-inline-style: initial;\nborder-inline-style: revert;\nborder-inline-style: revert-layer;\nborder-inline-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-style (en-US)"
	},
	"border-inline-width (en-US)": {
		"desc": "The border-inline-width CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <'border-width'> values */\nborder-inline-width: 5px 10px;\nborder-inline-width: 5px;\nborder-inline-width: thick;\n\n/* Global values */\nborder-inline-width: inherit;\nborder-inline-width: initial;\nborder-inline-width: revert;\nborder-inline-width: revert-layer;\nborder-inline-width: unset;\n",
		"initial value": "medium",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "border-inline-width (en-US)"
	},
	"border-left": {
		"desc": "CSS 属性 border-left 是属性border-left-color, border-left-style, 和border-left-width的三者的缩写。这些属性都是在描述一个元素的左边的边框border。border-left: 1px;border-left: 2px dotted;border-left: medium dashed green; 这三种属性值的缩写需要按照顺序定义数值，也可以省略其中的一个或者两个。 和 CSS 所有的缩写属性一样，border-left 总是会设置该缩写属性所包含的全部属性值，即使开发者并没有一一指定这些值。CSS 缩写属性会给没有被定义的属性一个默认的属性值。那就意味着下面这个例子......border-left-style: dotted;border-left: thick green; ......实际上应该是下面这个样子......border-left-style: dotted;border-left: none thick green; ......并且在 border-left 之前定义的 border-left-style 的值也会被覆盖。由于 border-left-style 的默认值是 none, border-style 的最终结果就是没有边框。 初始值as each of the properties of the shorthand:border-left-width: mediumborder-left-style: noneborder-left-color: currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as each of the properties of the shorthand:border-left-width: the absolute length or 0 if border-left-style is none or hiddenborder-left-style: as specifiedborder-left-color: computed colorAnimation typeas each of the properties of the shorthand:border-left-color: a colorborder-left-style: discreteborder-left-width: a length",
		"grammar": "border-left: 1px;\nborder-left: 2px dotted;\nborder-left: medium dashed green;\n",
		"initial value": "as each of the properties of the shorthand:border-left-width: mediumborder-left-style: noneborder-left-color: currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-left"
	},
	"border-left-color": {
		"desc": "border-left-color 属性设置元素的左边框颜色。值得注意的是，在大数情况下使用 border-color 或 border-left 更加方便和普遍。/* <color> values */border-left-color: red;border-left-color: #ffbb00;border-left-color: rgb(255, 0, 0);border-left-color: hsla(100%, 50%, 25%, 0.75);border-left-color: currentColor;border-left-color: transparent; /* Global values */border-left-color: inherit;border-left-color: initial;border-left-color: unset; 初始值currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值computed colorAnimation typea color",
		"grammar": "/* <color> values */\nborder-left-color: red;\nborder-left-color: #ffbb00;\nborder-left-color: rgb(255, 0, 0);\nborder-left-color: hsla(100%, 50%, 25%, 0.75);\nborder-left-color: currentColor;\nborder-left-color: transparent;\n\n/* Global values */\nborder-left-color: inherit;\nborder-left-color: initial;\nborder-left-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-left-color"
	},
	"border-left-style": {
		"desc": "The border-left-style CSS property sets the line style of an element's left border. Note: The specification doesn't define how borders of different styles connect in the corners.",
		"grammar": "/* Keyword values */\nborder-left-style: none;\nborder-left-style: hidden;\nborder-left-style: dotted;\nborder-left-style: dashed;\nborder-left-style: solid;\nborder-left-style: double;\nborder-left-style: groove;\nborder-left-style: ridge;\nborder-left-style: inset;\nborder-left-style: outset;\n\n/* Global values */\nborder-left-style: inherit;\nborder-left-style: initial;\nborder-left-style: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-left-style"
	},
	"border-left-width": {
		"desc": "CSS 的 border-left-width 属性用来设置盒子的左边框的宽度。",
		"grammar": "/* 关键字数值  */\nborder-left-width: thin;\nborder-left-width: medium;\nborder-left-width: thick;\n\n/* 长度数值 */\nborder-left-width: 10em;\nborder-left-width: 3vmax;\nborder-left-width: 6px;\n\n/* 全局关键字 */\nborder-left-width: inherit;\nborder-left-width: initial;\nborder-left-width: unset;",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-left-width"
	},
	"border-radius": {
		"desc": "CSS 属性 border-radius 允许你设置元素的外边框圆角。当使用一个半径时确定一个圆形，当使用两个半径时确定一个椭圆。这个 (椭) 圆与边框的交集形成圆角效果。 该属性是一个 简写属性，是为了将这四个属性 border-top-left-radius、border-top-right-radius、border-bottom-right-radius，和 border-bottom-left-radius 简写为一个属性。即使元素没有边框，圆角也可以用到 background 上面，具体效果受 background-clip 影响。当 border-collapse 的值为 collapse 时，border-radius 属性不会被应用到表格（）元素上。 radius 可以是 <length> 或者 <percentage>，表示边框四角的圆角半径。只在单值语法中使用。 top-left-and-bottom-right 可以是 <length> 或者 <percentage>，表示边框左上角和右下角的圆角半径。只在双值语法中使用。 top-right-and-bottom-left 可以是 <length> 或者 <percentage>，表示边框右上角和左下角的圆角半径。只在双值或三值语法中使用。 top-left 可以是 <length> 或者 <percentage>，表示边框左上角的圆角半径。只在三值或四值语法中使用。 top-right 可以是 <length> 或者 <percentage>，表示边框右上角的圆角半径。只在四值语法中使用。 bottom-right 可以是 <length> 或者 <percentage>，表示边框右下角的圆角半径。只在三值或四值语法中使用。 bottom-left 可以是 <length> 或者 <percentage>，表示边框左下角的圆角半径。只在四值语法中使用。 inherit 表示四个值都从父元素计算值继承。 <length><length> 定义圆形半径或椭圆的半长轴，半短轴。负值无效。<percentage>使用百分数定义圆形半径或椭圆的半长轴，半短轴。水平半轴相对于盒模型的宽度；垂直半轴相对于盒模型的高度。负值无效。 例如：border-radius: 1em/5em; /* 等价于： */ border-top-left-radius: 1em 5em;border-top-right-radius: 1em 5em;border-bottom-right-radius: 1em 5em;border-bottom-left-radius: 1em 5em; border-radius: 4px 3px 6px / 2px 4px; /* 等价于： */ border-top-left-radius: 4px 2px;border-top-right-radius: 3px 4px;border-bottom-right-radius: 6px 2px;border-bottom-left-radius: 3px 4px;",
		"grammar": "border-radius: 1em/5em;\n\n/* 等价于： */\n\nborder-top-left-radius:     1em 5em;\nborder-top-right-radius:    1em 5em;\nborder-bottom-right-radius: 1em 5em;\nborder-bottom-left-radius:  1em 5em;\n",
		"initial value": "as each of the properties of the shorthand:border-top-left-radius: 0border-top-right-radius: 0border-bottom-right-radius: 0border-bottom-left-radius: 0",
		"inherit": "否",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-radius"
	},
	"border-right": {
		"desc": "CSS 属性 border-right 是属性border-right-color, border-right-style, 和border-right-width的三者的缩写。这些属性都是在描述一个元素的右边的边框border。border-right: 1px;border-right: 2px dotted;border-right: medium dashed green; 和 CSS 所有的缩写属性一样，border-right 总是会设置该缩写属性所包含的全部属性值，即使开发者并没有一一指定这些值。CSS 缩写属性会给没有被定义的属性一个默认的属性值。那就意味着下面这个例子......border-right-style: dotted;border-right: thick green; ......实际上应该是下面这个样子...... border-right-style: dotted; border-right: none thick green; ......并且在 border-right 之前定义的 border-right-style 的值也会被覆盖。由于border-right-style 的默认值是 none, border-style 的最终结果就是没有边框。 初始值as each of the properties of the shorthand:border-right-width: mediumborder-right-style: noneborder-right-color: currentcolor适用元素all elements. It also applies to ::first-letter.是否是继承属性否计算值as each of the properties of the shorthand:border-right-width: the absolute length or 0 if border-right-style is none or hiddenborder-right-style: as specifiedborder-right-color: computed colorAnimation typeas each of the properties of the shorthand:border-right-color: a colorborder-right-style: discreteborder-right-width: a length",
		"grammar": "border-right: 1px;\nborder-right: 2px dotted;\nborder-right: medium dashed green;\n",
		"initial value": "as each of the properties of the shorthand:border-right-width: mediumborder-right-style: noneborder-right-color: currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-right"
	},
	"border-right-color": {
		"desc": "border-right-color CSS 属性用来设置元素右边的 border. 这个属性的值也可以通过简写的 CSS 属性 border-color 或border-right来设置。",
		"grammar": "/* <color> values */\nborder-right-color: red;\nborder-right-color: #ffbb00;\nborder-right-color: rgb(255, 0, 0);\nborder-right-color: hsla(100%, 50%, 25%, 0.75);\nborder-right-color: currentColor;\nborder-right-color: transparent;\n\n/* Global values */\nborder-right-color: inherit;\nborder-right-color: initial;\nborder-right-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-right-color"
	},
	"border-right-style": {
		"desc": "border-right-style 是 border 中的一个 CSS 子属性，描述的是右边框的样式 border. 备注： 这个 css 没有定义不同样式的边界之间如何拼接。",
		"grammar": "/* 可用的值 */\nborder-right-style: none;\nborder-right-style: hidden;\nborder-right-style: dotted;\nborder-right-style: dashed;\nborder-right-style: solid;\nborder-right-style: double;\nborder-right-style: groove;\nborder-right-style: ridge;\nborder-right-style: inset;\nborder-right-style: outset;\n\n/* 全局可用的值 */\nborder-right-style: inherit;\nborder-right-style: initial;\nborder-right-style: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-right-style"
	},
	"border-right-width": {
		"desc": "CSS 的border-right-width 用来设置盒子右边框的宽度。",
		"grammar": "/* Keyword values */\nborder-right-width: thin;\nborder-right-width: medium;\nborder-right-width: thick;\n\n/* <length> values */\nborder-right-width: 10em;\nborder-right-width: 3vmax;\nborder-right-width: 6px;\n\n/* Global keywords */\nborder-right-width: inherit;\nborder-right-width: initial;\nborder-right-width: unset;\n",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-right-width"
	},
	"border-spacing": {
		"desc": "",
		"grammar": "table { border-spacing: 10px 5px; }\n",
		"initial value": "0",
		"inherit": "yes",
		"applicable elements": "table and inline-table elements",
		"name": "border-spacing"
	},
	"border-start-end-radius (en-US)": {
		"desc": "The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
		"grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-start-end-radius: 10px;\nborder-start-end-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-start-end-radius: 1em 2em;\n\n/* Global values */\nborder-start-end-radius: inherit;\nborder-start-end-radius: initial;\nborder-start-end-radius: revert;\nborder-start-end-radius: revert-layer;\nborder-start-end-radius: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-start-end-radius (en-US)"
	},
	"border-start-start-radius (en-US)": {
		"desc": "The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode.",
		"grammar": "/* <length> values */\n/* With one value the corner will be a circle */\nborder-start-start-radius: 10px;\nborder-start-start-radius: 1em;\n\n/* With two values the corner will be an ellipse */\nborder-start-start-radius: 1em 2em;\n\n/* Global values */\nborder-start-start-radius: inherit;\nborder-start-start-radius: initial;\nborder-start-start-radius: revert;\nborder-start-start-radius: revert-layer;\nborder-start-start-radius: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-start-start-radius (en-US)"
	},
	"border-style": {
		"desc": "border-style 是一个 CSS 简写属性，用来设定元素所有边框的样式。注意：border-style 默认值是 none，这意味着如果您只修改 border-width 和 border-color 是不会出现边框的。",
		"grammar": "/* Apply to all four sides */\nborder-style: dashed;\n\n/* horizontal | vertical */\nborder-style: dotted solid;\n\n/* top | horizontal | bottom */\nborder-style: hidden double dashed;\n\n/* top | right | bottom | left */\nborder-style: none solid dotted dashed;\n\n/* Global values */\nborder-style: inherit;\nborder-style: initial;\nborder-style: unset;\n",
		"name": "border-style"
	},
	"border-top": {
		"desc": "CSS 属性 border-top是属性 border-top-color, border-top-style, 和border-top-width 的三者的缩写。这些属性都是在描述一个元素的上方的边框border。",
		"grammar": "border-top-style: dotted;\nborder-top: thick green;",
		"name": "border-top"
	},
	"border-top-color": {
		"desc": "border-top-color 属性用以设置某元素顶部 border的颜色。通常，用border-color 或 border-top 设置该颜色更为便捷可取。",
		"grammar": "/* <color> values */\nborder-top-color: red;\nborder-top-color: #ffbb00;\nborder-top-color: rgb(255, 0, 0);\nborder-top-color: hsla(100%, 50%, 25%, 0.75);\nborder-top-color: currentColor;\nborder-top-color: transparent;\n\n/* Global values */\nborder-top-color: inherit;\nborder-top-color: initial;\nborder-top-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-top-color"
	},
	"border-top-left-radius": {
		"desc": "border-top-left-radius 用来设置元素左上角的圆角效果。这段圆弧（角）可以是圆或椭圆的一部分。如果其中有一个值为 0，那么将无圆角效果（见border-top-left-radius取值方式)。 盒模型的背景，可以是一张图片或一种颜色，会在边框处被剪裁，更甚至可以是一个圆；剪切的额外定位通过另一个 CSS 属性\"background-clip\"来定义。在 border-top-left-radius 属性值之后，如果作用的元素上没有设置“border-radius”属性，那么这个属性值就会通过简写属性重新设置成它的初始值。",
		"grammar": "/* the corner is a circle */\n/* border-top-left-radius: radius */\nborder-top-left-radius: 3px;\n\n/* the corner is an ellipsis */\n/* border-top-left-radius: horizontal vertical */\nborder-top-left-radius: 0.5em 1em;\n\nborder-top-left-radius: inherit;\n",
		"name": "border-top-left-radius"
	},
	"border-top-right-radius": {
		"desc": "",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements; but User Agents are not required to apply to table and inline-table elements when border-collapse is collapse. The behavior on internal table elements is undefined for the moment.. It also applies to ::first-letter.",
		"name": "border-top-right-radius"
	},
	"border-top-style": {
		"desc": "border-top-style CSS 设置元素上边框的 border. Note: 此规范并未定义不同样式的边框边角处如何连接。",
		"grammar": "/* Keyword values */\nborder-top-style: none;\nborder-top-style: hidden;\nborder-top-style: dotted;\nborder-top-style: dashed;\nborder-top-style: solid;\nborder-top-style: double;\nborder-top-style: groove;\nborder-top-style: ridge;\nborder-top-style: inset;\nborder-top-style: outset;\n\n/* Global values */\nborder-top-style: inherit;\nborder-top-style: initial;\nborder-top-style: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-top-style"
	},
	"border-top-width": {
		"desc": "css 属性 border-top-width 是用于设置盒模型的上边框的宽度",
		"grammar": "/* Keyword values */\nborder-top-width: thin;\nborder-top-width: medium;\nborder-top-width: thick;\n\n/* <length> values */\nborder-top-width: 10em;\nborder-top-width: 3vmax;\nborder-top-width: 6px;\n\n/* Global keywords */\nborder-top-width: inherit;\nborder-top-width: initial;\nborder-top-width: unset;\n",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "border-top-width"
	},
	"border-width": {
		"desc": "",
		"grammar": "/* 用法一：明确指定宽度值 */\n/* 当给定一个宽度时，该宽度作用于选定元素的所有边框 */\nborder-width: 5px;\n/* 当给定两个宽度时，该宽度分别依次作用于选定元素的横边与纵边 */\nborder-width: 2px 1.5em;\n/* 当给定三个宽度时，该宽度分别依次作用于选定元素的上横边、纵边、下横边 */\nborder-width: 1px 2em 1.5cm;\n/* 当给定四个宽度时，该宽度分别依次作用于选定元素的上横边、右纵边、下横边、左纵边（即按顺时针依次作用） */\nborder-width: 1px 2em 0 4rem;\n\n/* 用法二：使用全局关键字 */\n/* 可以使用的全局关键字有：inherit(继承),initial（初始值）,unset（不设置） */\nborder-width: inherit;\n\n/* 用法三：使用作用于 border-width 的关键字 */\nborder-width: thin;\nborder-width: medium;\nborder-width: thick;\n\n",
		"name": "border-width"
	},
	"bottom": {
		"desc": "bottom样式属性定义了定位元素下外边距边界与其包含块下边界之间的偏移，非定位元素设置此属性无效。bottom的效果取决于元素的position属性： 当position设置为absolute或fixed时，bottom属性指定了定位元素下外边距边界与其包含块下边界之间的偏移。当position设置为relative时，bottom属性指定了元素的下边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，bottom属性的效果和 position 为relative等同；如果元素在 viewport 外面，bottom属性的效果和 position 为fixed等同。当position设置为static时，bottom属性无效。 当 top和bottom同时指定时，并且 height没有被指定或者指定为auto或100%的时候，top和bottom都会生效，在其他情况下，如果 height被限制，则top属性会优先设置，bottom属性则会被忽略。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the height of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "positioned elements",
		"name": "bottom"
	},
	"box-decoration-break": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。box-decoration-break 属性用来定义当元素跨多行、多列或多页时，元素的片段应如何呈现。 指定的值将影响元素以下属性的表现： backgroundborderborder-imagebox-shadowclip-pathmarginpadding",
		"grammar": "/* Keyword values */\nbox-decoration-break: slice;\nbox-decoration-break: clone;\n\n/* Global values */\nbox-decoration-break: initial;\nbox-decoration-break: inherit;\nbox-decoration-break: unset;\n",
		"initial value": "slice",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "box-decoration-break"
	},
	"box-shadow": {
		"desc": "CSS box-shadow 属性用于在元素的框架上添加阴影效果。你可以在同一个元素上设置多个阴影效果，并用逗号将他们分隔开。该属性可设置的值包括阴影的 X 轴偏移量、Y 轴偏移量、模糊半径、扩散半径和颜色。 你几乎可以在任何元素上使用box-shadow来添加阴影效果。如果元素同时设置了 border-radius属性，那么阴影也会有圆角效果。多个阴影在 z 轴上的顺序和多个 text shadows 规则相同 (第一个阴影在最上面)。Box-shadow generator 是一个允许你生成 box-shadow 的交互式工具。",
		"grammar": "/* x 偏移量 | y 偏移量 | 阴影颜色 */\nbox-shadow: 60px -16px teal;\n\n/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影颜色 */\nbox-shadow: 10px 5px 5px black;\n\n/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影扩散半径 | 阴影颜色 */\nbox-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n\n/* 插页 (阴影向内) | x 偏移量 | y 偏移量 | 阴影颜色 */\nbox-shadow: inset 5em 1em gold;\n\n/* 任意数量的阴影，以逗号分隔 */\nbox-shadow: 3px 3px red, -1em 0 0.4em olive;\n\n/* 全局关键字 */\nbox-shadow: inherit;\nbox-shadow: initial;\nbox-shadow: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter.",
		"name": "box-shadow"
	},
	"box-sizing": {
		"desc": "CSS 中的 box-sizing 属性定义了 user agent 应该如何计算一个元素的总宽度和总高度。 在 CSS 盒子模型的默认定义里，你对一个元素所设置的 width 与 height 只会应用到这个元素的内容区。如果这个元素有任何的 border 或 padding ，绘制到屏幕上时的盒子宽度和高度会加上设置的边框和内边距值。这意味着当你调整一个元素的宽度和高度时需要时刻注意到这个元素的边框和内边距。当我们实现响应式布局时，这个特点尤其烦人。box-sizing 属性可以被用来调整这些表现： content-box 是默认值。如果你设置一个元素的宽为 100px，那么这个元素的内容区会有 100px 宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在 width 内的。也就是说，如果你将一个元素的 width 设为 100px，那么这 100px 会包含它的 border 和 padding，内容区的实际宽度是 width 减去 (border + padding) 的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。 译者注： border-box不包含margin Note: 对于新的 web 站点，你可能希望首先将 box-sizing 设置为 border-box，如下所示：* { box-sizing: border-box; }这使得处理元素大小的工作变得容易得多，并且通常消除了在布局内容时可能遇到的许多陷阱。然而，在某些情况下，你应谨慎使用这个属性。例如：你正在编写一个将由其他人使用的共享组件库，如果他们网站的其余部分没有设置此值，他们可能会发现很难使用你的组件库。",
		"grammar": "* { box-sizing: border-box; }",
		"initial value": "content-box",
		"inherit": "否",
		"applicable elements": "all elements that accept width or height",
		"name": "box-sizing"
	},
	"break-after": {
		"desc": "break-after CSS 属性描述在生成的盒子之后的页面，列或区域中断行为（换句话说，如何以及是否中断）。如果没有生成的盒子，则该属性将被忽略。/* Generic break values */break-after: auto;break-after: avoid;break-after: always;break-after: all; /* Page break values */break-after: avoid-page;break-after: page;break-after: left;break-after: right;break-after: recto;break-after: verso; /* Column break values */break-after: avoid-column;break-after: column; /* Region break values */break-after: avoid-region;break-after: region; /* Global values */break-after: inherit;break-after: initial;break-after: unset; 每个潜在的断点（亦即每个元素的边界）都受到三个属性的影响：上一个元素的 break-after 值、下一个元素的 break-before 值以及当前元素自身的 break-inside 值。以下规则被用于判断中断是否必要： 如果上述三个属性中，如果任何一个的值属于“强制中断”值，那么这个属性将被优先应用，此处所称“强制中断”的值为： always、 left、 right、 page、 column 和 region。If several of the concerned values is such a break, the one of the element that appears the latest in the flow is taken (that is the break-before value has precedence over the break-after value, which itself has precedence over the break-inside value).If any of the three concerned values is an avoid break value, that is avoid, avoid-page, avoid-region, avoid-column, no such break will be applied at that point. Once forced breaks have been applied, soft breaks may be added if needed, but not on element boundaries that resolve in a corresponding avoid value.初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Generic break values */\nbreak-after: auto;\nbreak-after: avoid;\nbreak-after: always;\nbreak-after: all;\n\n/* Page break values */\nbreak-after: avoid-page;\nbreak-after: page;\nbreak-after: left;\nbreak-after: right;\nbreak-after: recto;\nbreak-after: verso;\n\n/* Column break values */\nbreak-after: avoid-column;\nbreak-after: column;\n\n/* Region break values */\nbreak-after: avoid-region;\nbreak-after: region;\n\n/* Global values */\nbreak-after: inherit;\nbreak-after: initial;\nbreak-after: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "block-level elements",
		"name": "break-after"
	},
	"break-before": {
		"desc": "The break-before CSS 属性定义页面，列或区域在生成的盒子之前应如何处理中断。如果没有生成的盒子，则忽略该属性。/* Generic break values */break-before: auto;break-before: avoid; /* Page break values */break-before: avoid-page;break-before: page;break-before: always;break-before: left;break-before: right;break-before: recto;break-before: verso; /* Column break values */break-before: avoid-column;break-before: column; /* Region break values */break-before: avoid-region;break-before: region; /* Global values */break-before: inherit;break-before: initial;break-before: unset; Each possible break point (in other words, each element boundary) is affected by three properties: the break-after value of the previous element, the break-before value of the next element, and the break-inside value of the containing element.To determine if a break must be done, the following rules are applied: If any of the three concerned values is a forced break value (always, left, right, page, column, or region), it has precedence. If more than one of them are such a break, the one of the element that appears the latest in the flow is taken (i.e., the break-before value has precedence over the break-after value, which itself has precedence over the break-inside value).If any of the three concerned values is an avoid break value (avoid, avoid-page, avoid-region, or avoid-column), no such break will be applied at that point. Once forced breaks have been applied, soft breaks may be added if needed, but not on element boundaries that resolve in a corresponding avoid value.初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Generic break values */\nbreak-before: auto;\nbreak-before: avoid;\n\n/* Page break values */\nbreak-before: avoid-page;\nbreak-before: page;\nbreak-before: always;\nbreak-before: left;\nbreak-before: right;\nbreak-before: recto;\nbreak-before: verso;\n\n/* Column break values */\nbreak-before: avoid-column;\nbreak-before: column;\n\n/* Region break values */\nbreak-before: avoid-region;\nbreak-before: region;\n\n/* Global values */\nbreak-before: inherit;\nbreak-before: initial;\nbreak-before: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "block-level elements",
		"name": "break-before"
	},
	"break-inside": {
		"desc": "break-inside CSS 属性描述了在多列布局页面下的内容盒子如何中断，如果多列布局没有内容盒子，这个属性会被忽略。break-inside: auto;break-inside: avoid;break-inside: avoid-page;break-inside: avoid-column;break-inside: avoid-region; 每一个可能的断点（可以理解为元素的边界）由三个属性来定义。前一个元素的break-after，后一个元素的break-before，以及当前元素的break-inside。如果需要定义一个中断点，必须遵循以下原则： 如果这三个中断属性的值有一个是强制中断值（这些强制中断值包括了 always, left, right, page, column, region），那么这个属性的值就具有优先权。如果其中一个以上是这样的断点，则使用流中最新出现的元素的值。因此，break-before值优先于break-after值，而后者又优先于break-inside值。如果三个相关值中的任何一个是避免中断值，相关值包括 avoid, avoid-page, avoid-region, avoid-column, 则在该点上不应用此类中断。 一旦应用了强制中断，如果需要，可以添加软中断，但不能在元素边界上添加相应的avoid值。初始值auto适用元素block-level elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "break-inside: auto;\nbreak-inside: avoid;\nbreak-inside: avoid-page;\nbreak-inside: avoid-column;\nbreak-inside: avoid-region;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "block-level elements",
		"name": "break-inside"
	},
	"caption-side": {
		"desc": "CSS 中 caption-side 属性会将表格的标题<caption> 放到规定的位置。但是具体显示的位置与表格的 writing-mode 属性值有关。",
		"grammar": "/* Directional values */\ncaption-side: top;\ncaption-side: bottom;\n\n/* Warning: non-standard values */\ncaption-side: left;\ncaption-side: right;\ncaption-side: top-outside;\ncaption-side: bottom-outside;\n\n/* Global values */\ncaption-side: inherit;\ncaption-side: initial;\ncaption-side: unset;\n",
		"name": "caption-side"
	},
	"caret-color": {
		"desc": "caret-color 属性用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。 附注：上面说的“插入光标”（insertion caret）只是光标（caret）的其中一种。比如一些浏览器有一种光标叫做“导航光标“（navigation caret），它可以在不可编辑区域内来回移动。此外，当鼠标指针移动到一段 cursor 属性是 auto 的文本上方时，或移动到 cursor 属性是 text、 vertical-text 的內容上方時，虽然看起来有点像插入光标，但它不是插入光标（caret），而是鼠标指针光标（cursor）。",
		"grammar": "/* Keyword values */\ncaret-color: auto;\ncaret-color: transparent;\ncaret-color: currentColor;\n\n/* <color> values */\ncaret-color: red;\ncaret-color: #5729e9;\ncaret-color: rgb(0, 200, 0);\ncaret-color: hsla(228, 4%, 24%, 0.8);\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "caret-color"
	},
	"clear": {
		"desc": "clear CSS 属性指定一个元素是否必须移动 (清除浮动后) 到在它之前的浮动元素下面。clear 属性适用于浮动和非浮动元素。 当应用于非浮动块时，它将非浮动块的边框边界移动到所有相关浮动元素外边界的下方。这个非浮动块的垂直外边距会折叠。另一方面，两个浮动元素的垂直外边距将不会折叠。当应用于浮动元素时，它将元素的外边界移动到所有相关的浮动元素外边框边界的下方。这会影响后面浮动元素的布局，后面的浮动元素的位置无法高于它之前的元素。要被清除的相关浮动元素指的是在相同块级格式化上下文中的前置浮动。 注意：如果一个元素里只有浮动元素，那它的高度会是 0。如果你想要它自适应即包含所有浮动元素，那你需要清除它的子元素。一种方法叫做clearfix，即clear一个不浮动的 ::after 伪元素。#container::after { content: \"\"; display: block; clear: both;}",
		"grammar": "<div class=\"wrapper\">\n  <p class=\"black\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus sit amet diam. Duis mattis varius dui. Suspendisse eget dolor.</p>\n  <p class=\"red\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n  <p class=\"left\">This paragraph clears left.</p>\n</div>",
		"name": "clear"
	},
	"clip": {
		"desc": "已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
		"grammar": "p { border:dotted;  position:relative; }\n\n#img2 {\n  position:absolute;  left:263px;\n\n  clip: rect(40px, 200px, 150px, 30px);\n  /* 标准语法，Internet Explorer 4-7 不支持 */\n}\n\n#img3 {\n  position: absolute; left:526px;\n\n  clip: rect(40px  200px  150px  30px);\n  /* 非标准语法，但是包括火狐与 IE 在内的主要浏览器均支持 */\n}",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "absolutely positioned elements",
		"name": "clip"
	},
	"clip-path": {
		"desc": "clip-path CSS 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。",
		"grammar": "/* Keyword values */\nclip-path: none;\n\n/* <clip-source> values */\nclip-path: url(resources.svg#c1);\n\n/* <geometry-box> values */\nclip-path: margin-box;\nclip-path: border-box;\nclip-path: padding-box;\nclip-path: content-box;\nclip-path: fill-box;\nclip-path: stroke-box;\nclip-path: view-box;\n\n/* <basic-shape> values */\nclip-path: inset(100px 50px);\nclip-path: circle(50px at 0 100px);\nclip-path: ellipse(50px 60px at 0 10% 20%);\nclip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\nclip-path: path('M0.5,1 C0.5,1,0,0.7,0,0.3 A0.25,0.25,1,1,1,0.5,0.3 A0.25,0.25,1,1,1,1,0.3 C1,0.7,0.5,1,0.5,1 Z');\n\n/* Box and shape values combined */\nclip-path: padding-box circle(50px at 0 100px);\n\n/* Global values */\nclip-path: inherit;\nclip-path: initial;\nclip-path: revert;\nclip-path: revert-layer;\nclip-path: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "clip-path"
	},
	"color": {
		"desc": "colorCSS 属性设置颜色值的前景色以及文本装饰，并设置currentcolor (en-US)值。currentcolor可以对其他颜色属性用作不直接的值，比如border-color。 对于在 HTML 中使用颜色的概述，参考使用 CSS 对 HTML 元素实现颜色。",
		"grammar": "/* 关键词 */\ncolor: currentcolor;\n\n/* <named-color>值 */\ncolor: red;\ncolor: orange;\ncolor: tan;\ncolor: rebeccapurple;\n\n/* <hex-color>值 */\ncolor: #090;\ncolor: #009900;\ncolor: #090a;\ncolor: #009900aa;\n\n/* <rgb()>值 */\ncolor: rgb(34, 12, 64, 0.6);\ncolor: rgba(34, 12, 64, 0.6);\ncolor: rgb(34 12 64 / 0.6);\ncolor: rgba(34 12 64 / 0.3);\ncolor: rgb(34.0 12 64 / 60%);\ncolor: rgba(34.6 12 64 / 30%);\n\n/* <hsl()>值 */\ncolor: hsl(30, 100%, 50%, 0.6);\ncolor: hsla(30, 100%, 50%, 0.6);\ncolor: hsl(30 100% 50% / 0.6);\ncolor: hsla(30 100% 50% / 0.6);\ncolor: hsl(30.0 100% 50% / 60%);\ncolor: hsla(30.2 100% 50% / 60%);\n\n/* 全局值 */\ncolor: inherit;\ncolor: initial;\ncolor: unset;",
		"initial value": "canvastext",
		"inherit": "yes",
		"applicable elements": "all elements and text. It also applies to ::first-letter and ::first-line.",
		"name": "color"
	},
	"color-scheme": {
		"desc": "color-scheme CSS 属性允许元素指示它可以轻松呈现的配色方案。操作系统配色方案的常见选择是“亮”和“暗”，或者是“白天模式”和“夜间模式”。当用户选择其中一种配色方案时，操作系统会对用户界面进行调整。这包括表单控件、滚动条和 CSS 系统颜色的使用值。",
		"grammar": "color-scheme: normal;\ncolor-scheme: light;\ncolor-scheme: dark;\ncolor-scheme: light dark;\n\n/* Global values */\ncolor-scheme: inherit;\ncolor-scheme: initial;\ncolor-scheme: revert;\ncolor-scheme: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements and text",
		"name": "color-scheme"
	},
	"column-count": {
		"desc": "column-count CSS 属性，描述元素的列数。column-count: 3;column-count: auto; column-count: inherit;column-count: initial;column-count: unset;",
		"grammar": ".content-box {\n  border: 10px solid #000000;\n  column-count:3;\n}\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "Block containers except table wrapper boxes",
		"name": "column-count"
	},
	"column-fill": {
		"desc": "",
		"grammar": "column-fill: auto;\ncolumn-fill: balance;\n\n/* Global values */\ncolumn-fill: inherit;\ncolumn-fill: initial;\ncolumn-fill: unset;\n",
		"initial value": "balance",
		"inherit": "否",
		"applicable elements": "multicol elements",
		"name": "column-fill"
	},
	"column-gap (grid-column-gap)": {
		"desc": "CSS column-gap 属性用来设置元素列之间的间隔（gutter）大小。",
		"grammar": "/* Keyword value */\ncolumn-gap: normal;\n\n/* <length> values */\ncolumn-gap: 3px;\ncolumn-gap: 2.5em;\n\n/* <percentage> value */\ncolumn-gap: 3%;\n\n/* Global values */\ncolumn-gap: inherit;\ncolumn-gap: initial;\ncolumn-gap: revert;\ncolumn-gap: revert-layer;\ncolumn-gap: unset;\n",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "multi-column elements, flex containers, grid containers",
		"name": "column-gap (grid-column-gap)"
	},
	"column-rule": {
		"desc": "",
		"initial value": "as each of the properties of the shorthand:column-rule-width: mediumcolumn-rule-style: nonecolumn-rule-color: currentcolor",
		"inherit": "否",
		"applicable elements": "multicol elements",
		"name": "column-rule"
	},
	"column-rule-color": {
		"desc": "",
		"grammar": "#header { column-rule-color: blue; }\n",
		"initial value": "currentcolor",
		"inherit": "否",
		"applicable elements": "multicol elements",
		"name": "column-rule-color"
	},
	"column-rule-style": {
		"desc": "",
		"grammar": "#header {-moz-column-rule-style: inset;}",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "multicol elements",
		"name": "column-rule-style"
	},
	"column-rule-width": {
		"desc": "",
		"grammar": "#header {column-rule-width: thick;}\n",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "multicol elements",
		"name": "column-rule-width"
	},
	"column-span": {
		"desc": "",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "in-flow block-level elements",
		"name": "column-span"
	},
	"column-width (en-US)": {
		"desc": "The column-width CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the column-width value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.",
		"grammar": "/* Keyword value */\ncolumn-width: auto;\n\n/* <length> values */\ncolumn-width: 60px;\ncolumn-width: 15.5em;\ncolumn-width: 3.3vw;\n\n/* Global values */\ncolumn-width: inherit;\ncolumn-width: initial;\ncolumn-width: revert;\ncolumn-width: revert-layer;\ncolumn-width: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "Block containers except table wrapper boxes",
		"name": "column-width (en-US)"
	},
	"columns": {
		"desc": "CSS 属性 columns 用来设置元素的列宽和列数。 它是一个简写属性，可在单个方便的声明中设置 column-width (en-US) 和 column-count 属性。与所有简写属性一样，任何省略的子值都将设置为其初始值。",
		"grammar": "/* Column width */\ncolumns: 18em;\n\n/* Column count */\ncolumns: auto;\ncolumns: 2;\n\n/* Both column width and count */\ncolumns: 2 auto;\ncolumns: auto 12em;\ncolumns: auto auto;\n\n/* Global values */\ncolumns: inherit;\ncolumns: initial;\ncolumns: unset;",
		"initial value": "as each of the properties of the shorthand:column-width (en-US): autocolumn-count: auto",
		"inherit": "否",
		"applicable elements": "Block containers except table wrapper boxes",
		"name": "columns"
	},
	"contain": {
		"desc": "CSS contain 属性允许开发者声明当前元素和它的内容尽可能的独立于 DOM 树的其他部分。这使得浏览器在重新计算布局、样式、绘图、大小或这四项的组合时，只影响到有限的 DOM 区域，而不是整个页面，可以有效改善性能。这个属性在包含大量独立组件的页面非常实用，它可以防止某个小部件的 CSS 规则改变对页面上的其他东西造成影响。 Note: If applied (with value: paint, strict or content), this property creates: A new containing block (for the descendants whose position property is absolute or fixed).A new stacking context.A new block formatting context.",
		"grammar": "/* 关键词值 */\ncontain: none;\n\n/* 等价于 contain: layout paint size */\ncontain: strict;\n\n/* 等价于 contain: layout paint W3C 链接：https://www.w3.org/TR/css-contain-2/#valdef-contain-content*/\ncontain: content;\n\ncontain: size;\ncontain: layout;\ncontain: style;\ncontain: paint;\n\n/* 支持指定多个关键词 */\ncontain: size paint;\ncontain: size layout paint;\n\n/* 全局值 */\ncontain: inherit;\ncontain: initial;\ncontain: unset;",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "contain"
	},
	"content": {
		"desc": "",
		"grammar": "<h1>5</h1>\n<p> We shall start this with a quote from Sir Tim Berners-Lee,\n    <q cite=\"http://www.w3.org/People/Berners-Lee/FAQ.html#Internet\">\n        I was lucky enough to invent the Web at the time when the Internet already existed - and had for a decade and a half.</q>  We must understand that there is nothing fundamentally wrong with building on the contributions of others.\n</p>\n\n<h1>6</h1>\n<p> Here we shall quote the Mozilla Manifesto,\n    <q cite=\"http://www.mozilla.org/en-US/about/manifesto/\">\n        Individuals must have the ability to shape the Internet and their own experiences on the Internet.</q> And so, we can infer that contributing to the open web, can protect our own individual experiences on it.\n</p>",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "All elements, tree-abiding pseudo-elements, and page margin boxes",
		"name": "content"
	},
	"content-visibility (en-US)": {
		"desc": "The content-visibility CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work (including layout and painting) until it is needed — which makes the initial page load much faster.",
		"grammar": "/* Keyword values */\ncontent-visibility: visible;\ncontent-visibility: hidden;\ncontent-visibility: auto;\n\n/* Global values */\ncontent-visibility: inherit;\ncontent-visibility: initial;\ncontent-visibility: revert;\ncontent-visibility: revert-layer;\ncontent-visibility: unset;\n",
		"initial value": "visible",
		"inherit": "no",
		"applicable elements": "elementsForWhichLayoutContainmentCanApply",
		"name": "content-visibility (en-US)"
	},
	"counter-increment": {
		"desc": "",
		"grammar": "/* Increment counter-name by 1 */\ncounter-increment: counter-name;\n\n/* Decrement counter-name by 1 */\ncounter-increment: counter-name -1;\n\n/* Increment counter1 by 1, and decrement counter2 by 4 */\ncounter-increment: counter 1 counter2 -4;\n\n/* Do not increment/decrement anything: used to hide less specific values */\ncounter-increment: none;\n\n/* Global values */\ncounter-increment: inherit;\ncounter-increment: initial;\ncounter-increment: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "counter-increment"
	},
	"counter-reset": {
		"desc": "counter-reset 属性用于将 CSS 计数器 重置为制定值",
		"grammar": "/* Set counter-name to 0 */\ncounter-reset: counter-name;\n\n/* Set counter-name to -1 */\ncounter-reset: counter-name -1;\n\n/* Set counter1 to 1, and counter2 to 4 */\ncounter-reset: counter1 1 counter2 4;\n\n/* Cancel any reset that could have been set in less specific rules */\ncounter-reset: none;\n\n/* Global values */\ncounter-reset: inherit;\ncounter-reset: initial;\ncounter-reset: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "counter-reset"
	},
	"counter-set (en-US)": {
		"desc": "The counter-set CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element.",
		"grammar": "/* Set \"my-counter\" to 0 */\ncounter-set: my-counter;\n\n/* Set \"my-counter\" to -1 */\ncounter-set: my-counter -1;\n\n/* Set \"counter1\" to 1, and \"counter2\" to 4 */\ncounter-set: counter1 1 counter2 4;\n\n/* Cancel any counter that could have been set in less specific rules */\ncounter-set: none;\n\n/* Global values */\ncounter-set: inherit;\ncounter-set: initial;\ncounter-set: revert;\ncounter-set: revert-layer;\ncounter-set: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "counter-set (en-US)"
	},
	"cursor": {
		"desc": "cursor CSS 属性设置光标的类型（如果有），在鼠标指针悬停在元素上时显示相应样式。",
		"grammar": "/* 关键字值 */\ncursor: pointer;\ncursor: auto;\n\n/* 使用 URL，并提供一个关键字值作为备用 */\ncursor: url(hand.cur), pointer;\n\n/* URL 和 xy 的坐标偏移值，最后提供一个关键字值作为备用 */\ncursor:  url(cursor1.png) 4 12, auto;\ncursor:  url(cursor2.png) 2 2, pointer;\n\n/* 全局属性 */\ncursor: inherit;\ncursor: initial;\ncursor: unset;\n",
		"name": "cursor"
	},
	"direction": {
		"desc": "CSS 属性 direction 用来设置文本、表列水平溢出的方向。 rtl 表示从右到左 (类似希伯来语或阿拉伯语)， ltr 表示从左到右 (类似英语等大部分语言). 值得注意的是文本方向通常由文档定义 (e.g., with HTML's dir attribute) 而不是通过直接使用 direction 属性定义。该属性设置可以设置块级元素文本的基本方向，也可以设置由通过 unicode-bidi属性创建的嵌入元素的方向。与此同时，它还可以设置文本、块级元素的默认对齐方式 ，以及表行中的单元格的流动方向。与 HTML 中的 dir 属性不同，direction属性不会从表列继承到表单元格，因为 CSS 继承遵从文档流，而表单元格位于行内部，但不在列内部。direction 属性和 unicode-bidi 属性不受 all 属性影响。",
		"grammar": "/* Keyword values */\ndirection: ltr;\ndirection: rtl;\n\n/* Global values */\ndirection: inherit;\ndirection: initial;\ndirection: unset;\n",
		"initial value": "ltr",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "direction"
	},
	"display": {
		"desc": "display 属性可以设置元素的内部和外部显示类型 display types。元素的外部显示类型 outer display types 将决定该元素在流式布局中的表现（块级或内联元素）；元素的内部显示类型 inner display types 可以控制其子元素的布局（例如：flow layout，grid 或 flex）。 在 CSS 规范（特指 CSS Level 1/2/3 规范）中查阅 display 属性的所有取值时需要注意：个别取值的详细信息记录在独立的规范中。例如，display: flex 的详细信息在 CSS Flexible Box Model 规范中记录。可以在本文档末尾的表格中查看所有有关的规范。",
		"grammar": ".container {\n  display:  [ <display-outside> | <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy> ;\n}\n",
		"name": "display"
	},
	"empty-cells": {
		"desc": "CSS 中 empty-cells 属性定义了用户端 user agent 应该怎么来渲染表格 <table> 中没有可见内容的单元格的边框和背景。/* Keyword values */empty-cells: show;empty-cells: hide; /* Global values */empty-cells: inherit;empty-cells: initial;empty-cells: unset; 只有当 border-collapse 属性值是 separate 时，才会生效。初始值show适用元素table-cell elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nempty-cells: show;\nempty-cells: hide;\n\n/* Global values */\nempty-cells: inherit;\nempty-cells: initial;\nempty-cells: unset;\n",
		"initial value": "show",
		"inherit": "yes",
		"applicable elements": "table-cell elements",
		"name": "empty-cells"
	},
	"filter": {
		"desc": "CSS属性 filter 将模糊或颜色偏移等图形效果应用于元素。滤镜通常用于调整图像、背景和边框的渲染。CSS 标准里包含了一些已实现预定义效果的函数。你也可以参考一个 SVG 滤镜，通过一个 URL 链接到 SVG 滤镜元素（SVG filter element）。",
		"grammar": "/* URL to SVG filter */\nfilter: url(\"filters.svg#filter-id\");\n\n/* <filter-function> values */\nfilter: blur(5px);\nfilter: brightness(0.4);\nfilter: contrast(200%);\nfilter: drop-shadow(16px 16px 20px blue);\nfilter: grayscale(50%);\nfilter: hue-rotate(90deg);\nfilter: invert(75%);\nfilter: opacity(25%);\nfilter: saturate(30%);\nfilter: sepia(60%);\n\n/* Multiple filters */\nfilter: contrast(175%) brightness(3%);\n\n/* Use no filter */\nfilter: none;\n\n/* Global values */\nfilter: inherit;\nfilter: initial;\nfilter: revert;\nfilter: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "filter"
	},
	"flex": {
		"desc": "flex CSS 简写属性设置了弹性项目如何增大或缩小以适应其弹性容器中可用的空间。",
		"grammar": "/* 关键字值 */\nflex: auto;\nflex: initial;\nflex: none;\n\n/* 一个值，无单位数字：flex-grow */\nflex: 2;\n\n/* 一个值，width/height: flex-basis */\nflex: 10em;\nflex: 30px;\nflex: min-content;\n\n/* 两个值：flex-grow | flex-basis */\nflex: 1 30px;\n\n/* 两个值：flex-grow | flex-shrink */\nflex: 2 2;\n\n/* 三个值：flex-grow | flex-shrink | flex-basis */\nflex: 2 2 10%;\n\n/*全局属性值 */\nflex: inherit;\nflex: initial;\nflex: unset;\n",
		"initial value": "as each of the properties of the shorthand:flex-grow: 0flex-shrink: 1flex-basis: auto",
		"inherit": "否",
		"applicable elements": "flex items, including in-flow pseudo-elements",
		"name": "flex"
	},
	"flex-basis": {
		"desc": "CSS 属性 flex-basis 指定了 flex 元素在主轴方向上的初始大小。如果不使用 box-sizing 改变盒模型的话，那么这个属性就决定了 flex 元素的内容盒（content-box）的尺寸。 Note: 当一个元素同时被设置了 flex-basis (除值为 auto 外) 和 width (或者在 flex-direction: column 情况下设置了height) , flex-basis 具有更高的优先级。",
		"grammar": "/* 指定<'width'> */\nflex-basis: 10em;\nflex-basis: 3px;\nflex-basis: auto;\n\n/* 固有的尺寸关键词 */\nflex-basis: fill;\nflex-basis: max-content;\nflex-basis: min-content;\nflex-basis: fit-content;\n\n/* 在 flex item 内容上的自动尺寸 */\nflex-basis: content;\n\n/* 全局数值 */\nflex-basis: inherit;\nflex-basis: initial;\nflex-basis: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "flex items, including in-flow pseudo-elements",
		"name": "flex-basis"
	},
	"flex-direction": {
		"desc": "CSS flex-direction 属性指定了内部元素是如何在 flex 容器中布局的，定义了主轴的方向 (正方向或反方向)。/* The direction text is laid out in a line */flex-direction: row; /* Like <row>, but reversed */flex-direction: row-reverse; /* The direction in which lines of text are stacked */flex-direction: column; /* Like <column>, but reversed */flex-direction: column-reverse; /* Global values */flex-direction: inherit;flex-direction: initial;flex-direction: unset;请注意，值 row 和 row-reverse 受 flex 容器的方向性的影响。如果它的 dir 属性是 ltr，row 表示从左到右定向的水平轴，而 row-reverse 表示从右到左; 如果 dir 属性是 rtl，row 表示从右到左定向的轴，而 row-reverse 表示从左到右。初始值row适用元素flex containers是否是继承属性否计算值as specifiedAnimation typediscrete查看 使用 CSS 弹性盒子 (en-US) 以了解更多的属性和信息。",
		"grammar": "<h4>This is a Column-Reverse</h4>\n<div id=\"content\">\n    <div id=\"box\" style=\"background-color:red;\">A</div>\n    <div id=\"box\" style=\"background-color:lightblue;\">B</div>\n    <div id=\"box\" style=\"background-color:yellow;\">C</div>\n</div>\n<h4>This is a Row-Reverse</h4>\n<div id=\"content1\">\n    <div id=\"box1\" style=\"background-color:red;\">A</div>\n    <div id=\"box1\" style=\"background-color:lightblue;\">B</div>\n    <div id=\"box1\" style=\"background-color:yellow;\">C</div>\n</div>",
		"initial value": "row",
		"inherit": "否",
		"applicable elements": "flex containers",
		"name": "flex-direction"
	},
	"flex-flow": {
		"desc": "",
		"grammar": "element {\n  /* Main-axis is the block direction with reversed main-start and main-end. Flex items are laid out in multiple lines */\n  flex-flow: column-reverse wrap;\n}\n",
		"initial value": "as each of the properties of the shorthand:flex-direction: rowflex-wrap: nowrap",
		"inherit": "否",
		"applicable elements": "flex containers",
		"name": "flex-flow"
	},
	"flex-grow": {
		"desc": "CSS 属性 flex-grow CSS 设置 flex 项 主尺寸 的 flex 增长系数。",
		"grammar": "/* <number> 值 */\nflex-grow: 3;\nflex-grow: 0.6;\n\n/* 全局值 */\nflex-grow: inherit;\nflex-grow: initial;\nflex-grow: revert;\nflex-grow: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "flex items, including in-flow pseudo-elements",
		"name": "flex-grow"
	},
	"flex-shrink": {
		"desc": "CSS flex-shrink 属性指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值。flex-shrink: 2;flex-shrink: 0.6; /* Global values */flex-shrink: inherit;flex-shrink: initial;flex-shrink: unset初始值1适用元素flex items, including in-flow pseudo-elements是否是继承属性否计算值as specifiedAnimation typea number更多属性和定义请参见使用 CSS 弹性盒子 (en-US)",
		"grammar": "flex-shrink: 2;\nflex-shrink: 0.6;\n\n/* Global values */\nflex-shrink: inherit;\nflex-shrink: initial;\nflex-shrink: unset",
		"initial value": "1",
		"inherit": "否",
		"applicable elements": "flex items, including in-flow pseudo-elements",
		"name": "flex-shrink"
	},
	"flex-wrap": {
		"desc": "CSS 的 flex-wrap 属性指定 flex 元素单行显示还是多行显示。如果允许换行，这个属性允许你控制行的堆叠方向。",
		"grammar": "flex-wrap: nowrap; /* Default value */\nflex-wrap: wrap;\nflex-wrap: wrap-reverse;\n\n/* Global values */\nflex-wrap: inherit;\nflex-wrap: initial;\nflex-wrap: revert;\nflex-wrap: unset;\n",
		"initial value": "nowrap",
		"inherit": "否",
		"applicable elements": "flex containers",
		"name": "flex-wrap"
	},
	"float": {
		"desc": "float CSS 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动（文档流）中移除，尽管仍然保持部分的流动性（与绝对定位相反）。",
		"grammar": "/* Keyword values */\nfloat: left;\nfloat: right;\nfloat: none;\nfloat: inline-start;\nfloat: inline-end;\n\n/* Global values */\nfloat: inherit;\nfloat: initial;\nfloat: revert;\nfloat: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements, but has no effect if the value of display is none.",
		"name": "float"
	},
	"font": {
		"desc": "",
		"grammar": "/* Set the font size to 12px and the line height to 14px.\n   Set the font family to sans-serif */\np { font: 12px/14px sans-serif }\n\n/* Set the font size to 80% of the parent element\n   or default value (if no parent element present).\n   Set the font family to sans-serif */\np { font: 80% sans-serif }\n\n/* Set the font weight to bold,\n   the font-style to italic,\n   the font size to large,\n   and the font family to serif. */\np { font: bold italic large serif }\n\n/* Use the same font as the status bar of the window */\np { font: status-bar }",
		"name": "font"
	},
	"font-family": {
		"desc": "CSS 属性 font-family 允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 @font-face 指定的可以直接下载的字体。通常会使用属性缩写 font 来设置 font-size 和其他与字体相关的属性。应当至少在使用的 font-family 列表中添加一个通用的字体族名，因为无法保证用户的计算机内已经安装了指定的字体，也不能保证使用 @font-face 提供的字体移动能够正确地下载。提供通用的字体族使得浏览器可以在无法得到最佳字体的情况下使用一个相对接近的备选字体。font-family 属性指定的是一个优先级从高到低的可选字体列表。字体的选定不是在发现用户计算机上安装的列表中的第一个字体时停止。相反，对字体的选择是逐字进行的。也就是说即使某个字符周围都在某个字体中可以显示，但该字符在当前的字体文件中没有适合的图形，那么会继续尝试列表中靠后的字体。（不过这在 Internet Explorer 6 以及之前的版本的 IE 浏览器中不适用。）当一个字体只在某些特定的 font-style (en-US)、 font-variant (en-US)、或 font-size (en-US) 属性值下有效时，这些属性的值也可能对字体族 font family 的选择造成影响。",
		"grammar": "/* 一个字体族名和一个通用字体族名 */\nfont-family: \"Gill Sans Extrabold\", sans-serif;\nfont-family: \"Goudy Bookletter 1911\", sans-serif;\n\n/* 仅有一个通用字体族名 */\nfont-family: serif;\nfont-family: sans-serif;\nfont-family: monospace;\nfont-family: cursive;\nfont-family: fantasy;\nfont-family: system-ui;\nfont-family: emoji;\nfont-family: math;\nfont-family: fangsong;\n\n/* 全局值 */\nfont-family: inherit;\nfont-family: initial;\nfont-family: unset;\n",
		"initial value": "depends on user agent",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-family"
	},
	"font-feature-settings": {
		"desc": "font-feature-settings 属性用于控制 OpenType 字体中的高级印刷功能。",
		"grammar": "/* 默认设置 */\nfont-feature-settings: normal;\n\n/* 设置 OpenType 功能标签的值 */\nfont-feature-settings: \"smcp\";\nfont-feature-settings: \"smcp\" on;\nfont-feature-settings: \"swsh\" 2;\nfont-feature-settings: \"smcp\", \"swsh\" 2;\n\n/* 全局值 */\nfont-feature-settings: inherit;\nfont-feature-settings: initial;\nfont-feature-settings: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-feature-settings"
	},
	"font-kerning": {
		"desc": "font-kerning CSS 属性设置是否使用字体中储存的字距信息。/* Keyword values */font-kerning: auto;font-kerning: normal;font-kerning: none; /* Global values */font-kerning: inherit;font-kerning: initial;font-kerning: unset; Kerning（字距）定义了字母的分布情况。对于良好地规定了字距的字体，字距特性使得字母分布更为统一，阅读体验更佳。如下图所示，左侧的示例没有应用字距，而右侧使用了： 初始值auto适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nfont-kerning: auto;\nfont-kerning: normal;\nfont-kerning: none;\n\n/* Global values */\nfont-kerning: inherit;\nfont-kerning: initial;\nfont-kerning: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-kerning"
	},
	"font-language-override": {
		"desc": "font-language-override CSS 属性控制在指定的语言中使用特定的字形。/* 关键字作为值 */font-language-override: normal; /* 字符串作为值 */font-language-override: \"ENG\"; /* Use English glyphs */font-language-override: \"TRK\"; /* Use Turkish glyphs */ /* 使用全局值 */font-language-override: initial;font-language-override: inherit;font-language-override: unset;默认情况下，HTML 的 lang 属性告诉浏览器使用语言的特定字形。例如，很多字体都有针对合成符 fi 的字形（i 上的点会被合并进 f 里）。而当使用土耳其语时，字体就不会使用合成字形。因为土耳其语有两个版本的 i: 一个带点 (i) 一个不带点 (ı)。这种情况下如果使用连写会把带点的 i 不正确地渲染成不带点的 ı。font-language-override属性可以使你重载针对特定语言的字体行为。当你使用的字体缺少对某种语言的正确支持时，这很有用。例如，如果一种字体没有针对阿塞拜疆语的适当规则，你可以强制字体使用遵循类似规则的土耳其语字形。初始值normal适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* 关键字作为值 */\nfont-language-override: normal;\n\n/* 字符串作为值 */\nfont-language-override: \"ENG\";  /* Use English glyphs */\nfont-language-override: \"TRK\";  /* Use Turkish glyphs */\n\n/* 使用全局值 */\nfont-language-override: initial;\nfont-language-override: inherit;\nfont-language-override: unset;",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-language-override"
	},
	"font-optical-sizing (en-US)": {
		"desc": "The font-optical-sizing CSS property sets whether text rendering is optimized for viewing at different sizes.",
		"grammar": "/* keyword values */\nfont-optical-sizing: none;\nfont-optical-sizing: auto; /* default */\n\n/* Global values */\nfont-optical-sizing: inherit;\nfont-optical-sizing: initial;\nfont-optical-sizing: revert;\nfont-optical-sizing: revert-layer;\nfont-optical-sizing: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-optical-sizing (en-US)"
	},
	"font-size": {
		"desc": "font-size CSS 属性指定字体的大小。因为该属性的值会被用于计算 em 和 ex 长度单位，定义该值可能改变其他元素的大小。/* <absolute-size>，绝对大小值 */font-size: xx-small;font-size: x-small;font-size: small;font-size: medium;font-size: large;font-size: x-large;font-size: xx-large; /* <relative-size>，相对大小值 */font-size: larger;font-size: smaller; /* <length>，长度值 */font-size: 12px;font-size: 0.8em; /* <percentage>，百分比值 */font-size: 80%; font-size: inherit; 初始值medium适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yesPercentagesrefer to the parent element's font size计算值as specified, but with relative lengths converted into absolute lengthsAnimation typea length",
		"grammar": "/* <absolute-size>，绝对大小值 */\nfont-size: xx-small;\nfont-size: x-small;\nfont-size: small;\nfont-size: medium;\nfont-size: large;\nfont-size: x-large;\nfont-size: xx-large;\n\n/* <relative-size>，相对大小值 */\nfont-size: larger;\nfont-size: smaller;\n\n/* <length>，长度值 */\nfont-size: 12px;\nfont-size: 0.8em;\n\n/* <percentage>，百分比值 */\nfont-size: 80%;\n\nfont-size: inherit;\n",
		"initial value": "medium",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-size"
	},
	"font-size-adjust": {
		"desc": "",
		"grammar": "font-size: 14px;\nfont-size-adjust: 0.5;\n",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-size-adjust"
	},
	"font-stretch": {
		"desc": "",
		"grammar": "/* Keyword values */\nfont-stretch: ultra-condensed;\nfont-stretch: extra-condensed;\nfont-stretch: condensed;\nfont-stretch: semi-condensed;\nfont-stretch: normal;\nfont-stretch: semi-expanded;\nfont-stretch: expanded;\nfont-stretch: extra-expanded;\nfont-stretch: ultra-expanded;\n\n/* Global values */\nfont-stretch: inherit;\nfont-stretch: initial;\nfont-stretch: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-stretch"
	},
	"font-style": {
		"desc": "font-style CSS 属性允许你选择 font-family 字体下的 italic 或 oblique 样式。 Italic 样式一般是指书写体，相比无样式的字体，通常会占用较少的高度，而 oblique 字形一般只是常规字形的倾斜版本。斜体（italic）和倾斜体（oblique）都是通过人工倾斜常规字体的字形来模拟的（使用 font-synthesis 对此进行控制）。Italic font faces are generally cursive in nature, usually using less horizontal space than their unstyled counterparts, while oblique faces are usually just sloped versions of the regular face. When the specified style is not available, both italic and oblique faces are simulated by artificially sloping the glyphs of the regular face (use font-synthesis to control this behavior).",
		"grammar": "font-style: normal;\nfont-style: italic;\nfont-style: oblique;\nfont-style: oblique 10deg;\n\n/* Global values */\nfont-style: inherit;\nfont-style: initial;\nfont-style: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-style"
	},
	"font-synthesis": {
		"desc": "font-synthesis CSS 属性控制浏览器可以合成（synthesize）哪些缺失的字体，粗体或斜体。 大多数标准西方字体包含斜体和粗体变体，但许多新颖（novelty）的字体不包括这些。用于中文、日文、韩文和其他语标文字（logographic script）的字体往往不含这些变体，同时，从默认字体中生成、合成这些变体可能会妨碍文本的易读性。在这些情况下，可能最好关闭浏览器默认的 font-synthesis 字体合成特性。初始值weight style适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "<em class=\"syn\">Synthesize me! 站直。</em>\n<br/>\n<em class=\"no-syn\">Don't synthesize me! 站直。</em>\n",
		"initial value": "weight style",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-synthesis"
	},
	"font-variant": {
		"desc": "font-variant 属性是font-variant-caps, font-variant-numeric, font-variant-alternates, font-variant-ligatures, font-variant-east-asian (en-US)等属性的简写。你也可以使用简写 font 设定font-variant在 CSS Level 2 (Revision 1) 中的值（即normal 或 small-caps）。",
		"grammar": "font-variant: small-caps;\nfont-variant: common-ligatures small-caps;\n\n/* Global values */\nfont-variant: inherit;\nfont-variant: initial;\nfont-variant: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant"
	},
	"font-variant-alternates": {
		"desc": "font-variant-alternates CSS 属性控制备用字体的使用。这些替代字体可以通过@font-feature-values中定义的替代名称来引用。/* Keyword values */font-variant-alternates: normal;font-variant-alternates: historical-forms; /* Functional notation values */font-variant-alternates: stylistic(user-defined-ident);font-variant-alternates: styleset(user-defined-ident);font-variant-alternates: character-variant(user-defined-ident);font-variant-alternates: swash(user-defined-ident);font-variant-alternates: ornaments(user-defined-ident);font-variant-alternates: annotation(user-defined-ident);font-variant-alternates: swash(ident1) annotation(ident2); /* Global values */font-variant-alternates: initial;font-variant-alternates: inherit;font-variant-alternates: unset; 在 @font-feature-values 规则中可以定义替代字体的函数 (stylistic, styleset, character-variant, swash, ornament 或 annotation), 将名称与 OpenType 参数相关联。此属性允许样式表中使用那些易于理解的名称 (定义于 @font-feature-values)。",
		"grammar": "/* Keyword values */\nfont-variant-alternates: normal;\nfont-variant-alternates: historical-forms;\n\n/* Functional notation values */\nfont-variant-alternates: stylistic(user-defined-ident);\nfont-variant-alternates: styleset(user-defined-ident);\nfont-variant-alternates: character-variant(user-defined-ident);\nfont-variant-alternates: swash(user-defined-ident);\nfont-variant-alternates: ornaments(user-defined-ident);\nfont-variant-alternates: annotation(user-defined-ident);\nfont-variant-alternates: swash(ident1) annotation(ident2);\n\n/* Global values */\nfont-variant-alternates: initial;\nfont-variant-alternates: inherit;\nfont-variant-alternates: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-alternates"
	},
	"font-variant-caps": {
		"desc": "CSS属性 font-variant-caps 使您可以控制大写字母特殊字符的使用。 如果项目的字体库中包含不同大小的大写字母特殊字符，该属性将选择其中最接近指定大小的字符。例如，如果字体中没有“特小”(petite) 型大写字母，该字符将会被以“小”(small) 型大写字母进行渲染。如果这些字符均不存在，浏览器将用默认大写字符集进行尺寸加工。字体库中有时会包含无大小写的特殊字符（例如标点符号）的不同写法来适应在文本中临近的大写字母。但是，小型大写字母永远不会被用来加工无大小写的字符。",
		"grammar": "/* Keyword values */\nfont-variant-caps: normal;\nfont-variant-caps: small-caps;\nfont-variant-caps: all-small-caps;\nfont-variant-caps: petite-caps;\nfont-variant-caps: all-petite-caps;\nfont-variant-caps: unicase;\nfont-variant-caps: titling-caps;\n\n/* Global values */\nfont-variant-caps: inherit;\nfont-variant-caps: initial;\nfont-variant-caps: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-caps"
	},
	"font-variant-east-asian (en-US)": {
		"desc": "The font-variant-east-asian CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.font-variant-east-asian: normal;font-variant-east-asian: ruby;font-variant-east-asian: jis78; /* <east-asian-variant-values> */font-variant-east-asian: jis83; /* <east-asian-variant-values> */font-variant-east-asian: jis90; /* <east-asian-variant-values> */font-variant-east-asian: jis04; /* <east-asian-variant-values> */font-variant-east-asian: simplified; /* <east-asian-variant-values> */font-variant-east-asian: traditional; /* <east-asian-variant-values> */font-variant-east-asian: full-width; /* <east-asian-width-values> */font-variant-east-asian: proportional-width; /* <east-asian-width-values> */font-variant-east-asian: ruby full-width jis83; /* Global values */font-variant-east-asian: inherit;font-variant-east-asian: initial;font-variant-east-asian: revert;font-variant-east-asian: revert-layer;font-variant-east-asian: unset;",
		"grammar": "font-variant-east-asian: normal;\nfont-variant-east-asian: ruby;\nfont-variant-east-asian: jis78;              /* <east-asian-variant-values> */\nfont-variant-east-asian: jis83;              /* <east-asian-variant-values> */\nfont-variant-east-asian: jis90;              /* <east-asian-variant-values> */\nfont-variant-east-asian: jis04;              /* <east-asian-variant-values> */\nfont-variant-east-asian: simplified;         /* <east-asian-variant-values> */\nfont-variant-east-asian: traditional;        /* <east-asian-variant-values> */\nfont-variant-east-asian: full-width;         /* <east-asian-width-values> */\nfont-variant-east-asian: proportional-width; /* <east-asian-width-values> */\nfont-variant-east-asian: ruby full-width jis83;\n\n/* Global values */\nfont-variant-east-asian: inherit;\nfont-variant-east-asian: initial;\nfont-variant-east-asian: revert;\nfont-variant-east-asian: revert-layer;\nfont-variant-east-asian: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-east-asian (en-US)"
	},
	"font-variant-ligatures": {
		"desc": "font-variant-ligatures 属性控制着其所应用元素文本的 ligatures 与 contextual forms 。 会使文字最终的表现形式更加统一。",
		"grammar": "/* Keyword values */\nfont-variant-ligatures: normal;\nfont-variant-ligatures: none;\nfont-variant-ligatures: common-ligatures;           /* <common-lig-values> */\nfont-variant-ligatures: no-common-ligatures;        /* <common-lig-values> */\nfont-variant-ligatures: discretionary-ligatures;    /* <discretionary-lig-values> */\nfont-variant-ligatures: no-discretionary-ligatures; /* <discretionary-lig-values> */\nfont-variant-ligatures: historical-ligatures;       /* <historical-lig-values> */\nfont-variant-ligatures: no-historical-ligatures;    /* <historical-lig-values> */\nfont-variant-ligatures: contextual;                 /* <contextual-alt-values> */\nfont-variant-ligatures: no-contextual;              /* <contextual-alt-values> */\n\n/* Global values */\nfont-variant-ligatures: inherit;\nfont-variant-ligatures: initial;\nfont-variant-ligatures: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-ligatures"
	},
	"font-variant-numeric": {
		"desc": "font-variant-numeric CSS 属性控制数字，分数和序号标记的替代字形的使用。",
		"grammar": "font-variant-numeric: normal;\nfont-variant-numeric: ordinal;\nfont-variant-numeric: slashed-zero;\nfont-variant-numeric: lining-nums;         /* <numeric-figure-values> */\nfont-variant-numeric: oldstyle-nums;       /* <numeric-figure-values> */\nfont-variant-numeric: proportional-nums;   /* <numeric-spacing-values> */\nfont-variant-numeric: tabular-nums;        /* <numeric-spacing-values> */\nfont-variant-numeric: diagonal-fractions;  /* <numeric-fraction-values> */\nfont-variant-numeric: stacked-fractions;   /* <numeric-fraction-values> */\nfont-variant-numeric: oldstyle-nums stacked-fractions;\n\n/* Global values */\nfont-variant-numeric: inherit;\nfont-variant-numeric: initial;\nfont-variant-numeric: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-numeric"
	},
	"font-variant-position": {
		"desc": "The font-variant-position CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.The glyphs are positioned relative to the baseline of the font, which remains unchanged. These glyphs are typically used in <sub> and <sup> elements./* Keyword values */font-variant-position: normal;font-variant-position: sub;font-variant-position: super; /* Global values */font-variant-position: inherit;font-variant-position: initial;font-variant-position: unset; When the usage of these alternate glyphs is activated, if one character in the run doesn't have such a typographically-enhanced glyph, the whole set of characters of the run is rendered using a fallback method, synthesizing these glyphs.These alternate glyphs share the same em-box and the same baseline as the rest of the font. They are merely graphically enhanced, and have no effect on the line-height and other box characteristics.初始值normal适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nfont-variant-position: normal;\nfont-variant-position: sub;\nfont-variant-position: super;\n\n/* Global values */\nfont-variant-position: inherit;\nfont-variant-position: initial;\nfont-variant-position: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variant-position"
	},
	"font-variation-settings": {
		"desc": "font-variation-settings CSS 属性提供了对 variable font 特征的低级控制，通过指定要更改的特征的四个字母轴名称及其值。 Note: This property is a low-level mechanism designed to set variable font features where no other way to enable or access those features exist. You should only use it when no basic properties exist to set those features (e.g. font-weight, font-style).Note: font characteristics set using font-variation-settings will always override those set using the corresponding basic font properties, e.g. font-weight, no matter where they appear in the cascade. In some browsers, this is currently only true when the @font-face declaration includes a font-weight range.",
		"grammar": "/* Use the default settings */\nfont-variation-settings: normal;\n\n/* Set values for variable font axis names */\nfont-variation-settings: \"XHGT\" 0.7;\n\n/* Global values */\nfont-variation-settings: inherit;\nfont-variation-settings: initial;\nfont-variation-settings: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-variation-settings"
	},
	"font-weight": {
		"desc": "",
		"grammar": "/* Keyword values */\nfont-weight: normal;\nfont-weight: bold;\n\n/* Keyword values relative to the parent */\nfont-weight: lighter;\nfont-weight: bolder;\n\n/* Numeric keyword values */\nfont-weight: 1\nfont-weight: 100;\nfont-weight: 100.6;\nfont-weight: 123;\nfont-weight: 200;\nfont-weight: 300;\nfont-weight: 321;\nfont-weight: 400;\nfont-weight: 500;\nfont-weight: 600;\nfont-weight: 700;\nfont-weight: 800;\nfont-weight: 900;\nfont-weight: 1000;\n\n/* Global values */\nfont-weight: inherit;\nfont-weight: initial;\nfont-weight: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "font-weight"
	},
	"forced-color-adjust (en-US)": {
		"desc": "The forced-color-adjust CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.",
		"grammar": "forced-color-adjust: auto;\nforced-color-adjust: none;\n\n/* Global values */\nforced-color-adjust: inherit;\nforced-color-adjust: initial;\nforced-color-adjust: revert;\nforced-color-adjust: revert-layer;\nforced-color-adjust: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements and text",
		"name": "forced-color-adjust (en-US)"
	},
	"gap (grid-gap)": {
		"desc": "CSS gap 属性是用来设置网格行与列之间的间隙（gutters），该属性是 row-gap 和 column-gap 的简写形式。",
		"grammar": "/* One <length> value */\ngap: 20px;\ngap: 1em;\ngap: 3vmin;\ngap: 0.5cm;\n\n/* One <percentage> value */\ngap: 16%;\ngap: 100%;\n\n/* Two <length> values */\ngap: 20px 10px;\ngap: 1em 0.5em;\ngap: 3vmin 2vmax;\ngap: 0.5cm 2mm;\n\n/* One or two <percentage> values */\ngap: 16% 100%;\ngap: 21px 82%;\n\n/* calc() values */\ngap: calc(10% + 20px);\ngap: calc(20px + 10%) calc(10% - 5px);\n\n/* Global values */\ngap: inherit;\ngap: initial;\ngap: revert;\ngap: revert-layer;\ngap: unset;\n",
		"initial value": "as each of the properties of the shorthand:row-gap: normalcolumn-gap: normal",
		"inherit": "否",
		"applicable elements": "multi-column elements, flex containers, grid containers",
		"name": "gap (grid-gap)"
	},
	"grid": {
		"desc": "grid 是一个 CSS 简写属性，可以用来设置以下属性： 显式网格属性 grid-template-rows、grid-template-columns 和 grid-template-areas， 隐式网格属性 grid-auto-rows、grid-auto-columns 和 grid-auto-flow， 间距属性 grid-column-gap (en-US) 和 grid-row-gap (en-US)。 注意：您仅可在一个 grid 属性中声明显式或隐式网格。与其他简写属性同样，若有次级属性未被声明，其将使用初始值。另外，尽管此简写声明无法设置网格的槽（gutter），槽会被该声明重置。",
		"grammar": "/* <'grid-template'> values */\ngrid: none;\ngrid: \"a\" 100px \"b\" 1fr;\ngrid: [linename1] \"a\" 100px [linename2];\ngrid: \"a\" 200px \"b\" min-content;\ngrid: \"a\" minmax(100px, max-content) \"b\" 20%;\ngrid: 100px / 200px;\ngrid: minmax(400px, min-content) / repeat(auto-fill, 50px);\n\n/* <'grid-template-rows'> /\n   [ auto-flow && dense? ] <'grid-auto-columns'>? values */\ngrid: 200px / auto-flow;\ngrid: 30% / auto-flow dense;\ngrid: repeat(3, [line1 line2 line3] 200px) / auto-flow 300px;\ngrid: [line1] minmax(20em, max-content) / auto-flow dense 40%;\n\n/* [ auto-flow && dense? ] <'grid-auto-rows'>? /\n   <'grid-template-columns'> values */\ngrid: auto-flow / 200px;\ngrid: auto-flow dense / 30%;\ngrid: auto-flow 300px / repeat(3, [line1 line2 line3] 200px);\ngrid: auto-flow dense 40% / [line1] minmax(20em, max-content);\n\n/* Global values */\ngrid: inherit;\ngrid: initial;\ngrid: unset;\n",
		"name": "grid"
	},
	"grid-area": {
		"desc": "CSS 属性 grid-area 是一种对于 grid-row-start (en-US)、grid-column-start (en-US)、grid-row-end (en-US) 和 grid-column-end (en-US) 的简写，通过基线（line），跨度（span）或没有（自动）的网格放置在 grid row 中指定一个网格项的大小和位置，继而确定 grid area 的边界。/* Keyword values */grid-area: auto;grid-area: auto / auto;grid-area: auto / auto / auto;grid-area: auto / auto / auto / auto; /* <custom-ident> values */grid-area: some-grid-area;grid-area: some-grid-area / another-grid-area; /* <integer> && <custom-ident>? values */grid-area: some-grid-area 4;grid-area: some-grid-area 4 / 2 another-grid-area; /* span && [ <integer> || <custom-ident> ] values */grid-area: span 3;grid-area: span 3 / span some-grid-area;grid-area: 2 span / another-grid-area span; /* Global values */grid-area: inherit;grid-area: initial;grid-area: unset; 如果指定了 4 个 <grid-line> 的值，grid-row-start 会被设为第一个值，grid-column-start 为第二个值， grid-row-end 为第三个值，grid-column-end 为第四个值。当 grid-column-end 被忽略时，若 grid-column-start 为一 <custom-ident>（自定义关键字数据类型）， grid-column-end 则为该 <custom-ident>；否则为 auto。当 grid-row-end 被忽略时，若 grid-row-start 为一 <custom-ident>，grid-row-end 则为该 <custom-ident>；否则为 auto。当 grid-column-start 被忽略时，若 grid-row-start 为一 <custom-ident>，则所有四项普通写法的属性值均为该值。否则为 auto。网格面的属性亦可设为一 <custom-ident> 作为其名称，然后可通过 grid-template-areas 放置。",
		"grammar": "/* Keyword values */\ngrid-area: auto;\ngrid-area: auto / auto;\ngrid-area: auto / auto / auto;\ngrid-area: auto / auto / auto / auto;\n\n/* <custom-ident> values */\ngrid-area: some-grid-area;\ngrid-area: some-grid-area / another-grid-area;\n\n/* <integer> && <custom-ident>? values */\ngrid-area: some-grid-area 4;\ngrid-area: some-grid-area 4 / 2 another-grid-area;\n\n/* span && [ <integer> || <custom-ident> ] values */\ngrid-area: span 3;\ngrid-area: span 3 / span some-grid-area;\ngrid-area: 2 span / another-grid-area span;\n\n/* Global values */\ngrid-area: inherit;\ngrid-area: initial;\ngrid-area: unset;\n",
		"name": "grid-area"
	},
	"grid-auto-columns": {
		"desc": "CSS 属性 grid-auto-columns 指定了隐式创建的网格纵向轨道（track）的宽度。 如果一个表格项目被定位在没有使用 grid-template-columns 显式指定尺寸的列中，隐式的 grid 轨道就会被创建出来支撑它。显式地定位到超出范围的列中，或者通过自动布局算法创建额外的列，就会发生上述情况。",
		"grammar": "/* 以下是不同类型的属性值示例 */\n/* Keyword values */\ngrid-auto-columns: min-content;\ngrid-auto-columns: max-content;\ngrid-auto-columns: auto;\n\n/* <length> values */\ngrid-auto-columns: 100px;\ngrid-auto-columns: 20cm;\ngrid-auto-columns: 50vmax;\n\n/* <percentage> values */\ngrid-auto-columns: 10%;\ngrid-auto-columns: 33.3%;\n\n/* <flex> values */\ngrid-auto-columns: 0.5fr;\ngrid-auto-columns: 3fr;\n\n/* minmax() values */\ngrid-auto-columns: minmax(100px, auto);\ngrid-auto-columns: minmax(max-content, 2fr);\ngrid-auto-columns: minmax(20%, 80vmax);\n\n/* fit-content() values */\ngrid-auto-columns: fit-content(400px);\ngrid-auto-columns: fit-content(5cm);\ngrid-auto-columns: fit-content(20%);\n\n/* multiple track-size values */\ngrid-auto-columns: min-content max-content auto;\ngrid-auto-columns: 100px 150px 390px;\ngrid-auto-columns: 10% 33.3%;\ngrid-auto-columns: 0.5fr 3fr 1fr;\ngrid-auto-columns: minmax(100px, auto) minmax(max-content, 2fr) minmax(20%, 80vmax);\ngrid-auto-columns: 100px minmax(100px, auto) 10% 0.5fr fit-content(400px);\n\n/* Global values */\ngrid-auto-columns: inherit;\ngrid-auto-columns: initial;\ngrid-auto-columns: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-auto-columns"
	},
	"grid-auto-flow": {
		"desc": "grid-auto-flow 属性控制着自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列。",
		"grammar": "/* Keyword values */\ngrid-auto-flow: row;\ngrid-auto-flow: column;\ngrid-auto-flow: dense;\ngrid-auto-flow: row dense;\ngrid-auto-flow: column dense;\n\n/* Global values */\ngrid-auto-flow: inherit;\ngrid-auto-flow: initial;\ngrid-auto-flow: unset;",
		"initial value": "row",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-auto-flow"
	},
	"grid-auto-rows": {
		"desc": "CSS 属性 grid-auto-rows 用于指定隐式创建的行轨道大小。 如果定位到某行中的网格元素没有使用 grid-template-rows来指定大小，则会隐式创建grid 轨道来保存它。这可能在显示定位到超出范围的行，或者由自动放置算法创建额外的行时发生。",
		"grammar": "/* Keyword values */\ngrid-auto-rows: min-content;\ngrid-auto-rows: max-content;\ngrid-auto-rows: auto;\n\n/* <length> values */\ngrid-auto-rows: 100px;\ngrid-auto-rows: 20cm;\ngrid-auto-rows: 50vmax;\n\n/* <percentage> values */\ngrid-auto-rows: 10%;\ngrid-auto-rows: 33.3%;\n\n/* <flex> values */\ngrid-auto-rows: 0.5fr;\ngrid-auto-rows: 3fr;\n\n/* minmax() values */\ngrid-auto-rows: minmax(100px, auto);\ngrid-auto-rows: minmax(max-content, 2fr);\ngrid-auto-rows: minmax(20%, 80vmax);\n\n/* multiple track-size values */\ngrid-auto-rows: min-content max-content auto;\ngrid-auto-rows: 100px 150px 390px;\ngrid-auto-rows: 10% 33.3%;\ngrid-auto-rows: 0.5fr 3fr 1fr;\ngrid-auto-rows: minmax(100px, auto) minmax(max-content, 2fr) minmax(20%, 80vmax);\ngrid-auto-rows: 100px minmax(100px, auto) 10% 0.5fr fit-content(400px);\n\n/* Global values */\ngrid-auto-rows: inherit;\ngrid-auto-rows: initial;\ngrid-auto-rows: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-auto-rows"
	},
	"grid-column": {
		"desc": "grid-column CSS 属性是 grid-column-start (en-US) 和 grid-column-end (en-US) 的简写属性，用于指定网格项目的大小和位置{ 通过为它的网格位置贡献线条，跨度或不添加任何内容（自动），从而指定其 grid area。",
		"grammar": "<div id=\"grid\">\n  <div id=\"item1\"></div>\n  <div id=\"item2\"></div>\n  <div id=\"item3\"></div>\n</div>",
		"initial value": "as each of the properties of the shorthand:grid-column-start (en-US): autogrid-column-end (en-US): auto",
		"inherit": "否",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-column"
	},
	"grid-column-end (en-US)": {
		"desc": "The grid-column-end CSS property specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.",
		"grammar": "/* Keyword value */\ngrid-column-end: auto;\n\n/* <custom-ident> values */\ngrid-column-end: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-column-end: 2;\ngrid-column-end: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-column-end: span 3;\ngrid-column-end: span somegridarea;\ngrid-column-end: 5 somegridarea span;\n\n/* Global values */\ngrid-column-end: inherit;\ngrid-column-end: initial;\ngrid-column-end: revert;\ngrid-column-end: revert-layer;\ngrid-column-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-column-end (en-US)"
	},
	"grid-column-start (en-US)": {
		"desc": "The grid-column-start CSS property specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.",
		"grammar": "/* Keyword value */\ngrid-column-start: auto;\n\n/* <custom-ident> value */\ngrid-column-start: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-column-start: 2;\ngrid-column-start: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-column-start: span 3;\ngrid-column-start: span somegridarea;\ngrid-column-start: span somegridarea 5;\n\n/* Global values */\ngrid-column-start: inherit;\ngrid-column-start: initial;\ngrid-column-start: revert;\ngrid-column-start: revert-layer;\ngrid-column-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-column-start (en-US)"
	},
	"grid-row": {
		"desc": "grid-row 属性是一种 grid-row-start (en-US) 和 grid-row-end (en-US) 的缩写（shorthand）形式，它定义了网格单元与网格行（row）相关的尺寸和位置，可以通过在网格布局中的基线（line），跨度（span），或者什么也不做（自动），从而指定 grid area 的行起始与行结束。 如果指定了两个 <grid-line> 值，那么斜杠号前的值就被指定为 grid-row-start，斜杠后面的值就被指定为 grid-row-end 的值。",
		"grammar": "/* 不同类型的属性值 */\n/* Keyword values */\ngrid-row: auto;\ngrid-row: auto / auto;\n\n/* <custom-ident> values */\ngrid-row: somegridarea;\ngrid-row: somegridarea / someothergridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-row: somegridarea 4;\ngrid-row: 4 somegridarea / 6;\n\n/* span + <integer> + <custom-ident> values */\ngrid-row: span 3;\ngrid-row: span somegridarea;\ngrid-row: 5 somegridarea span;\ngrid-row: span 3 / 6;\ngrid-row: span somegridarea / span someothergridarea;\ngrid-row: 5 somegridarea span / 2 span;\n\n/* Global values */\ngrid-row: inherit;\ngrid-row: initial;\ngrid-row: unset;\n",
		"initial value": "as each of the properties of the shorthand:grid-row-start (en-US): autogrid-row-end (en-US): auto",
		"inherit": "否",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-row"
	},
	"grid-row-end (en-US)": {
		"desc": "The grid-row-end CSS property specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.",
		"grammar": "/* Keyword value */\ngrid-row-end: auto;\n\n/* <custom-ident> values */\ngrid-row-end: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-row-end: 2;\ngrid-row-end: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-row-end: span 3;\ngrid-row-end: span somegridarea;\ngrid-row-end: 5 somegridarea span;\n\n/* Global values */\ngrid-row-end: inherit;\ngrid-row-end: initial;\ngrid-row-end: revert;\ngrid-row-end: revert-layer;\ngrid-row-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-row-end (en-US)"
	},
	"grid-row-start (en-US)": {
		"desc": "The grid-row-start CSS property specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.",
		"grammar": "/* Keyword value */\ngrid-row-start: auto;\n\n/* <custom-ident> values */\ngrid-row-start: somegridarea;\n\n/* <integer> + <custom-ident> values */\ngrid-row-start: 2;\ngrid-row-start: somegridarea 4;\n\n/* span + <integer> + <custom-ident> values */\ngrid-row-start: span 3;\ngrid-row-start: span somegridarea;\ngrid-row-start: 5 somegridarea span;\n\n/* Global values */\ngrid-row-start: inherit;\ngrid-row-start: initial;\ngrid-row-start: revert;\ngrid-row-start: revert-layer;\ngrid-row-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "grid items and absolutely-positioned boxes whose containing block is a grid container",
		"name": "grid-row-start (en-US)"
	},
	"grid-template": {
		"desc": "grid-template，CSS 属性简写，用以定义网格中行、列与分区。",
		"grammar": "/* 值为关键词 */\ngrid-template: none;\n\n/* 为 grid-template-rows / grid-template-columns */\ngrid-template: 100px 1fr / 50px 1fr;\ngrid-template: auto 1fr / auto 1fr auto;\ngrid-template: [linename] 100px / [columnname1] 30% [columnname2] 70%;\ngrid-template: fit-content(100px) / fit-content(40%);\n\n/* 为 grid-template-areas grid-template-rows / grid-template-column */\ngrid-template: \"a a a\"\n               \"b b b\";\ngrid-template: \"a a a\" 20%\n               \"b b b\" auto;\ngrid-template: [header-top] \"a a a\"     [header-bottom]\n                 [main-top] \"b b b\" 1fr [main-bottom]\n                            / auto 1fr auto;\n\n/* 为全局值 */\ngrid-template: inherit;\ngrid-template: initial;\ngrid-template: unset;\n",
		"initial value": "as each of the properties of the shorthand:grid-template-columns: nonegrid-template-rows: nonegrid-template-areas: none",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-template"
	},
	"grid-template-areas": {
		"desc": "grid-template-areas CSS 属性是网格区域 grid areas 在 CSS 中的特定命名。 网格区块 (grid areas) 和网格项 (grid item) 沒有关联，但是它们可以和一些网格定位属性 (grid-placement properties) 关联起来，比如grid-row-start (en-US)， grid-row-end (en-US)， grid-column-start (en-US)和grid-column-end (en-US)；也可以和一些速记 (shorthands) 属性关联起来，比如grid-row，grid-column 和 grid-area。",
		"grammar": "/* Keyword value */\ngrid-template-areas: none;\n\n/* <string> values */\ngrid-template-areas: \"a b\"; /* 一行 两列 */\ngrid-template-areas: \"a b b\"\n                     \"a c d\"; /* 两行 三列 */\n\n/* Global values */\ngrid-template-areas: inherit; /* 继承 */\ngrid-template-areas: initial; /* 默认值 */\ngrid-template-areas: unset; /* 未设置 */\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-template-areas"
	},
	"grid-template-columns": {
		"desc": "grid-template-columns 该属性是基于 网格列. 的维度，去定义网格线的名称和网格轨道的尺寸大小。",
		"grammar": "/* Keyword value */\ngrid-template-columns: none;\n\n/* <track-list> values */\ngrid-template-columns: 100px 1fr;\ngrid-template-columns: [linename] 100px;\ngrid-template-columns: [linename1] 100px [linename2 linename3];\ngrid-template-columns: minmax(100px, 1fr);\ngrid-template-columns: fit-content(40%);\ngrid-template-columns: repeat(3, 200px);\n\n/* <auto-track-list> values */\ngrid-template-columns: 200px repeat(auto-fill, 100px) 300px;\ngrid-template-columns: minmax(100px, max-content)\n                       repeat(auto-fill, 200px) 20%;\ngrid-template-columns: [linename1] 100px [linename2]\n                       repeat(auto-fit, [linename3 linename4] 300px)\n                       100px;\ngrid-template-columns: [linename1 linename2] 100px\n                       repeat(auto-fit, [linename1] 300px) [linename3];\n\n/* Global values */\ngrid-template-columns: inherit;\ngrid-template-columns: initial;\ngrid-template-columns: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-template-columns"
	},
	"grid-template-rows": {
		"desc": "grid-template-rows 该属性是基于 网格行 的维度，去定义网格线的名称和网格轨道的尺寸大小。",
		"grammar": "/* Keyword value */\ngrid-template-rows: none;\n\n/* <track-list> values */\ngrid-template-rows: 100px 1fr;\ngrid-template-rows: [linename] 100px;\ngrid-template-rows: [linename1] 100px [linename2 linename3];\ngrid-template-rows: minmax(100px, 1fr);\ngrid-template-rows: fit-content(40%);\ngrid-template-rows: repeat(3, 200px);\n\n/* <auto-track-list> values */\ngrid-template-rows: 200px repeat(auto-fill, 100px) 300px;\ngrid-template-rows: minmax(100px, max-content)\n                       repeat(auto-fill, 200px) 20%;\ngrid-template-rows: [linename1] 100px [linename2]\n                       repeat(auto-fit, [linename3 linename4] 300px)\n                       100px;\ngrid-template-rows: [linename1 linename2] 100px\n                       repeat(auto-fit, [linename1] 300px) [linename3];\n\n/* Global values */\ngrid-template-rows: inherit;\ngrid-template-rows: initial;\ngrid-template-rows: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "grid containers",
		"name": "grid-template-rows"
	},
	"hanging-punctuation": {
		"desc": "hanging-punctuation CSS 属性指定了标点符号应该放在文本句子的开头还是结尾。悬挂标点符号可能被放在线框外。/* Keyword values */hanging-punctuation: none;hanging-punctuation: first;hanging-punctuation: last;hanging-punctuation: force-end;hanging-punctuation: allow-end; /* Two keywords */hanging-punctuation: first force-end;hanging-punctuation: first allow-end;hanging-punctuation: first last;hanging-punctuation: last force-end;hanging-punctuation: last allow-end; /* Three keywords */hanging-punctuation: first force-end last;hanging-punctuation: first allow-end last; /* Global values */hanging-punctuation: inherit;hanging-punctuation: initial;hanging-punctuation: unset; 初始值none适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nhanging-punctuation: none;\nhanging-punctuation: first;\nhanging-punctuation: last;\nhanging-punctuation: force-end;\nhanging-punctuation: allow-end;\n\n/* Two keywords */\nhanging-punctuation: first force-end;\nhanging-punctuation: first allow-end;\nhanging-punctuation: first last;\nhanging-punctuation: last force-end;\nhanging-punctuation: last allow-end;\n\n/* Three keywords */\nhanging-punctuation: first force-end last;\nhanging-punctuation: first allow-end last;\n\n/* Global values */\nhanging-punctuation: inherit;\nhanging-punctuation: initial;\nhanging-punctuation: unset;\n",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "hanging-punctuation"
	},
	"height": {
		"desc": "height CSS 属性指定了一个元素的高度。默认情况下，这个属性决定的是内容区（ content area）的高度，但是，如果将 box-sizing 设置为 border-box , 这个属性决定的将是边框区域（border area）的高度。 min-height 和 max-height 属性会覆盖 height。",
		"grammar": "/* Keyword value */\nheight: auto;\n\n/* <length> values */\nheight: 120px;\nheight: 10em;\n\n/* <percentage> value */\nheight: 75%;\n\n/* Global values */\nheight: inherit;\nheight: initial;\nheight: unset;",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
		"name": "height"
	},
	"hyphenate-character (en-US)": {
		"desc": "The hyphenate-character CSS property sets the character (or string) used at the end of a line before a hyphenation break.Both automatic and soft hyphens are displayed according to the specified hyphenate-character value.",
		"grammar": "hyphenate-character: <string>;\nhyphenate-character: auto;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "hyphenate-character (en-US)"
	},
	"hyphens": {
		"desc": "",
		"grammar": "hyphens: none;\nhyphens: manual;\nhyphens: auto;\n\n/* Global values */\nhyphens: inherit;\nhyphens: initial;\nhyphens: unset;\n",
		"initial value": "manual",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "hyphens"
	},
	"image-rendering": {
		"desc": "CSS 属性 image-rendering 用于设置图像缩放算法。它适用于元素本身，适用于元素其他属性中的图像，也应用于子元素。The user agent will scale an image when the page author specifies dimensions other than its natural size. Scaling may also occur due to user interaction (zooming). 举个例子，如果有一张尺寸为 100×100px 的图片，但作者有意将尺寸设置为 200×200px（或50×50px），然后，图片便会根据 image-rendering 指定的算法，缩小或放大到新尺寸。此属性对于未缩放的图像没有影响。 Note: The Canvas API can provide a fallback solution for crisp-edges through manual image data manipulation.",
		"grammar": "/* 专有属性值 */\nimage-rendering: auto;\nimage-rendering: crisp-edges;\nimage-rendering: pixelated;\n\n/* 全局属性值 */\nimage-rendering: inherit;\nimage-rendering: initial;\nimage-rendering: unset;",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "image-rendering"
	},
	"image-resolution (en-US)": {
		"desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The image-resolution CSS property specifies the intrinsic resolution of all raster images used in or on the element. It affects content images such as replaced elements and generated content, and decorative images such as background-image images.The image resolution is defined as the number of image pixels per unit length, e.g., pixels per inch. By default, CSS assumes a resolution of one image pixel per CSS px unit; however, the image-resolution property allows a different resolution to be specified.",
		"grammar": "image-resolution: from-image;\nimage-resolution: 300dpi;\nimage-resolution: from-image 300dpi;\nimage-resolution: 300dpi snap;\n\n/* Global values */\nimage-resolution: inherit;\nimage-resolution: initial;\nimage-resolution: revert;\nimage-resolution: revert-layer;\nimage-resolution: unset;\n",
		"initial value": "1dppx",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "image-resolution (en-US)"
	},
	"ime-mode (en-US)": {
		"desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The ime-mode CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete./* Keyword values */ime-mode: auto;ime-mode: normal;ime-mode: active;ime-mode: inactive;ime-mode: disabled; /* Global values */ime-mode: inherit;ime-mode: initial;ime-mode: revert;ime-mode: revert-layer;ime-mode: unset; The ime-mode property is only partially and inconsistently implemented in browsers. It was introduced by Microsoft with Internet Explorer 5 as a proprietary extension. Note: In general, it's not appropriate for a public web site to change the IME mode. This property should only be used for private web applications or to undo the property if it was previously set by legacy code.",
		"grammar": "/* Keyword values */\nime-mode: auto;\nime-mode: normal;\nime-mode: active;\nime-mode: inactive;\nime-mode: disabled;\n\n/* Global values */\nime-mode: inherit;\nime-mode: initial;\nime-mode: revert;\nime-mode: revert-layer;\nime-mode: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "text fields",
		"name": "ime-mode (en-US)"
	},
	"initial-letter (en-US)": {
		"desc": "The initial-letter CSS property sets styling for dropped, raised, and sunken initial letters./* Keyword values */initial-letter: normal; /* Numeric values */initial-letter: 1.5; /* Initial letter occupies 1.5 lines */initial-letter: 3.0; /* Initial letter occupies 3 lines */initial-letter: 3.0 2; /* Initial letter occupies 3 lines and sinks 2 lines */ /* Global values */initial-letter: inherit;initial-letter: initial;initial-letter: revert;initial-letter: revert-layer;initial-letter: unset;",
		"grammar": "/* Keyword values */\ninitial-letter: normal;\n\n/* Numeric values */\ninitial-letter: 1.5;    /* Initial letter occupies 1.5 lines */\ninitial-letter: 3.0;    /* Initial letter occupies 3 lines */\ninitial-letter: 3.0 2;  /* Initial letter occupies 3 lines and\n                           sinks 2 lines */\n\n/* Global values */\ninitial-letter: inherit;\ninitial-letter: initial;\ninitial-letter: revert;\ninitial-letter: revert-layer;\ninitial-letter: unset;\n",
		"initial value": "normal",
		"inherit": "no",
		"applicable elements": "::first-letter pseudo-elements and inline-level first child of a block container",
		"name": "initial-letter (en-US)"
	},
	"initial-letter-align (en-US)": {
		"desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The initial-letter-align CSS property specifies the alignment of initial letters within a paragraph./* Keyword values */initial-letter-align: auto;initial-letter-align: alphabetic;initial-letter-align: hanging;initial-letter-align: ideographic; /* Global values */initial-letter-align: inherit;initial-letter-align: initial;initial-letter-align: revert;initial-letter-align: revert-layer;initial-letter-align: unset;",
		"grammar": "/* Keyword values */\ninitial-letter-align: auto;\ninitial-letter-align: alphabetic;\ninitial-letter-align: hanging;\ninitial-letter-align: ideographic;\n\n/* Global values */\ninitial-letter-align: inherit;\ninitial-letter-align: initial;\ninitial-letter-align: revert;\ninitial-letter-align: revert-layer;\ninitial-letter-align: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "::first-letter pseudo-elements and inline-level first child of a block container",
		"name": "initial-letter-align (en-US)"
	},
	"inline-size": {
		"desc": "inline-size CSS 属性影响一个元素的width 或 height，以改变一个元素的盒模型的水平或垂直大小（是 width 还是 height 取决于该元素的writing-mode）。",
		"grammar": "/* <length> values */\ninline-size: 300px;\ninline-size: 25em;\n\n/* <percentage> values */\ninline-size: 75%;\n\n/* Keyword values */\ninline-size: max-content;\ninline-size: min-content;\ninline-size: fit-content(20em);\ninline-size: auto;\n\n/* Global values */\ninline-size: inherit;\ninline-size: initial;\ninline-size: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "same as width and height",
		"name": "inline-size"
	},
	"inset (en-US)": {
		"desc": "The inset CSS property is a shorthand that corresponds to the top, right, bottom, and/or left properties. It has the same multi-value syntax of the margin shorthand.",
		"grammar": "/* <length> values */\ninset: 10px; /* value applied to all edges */\ninset: 4px 8px; /* top/bottom left/right */\ninset: 5px 15px 10px; /* top left/right bottom */\ninset: 2.4em 3em 3em 3em; /* top right bottom left */\n\n/* <percentage>s of the width (left/right) or height (top/bottom) of the containing block */\ninset: 10% 5% 5% 5%;\n\n/* Keyword value */\ninset: auto;\n\n/* Global values */\ninset: inherit;\ninset: initial;\ninset: revert;\ninset: revert-layer;\ninset: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset (en-US)"
	},
	"inset-block (en-US)": {
		"desc": "The inset-block CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-block: 3px 10px;\ninset-block: 2.4em 3em;\ninset-block: 10px; /* value applied to start and end */\n\n/* <percentage>s of the width or height of the containing block */\ninset-block: 10% 5%;\n\n/* Keyword value */\ninset-block: auto;\n\n/* Global values */\ninset-block: inherit;\ninset-block: initial;\ninset-block: revert;\ninset-block: revert-layer;\ninset-block: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-block (en-US)"
	},
	"inset-block-end (en-US)": {
		"desc": "The inset-block-end CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-block-end: 3px;\ninset-block-end: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-block-end: 10%;\n\n/* Keyword value */\ninset-block-end: auto;\n\n/* Global values */\ninset-block-end: inherit;\ninset-block-end: initial;\ninset-block-end: revert;\ninset-block-end: revert-layer;\ninset-block-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-block-end (en-US)"
	},
	"inset-block-start (en-US)": {
		"desc": "The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-block-start: 3px;\ninset-block-start: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-block-start: 10%;\n\n/* Keyword value */\ninset-block-start: auto;\n\n/* Global values */\ninset-block-start: inherit;\ninset-block-start: initial;\ninset-block-start: revert;\ninset-block-start: revert-layer;\ninset-block-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-block-start (en-US)"
	},
	"inset-inline (en-US)": {
		"desc": "The inset-inline CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-inline: 3px 10px;\ninset-inline: 2.4em 3em;\ninset-inline: 10px; /* value applied to start and end */\n\n/* <percentage>s of the width or height of the containing block */\ninset-inline: 10% 5%;\n\n/* Keyword value */\ninset-inline: auto;\n\n/* Global values */\ninset-inline: inherit;\ninset-inline: initial;\ninset-inline: revert;\ninset-inline: revert-layer;\ninset-inline: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-inline (en-US)"
	},
	"inset-inline-end (en-US)": {
		"desc": "The inset-inline-end CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-inline-end: 3px;\ninset-inline-end: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-inline-end: 10%;\n\n/* Keyword value */\ninset-inline-end: auto;\n\n/* Global values */\ninset-inline-end: inherit;\ninset-inline-end: initial;\ninset-inline-end: revert;\ninset-inline-end: revert-layer;\ninset-inline-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-inline-end (en-US)"
	},
	"inset-inline-start (en-US)": {
		"desc": "The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\ninset-inline-start: 3px;\ninset-inline-start: 2.4em;\n\n/* <percentage>s of the width or height of the containing block */\ninset-inline-start: 10%;\n\n/* Keyword value */\ninset-inline-start: auto;\n\n/* Global values */\ninset-inline-start: inherit;\ninset-inline-start: initial;\ninset-inline-start: revert;\ninset-inline-start: revert-layer;\ninset-inline-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "positioned elements",
		"name": "inset-inline-start (en-US)"
	},
	"isolation": {
		"desc": "",
		"grammar": "<div id=\"b\" class=\"a\">\n  <div id=\"d\">\n    <div class=\"a c\">auto</div>\n  </div>\n  <div id=\"e\">\n    <div class=\"a c\">isolate</div>\n  </div>\n</div>\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.",
		"name": "isolation"
	},
	"justify-content": {
		"desc": "CSS justify-content 属性定义了浏览器之间，如何分配顺着弹性容器主轴 (或者网格行轴) 的元素之间及其周围的空间。/* Positional alignment */justify-content: center; /* 居中排列 */justify-content: start; /* Pack items from the start */justify-content: end; /* Pack items from the end */justify-content: flex-start; /* 从行首起始位置开始排列 */justify-content: flex-end; /* 从行尾位置开始排列 */justify-content: left; /* Pack items from the left */justify-content: right; /* Pack items from the right */ /* Baseline alignment */justify-content: baseline;justify-content: first baseline;justify-content: last baseline; /* Distributed alignment */justify-content: space-between; /* 均匀排列每个元素 首个元素放置于起点，末尾元素放置于终点 */justify-content: space-around; /* 均匀排列每个元素 每个元素周围分配相同的空间 */justify-content: space-evenly; /* 均匀排列每个元素 每个元素之间的间隔相等 */justify-content: stretch; /* 均匀排列每个元素 'auto'-sized 的元素会被拉伸以适应容器的大小 */ /* Overflow alignment */justify-content: safe center;justify-content: unsafe center; /* Global values */justify-content: inherit;justify-content: initial;justify-content: unset;当 length 属性和自动外边距属性（margin: auto）生效之后，对齐已经完成了。也就是说，如果存在至少一个弹性元素，而且这个元素的 flex-grow 属性不等于 0，那么对齐方式不会生效，就像没有多余空间的情况。 初始值normal适用元素flex containers是否是继承属性否计算值as specifiedAnimation typediscrete可以参考 使用 CSS 弹性框 (en-US)获取更多信息。",
		"grammar": "/* Positional alignment */\njustify-content: center;     /* 居中排列 */\njustify-content: start;      /* Pack items from the start */\njustify-content: end;        /* Pack items from the end */\njustify-content: flex-start; /* 从行首起始位置开始排列 */\njustify-content: flex-end;   /* 从行尾位置开始排列 */\njustify-content: left;       /* Pack items from the left */\njustify-content: right;      /* Pack items from the right */\n\n/* Baseline alignment */\njustify-content: baseline;\njustify-content: first baseline;\njustify-content: last baseline;\n\n/* Distributed alignment */\njustify-content: space-between;  /* 均匀排列每个元素\n                                   首个元素放置于起点，末尾元素放置于终点 */\njustify-content: space-around;  /* 均匀排列每个元素\n                                   每个元素周围分配相同的空间 */\njustify-content: space-evenly;  /* 均匀排列每个元素\n                                   每个元素之间的间隔相等 */\njustify-content: stretch;       /* 均匀排列每个元素\n                                   'auto'-sized 的元素会被拉伸以适应容器的大小 */\n\n/* Overflow alignment */\njustify-content: safe center;\njustify-content: unsafe center;\n\n/* Global values */\njustify-content: inherit;\njustify-content: initial;\njustify-content: unset;",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "flex containers",
		"name": "justify-content"
	},
	"justify-items": {
		"desc": "CSS 的 justify-items 属性为所有盒中的项目定义了默认的 justify-self ， 可以使这些项目以默认方式沿适当轴线对齐到每个盒子。 该属性的作用效果取决于我们使用的布局模式： 在块级布局中，会将其包含的项目在其行内轴上对齐；绝对定位的元素中，会将其包含的项目在其行内轴上对齐，同时考虑 top、left、bottom、right 的值；表格单元中，该属性被忽略（块级元素、绝对定位元素和表格布局中对齐的更多信息）；弹性盒子布局中，该属性被忽略（弹性盒子中对齐的更多信息）；栅格布局中，会将其栅格区域内的项目在其行内轴上对齐（栅格布局中对齐的更多信息）；",
		"grammar": "/* Basic keywords */\njustify-items: auto;\njustify-items: normal;\njustify-items: stretch;\n\n/* Positional alignment */\njustify-items: center;     /* Pack items around the center */\njustify-items: start;      /* Pack items from the start */\njustify-items: end;        /* Pack items from the end */\njustify-items: flex-start; /* Pack flex items from the start */\njustify-items: flex-end;   /* Pack flex items from the end */\njustify-items: self-start;\njustify-items: self-end;\njustify-items: left;       /* Pack items from the left */\njustify-items: right;      /* Pack items from the right */\n\n/* Baseline alignment */\njustify-items: baseline;\njustify-items: first baseline;\njustify-items: last baseline;\n\n/* Overflow alignment (for positional alignment only) */\njustify-items: safe center;\njustify-items: unsafe center;\n\n/* Legacy alignment */\njustify-items: legacy right;\njustify-items: legacy left;\njustify-items: legacy center;\n\n/* Global values */\njustify-items: inherit;\njustify-items: initial;\njustify-items: unset;\n",
		"initial value": "legacy",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "justify-items"
	},
	"justify-self": {
		"desc": "CSS justify-self 属性设置单个盒子在其布局容器适当轴中的对其方式。 此属性的效果取决于我们所处的布局模式： 在块级布局中，它对齐一个项目在其包含块的内联轴上。对于绝对定位的元素，它对齐一个项目在其包含块的内联轴上，同时计算 top，left，bottom 与 right 的值。（原文：it aligns an item inside its containing block on the inline axis, accounting for the offset values of top, left, bottom, and right.）在表格布局中，这个属性被忽略（更多 关于块、绝对定位以及表格布局中的对齐方式）在弹性布局中，这个属性被忽略（更对 关于弹性布局中的对齐方式）在栅格布局中，它对齐一个元素到该元素所在的栅格区域的内联轴上。（更多 关于栅格布局中的对齐方式）",
		"grammar": "/* 基础关键字 */\njustify-self: auto;\njustify-self: normal;\njustify-self: stretch;\n\n/* 位置对齐 */\njustify-self: center;     /* 在中间放置元素 */\njustify-self: start;      /* 在开始处放置元素 */\njustify-self: end;        /* 在结束处放置元素 */\njustify-self: flex-start; /* 与 'start' 等效。注意 justify-self 在 Flexbox 布局中被忽略。 */\njustify-self: flex-end;   /* 与 'end' 等效。注意 justify-self 在 Flexbox 布局中被忽略。 */\njustify-self: self-start;\njustify-self: self-end;\njustify-self: left;       /* 在左侧放置元素 */\njustify-self: right;      /* 在右侧放置元素 */\n\n/* 基线对齐 */\njustify-self: baseline;\njustify-self: first baseline;\njustify-self: last baseline;\n\n/* 溢出对齐（只对位置对齐有效果）*/\njustify-self: safe center;\njustify-self: unsafe center;\n\n/* 全局关键字 */\njustify-self: inherit;\njustify-self: initial;\njustify-self: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "block-level boxes, absolutely-positioned boxes, and grid items",
		"name": "justify-self"
	},
	"left": {
		"desc": "CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。/* <length> values */left: 3px;left: 2.4em; /* <percentage>s of the width of the containing block */left: 10%; /* Keyword value */left: auto; /* Global values */left: inherit;left: initial;left: unset; left的效果取决于元素的position属性： 当position设置为absolute或fixed时，left属性指定了定位元素左外边距边界与其包含块左边界之间的偏移。当position设置为relative时，left属性指定了元素的左边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，left属性的效果和 position 为relative等同；如果元素在 viewport 外面，left属性的效果和 position 为fixed等同。当position设置为static时，left属性无效。 当left和right​​​​​​同时指定时，元素的位置会被重复指定。当容器是从左到右时，left的值会被优先设定；当容器是从右到左时，right的值会被优先设定。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the width of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
		"grammar": "/* <length> values */\nleft: 3px;\nleft: 2.4em;\n\n/* <percentage>s of the width of the containing block */\nleft: 10%;\n\n/* Keyword value */\nleft: auto;\n\n/* Global values */\nleft: inherit;\nleft: initial;\nleft: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "positioned elements",
		"name": "left"
	},
	"letter-spacing": {
		"desc": "CSS 的 letter-spacing 属性用于设置文本字符的间距表现。",
		"grammar": "/* Keyword value */\nletter-spacing: normal;\n\n/* <length> values */\nletter-spacing: 0.3em;\nletter-spacing: 3px;\nletter-spacing: .3px;\n\n/* Global values */\nletter-spacing: inherit;\nletter-spacing: initial;\nletter-spacing: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "letter-spacing"
	},
	"line-break": {
		"desc": "设置 CSS 属性 line-break 可以用来处理如何断开（break lines）带有标点符号的中文、日文或韩文（CJK）文本的行。/* Keyword values */line-break: auto;line-break: loose;line-break: normal;line-break: strict;line-break: anywhere; /* Global values */line-break: inherit;line-break: initial;line-break: unset; 初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nline-break: auto;\nline-break: loose;\nline-break: normal;\nline-break: strict;\nline-break: anywhere;\n\n/* Global values */\nline-break: inherit;\nline-break: initial;\nline-break: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "line-break"
	},
	"line-height": {
		"desc": "line-height CSS 属性用于设置多行元素的空间量，如多行文本的间距。对于块级元素，它指定元素行盒（line boxes）的最小高度。对于非替代的 inline 元素，它用于计算行盒（line box）的高度。",
		"grammar": "/* Keyword value */\nline-height: normal;\n\n/* Unitless values: use this number multiplied\nby the element's font size */\nline-height: 3.5;\n\n/* <length> values */\nline-height: 3em;\n\n/* <percentage> values */\nline-height: 34%;\n\n/* Global values */\nline-height: inherit;\nline-height: initial;\nline-height: unset;\n",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "line-height"
	},
	"line-height-step (en-US)": {
		"desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The line-height-step CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit./* Point values */line-height-step: 18pt; /* Global values */line-height-step: inherit;line-height-step: initial;line-height-step: revert;line-height-step: revert-layer;line-height-step: unset;",
		"grammar": "/* Point values */\nline-height-step: 18pt;\n\n/* Global values */\nline-height-step: inherit;\nline-height-step: initial;\nline-height-step: revert;\nline-height-step: revert-layer;\nline-height-step: unset;\n",
		"initial value": "0",
		"inherit": "yes",
		"applicable elements": "block containers",
		"name": "line-height-step (en-US)"
	},
	"list-style": {
		"desc": "list-style CSS 属性是一个简写对属性集合，包括list-style-type, list-style-image, 和 list-style-position。",
		"grammar": "List 1\n<ul class=\"one\">\n  <li>List Item1</li>\n  <li>List Item2</li>\n  <li>List Item3</li>\n</ul>\nList 2\n<ul class=\"two\">\n  <li>List Item A</li>\n  <li>List Item B</li>\n  <li>List Item C</li>\n</ul>\n",
		"initial value": "as each of the properties of the shorthand:list-style-type: disclist-style-position: outsidelist-style-image: none",
		"inherit": "yes",
		"applicable elements": "list items",
		"name": "list-style"
	},
	"list-style-image": {
		"desc": "",
		"grammar": "/* Keyword values */\nlist-style-image: none;\n\n/* <url> values */\nlist-style-image: url('starsolid.gif');\n\n/* Global values */\nlist-style-image: inherit;\nlist-style-image: initial;\nlist-style-image: unset;\n",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "list items",
		"name": "list-style-image"
	},
	"list-style-position": {
		"desc": "list-style-position 属性指定标记框在主体块框中的位置。使用助记符list-style更方便。初始值outside适用元素list items是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\nlist-style-position: inside;\nlist-style-position: outside;\n\n/* Global values */\nlist-style-position: inherit;\nlist-style-position: initial;\nlist-style-position: unset;\n",
		"initial value": "outside",
		"inherit": "yes",
		"applicable elements": "list items",
		"name": "list-style-position"
	},
	"list-style-type": {
		"desc": "CSS 属性 list-style-type 可以设置列表元素的 marker（比如圆点、符号、或者自定义计数器样式）。 The color (en-US) of the marker will be the same as the computed color of the element it applies to.只有几个元素 (<li> 和 <summary>) 的默认值为 display: list-item。但是， list-style-type 属性可以应用在任何 display 的值为 list-item 的元素上。此外，由于这个属性是可继承的，它可以设置在父元素上 (通常是 <ol> 或 <ul>) 以便应用于所有子元素 (<li>)。",
		"grammar": "/* Partial list of types */\nlist-style-type: disc;\nlist-style-type: circle;\nlist-style-type: square;\nlist-style-type: decimal;\nlist-style-type: georgian;\nlist-style-type: trad-chinese-informal;\nlist-style-type: kannada;\n\n/* <string> value */\nlist-style-type: '-';\n\n/* Identifier matching an @counter-style rule */\nlist-style-type: custom-counter-style;\n\n/* Keyword value */\nlist-style-type: none;\n\n/* Global values */\nlist-style-type: inherit;\nlist-style-type: initial;\nlist-style-type: unset;\n",
		"name": "list-style-type"
	},
	"margin": {
		"desc": "margin 属性为给定元素设置所有四个（上下左右）方向的外边距属性。也就是 margin-top，margin-right，margin-bottom，和 margin-left 四个外边距属性设置的简写。 这个可交互示例的源码保存在一个 GitHub 仓库中。如果你有兴趣为这个交互示例项目做作出贡献，请 clone 下 https://github.com/mdn/interactive-examples 然后给我们提一个 pull request.上、下外边框的设置对不可替换内联元素，如 <span> 和 <code>，无效。 注意： 外边距控制的是元素外部空出的空间。相反，padding 操作元素内部空出的空间。",
		"grammar": "/* 应用于所有边 */\nmargin: 1em;\nmargin: -3px;\n\n/* 上边下边 | 左边右边 */\nmargin: 5% auto;\n\n/* 上边 | 左边右边 | 下边 */\nmargin: 1em auto 2em;\n\n/* 上边 | 右边 | 下边 | 左边 */\nmargin: 2px 1em 0 auto;\n\n/* 全局值 */\nmargin: inherit;\nmargin: initial;\nmargin: unset;\n",
		"initial value": "as each of the properties of the shorthand:margin-bottom: 0margin-left: 0margin-right: 0margin-top: 0",
		"inherit": "否",
		"applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
		"name": "margin"
	},
	"margin-block": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 margin-block这个CSS属性定义了一个元素的逻辑块开始和结束边距，根据元素的写入模式、方向性和文本方向映射到物理边界。/* 有长度的具体的值 */margin-block: 10px 20px; /* 一个绝对的长度值 */margin-block: 1em 2em; /* 相对于文本大小的值 */margin-block: 5% 2%; /* 相对于最近的块容器宽度的值 */margin-block: 10px; /* 设置开始值和结束值 */ /* 关键字 值 */margin-block: auto; /* 全局 值 */margin-block: inherit;margin-block: initial;margin-block: unset; 这些值对应的是margin-top和margin-bottom，或者 margin-right，和margin-left，这些属性取决于writing-mode，direction，和text-orientation。这些值可以单独设置为margin-block-start和margin-block-end (en-US)。inline direction 属性是margin-inline (en-US)，也可设置为margin-inline-start (en-US)，和margin-inline-end (en-US)。",
		"grammar": "/* 有长度的具体的值 */\nmargin-block: 10px 20px;  /* 一个绝对的长度值 */\nmargin-block: 1em 2em;   /* 相对于文本大小的值 */\nmargin-block: 5% 2%;    /* 相对于最近的块容器宽度的值 */\nmargin-block: 10px; /* 设置开始值和结束值 */\n\n/* 关键字 值 */\nmargin-block: auto;\n\n/* 全局 值 */\nmargin-block: inherit;\nmargin-block: initial;\nmargin-block: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "same as margin",
		"name": "margin-block"
	},
	"margin-block-end (en-US)": {
		"desc": "The margin-block-end CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.",
		"grammar": "/* <length> values */\nmargin-block-end: 10px;  /* An absolute length */\nmargin-block-end: 1em;   /* relative to the text size */\nmargin-block-end: 5%;    /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-block-end: auto;\n\n/* Global values */\nmargin-block-end: inherit;\nmargin-block-end: initial;\nmargin-block-end: revert;\nmargin-block-end: revert-layer;\nmargin-block-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as margin",
		"name": "margin-block-end (en-US)"
	},
	"margin-block-start": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。margin-block-start CSS 属性定义了一个元素的逻辑块的开始边距，是用来根据元素的书写模式，方向和文本方向进行实际边界的衡量。/* <length> values */margin-block-start: 10px; /* 绝对长度 */margin-block-start: 1em; /* 文本的相对大小 */margin-block-start: 5%; /* 相对于最近块容器的大小 */ /* 关键字值 */margin-block-start: auto; /* 全局值 */margin-block-start: inherit;margin-block-start: initial;margin-block-start: unset margin-top, margin-right, margin-bottom, or margin-left 属性对应于 writing-mode, direction, 和text-orientation属性定义的值。它涉及到 margin-block-end (en-US), margin-inline-start (en-US),和 margin-inline-end (en-US)属性，这些属性是用来定义其它元素的边界。初始值0适用元素same as margin是否是继承属性否Percentagesdepends on layout model计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length",
		"grammar": "/* <length> values */\nmargin-block-start: 10px;  /* 绝对长度 */\nmargin-block-start: 1em;   /* 文本的相对大小 */\nmargin-block-start: 5%;    /* 相对于最近块容器的大小 */\n\n/* 关键字值 */\nmargin-block-start: auto;\n\n/* 全局值 */\nmargin-block-start: inherit;\nmargin-block-start: initial;\nmargin-block-start: unset\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "same as margin",
		"name": "margin-block-start"
	},
	"margin-bottom": {
		"desc": "",
		"grammar": "/* <length> values */\nmargin-bottom: 10px;        /* 一个绝对的长度值 */\nmargin-bottom: 1em;         /* A length relative to the text size */\nmargin-bottom: 5%;          /* A margin relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-bottom: auto;\n\n/* Global values */\nmargin-bottom: inherit;\nmargin-bottom: initial;\nmargin-bottom: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
		"name": "margin-bottom"
	},
	"margin-inline (en-US)": {
		"desc": "The margin-inline CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.",
		"grammar": "/* <length> values */\nmargin-inline: 10px 20px;  /* An absolute length */\nmargin-inline: 1em 2em;    /* relative to the text size */\nmargin-inline: 5% 2%;      /* relative to the nearest block container's width */\nmargin-inline: 10px;       /* sets both start and end values */\n\n/* Keyword values */\nmargin-inline: auto;\n\n/* Global values */\nmargin-inline: inherit;\nmargin-inline: initial;\nmargin-inline: revert;\nmargin-inline: revert-layer;\nmargin-inline: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as margin",
		"name": "margin-inline (en-US)"
	},
	"margin-inline-end (en-US)": {
		"desc": "The margin-inline-end CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the margin-top, margin-right, margin-bottom or margin-left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\nmargin-inline-end: 10px;   /* An absolute length */\nmargin-inline-end: 1em;    /* relative to the text size */\nmargin-inline-end: 5%;     /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-inline-end: auto;\n\n/* Global values */\nmargin-inline-end: inherit;\nmargin-inline-end: initial;\nmargin-inline-end: revert;\nmargin-inline-end: revert-layer;\nmargin-inline-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as margin",
		"name": "margin-inline-end (en-US)"
	},
	"margin-inline-start (en-US)": {
		"desc": "The margin-inline-start CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the margin-top, margin-right, margin-bottom, or margin-left property depending on the values defined for writing-mode, direction, and text-orientation.",
		"grammar": "/* <length> values */\nmargin-inline-start: 10px;  /* An absolute length */\nmargin-inline-start: 1em;   /* relative to the text size */\nmargin-inline-start: 5%;    /* relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-inline-start: auto;\n\n/* Global values */\nmargin-inline-start: inherit;\nmargin-inline-start: initial;\nmargin-inline-start: revert;\nmargin-inline-start: revert-layer;\nmargin-inline-start: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as margin",
		"name": "margin-inline-start (en-US)"
	},
	"margin-left": {
		"desc": "",
		"grammar": "/* <length> values */\nmargin-left: 10px;  /* 绝对长度 */\nmargin-left: 1em;   /* 相对于字号的长度 */\nmargin-left: 5%;    /* 相对最近块元素的宽度 */\n\n/* Keyword values */\nmargin-left: auto;\n\n/* Global values */\nmargin-left: inherit;\nmargin-left: initial;\nmargin-left: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
		"name": "margin-left"
	},
	"margin-right": {
		"desc": "",
		"grammar": "/* <length> values */\nmargin-right: 20px;        /* An absolute length */\nmargin-right: 1em;         /* A length relative to the text size */\nmargin-right: 5%;          /* A margin relative to the nearest block container's width */\n\n/* Keyword values */\nmargin-right: auto;\n\n/* Global values */\nmargin-right: inherit;\nmargin-right: initial;\nmargin-right: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
		"name": "margin-right"
	},
	"margin-top": {
		"desc": "",
		"grammar": "/* <length> values */\nmargin-top: 10px;        /* 绝对长度 */\nmargin-top: 1em;         /*相对于字体大小 */\nmargin-top: 5%;          /*相对于最相邻的父级元素块（block）的宽度*/\n\n/* Keyword values */\nmargin-top: auto;\n\n/* Global values */\nmargin-top: inherit;\nmargin-top: initial;\nmargin-top: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter and ::first-line.",
		"name": "margin-top"
	},
	"margin-trim (en-US)": {
		"desc": "The margin-trim property allows the container to trim the margins of its children where they adjoin the container's edges.",
		"grammar": "margin-trim: none;\nmargin-trim: in-flow;\nmargin-trim: all;\n\n/* Global values */\nmargin-trim: inherit;\nmargin-trim: initial;\nmargin-trim: revert;\nmargin-trim: revert-layer;\nmargin-trim: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "Block containers and multi-column containers. It also applies to ::first-letter and ::first-line.",
		"name": "margin-trim (en-US)"
	},
	"mask": {
		"desc": "CSS 属性 mask 允许使用者通过遮罩或者裁切特定区域的图片的方式来隐藏一个元素的部分或者全部可见区域。/* Keyword values */mask: none; /* Image values */mask: url(mask.png); /* 使用位图来做遮罩 */mask: url(masks.svg#star); /* 使用 SVG 图形中的形状来做遮罩 */ /* Combined values */mask: url(masks.svg#star) luminance; /* Element within SVG graphic used as luminance mask */mask: url(masks.svg#star) 40px 20px; /* 使用 SVG 图形中的形状来做遮罩并设定它的位置：离上边缘 40px，离左边缘 20px */mask: url(masks.svg#star) 0 0/50px 50px; /* 使用 SVG 图形中的形状来做遮罩并设定它的位置和大小：长宽都是 50px */mask: url(masks.svg#star) repeat-x; /* Element within SVG graphic used as horizontally repeated mask */mask: url(masks.svg#star) stroke-box; /* Element within SVG graphic used as mask extending to the box enclosed by the stroke */mask: url(masks.svg#star) exclude; /* Element within SVG graphic used as mask and combined with background using non-overlapping parts */ /* Global values */mask: inherit;mask: initial;mask: unset; mask 的简写会将 mask-border 设为初始值。使用 mask 的简写优于使用其他简写或者各自属性的设置来覆盖。这能保证 mask-border 也会重新设置为新的效果样式。 初始值as each of the properties of the shorthand:mask-image: nonemask-mode: match-sourcemask-repeat: no-repeatmask-position (en-US): centermask-clip (en-US): border-boxmask-origin (en-US): border-boxmask-size (en-US): automask-composite (en-US): add适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否Percentagesas each of the properties of the shorthand:mask-position (en-US): refer to size of mask painting area minus size of mask layer image (see the text for background-position)计算值as each of the properties of the shorthand:mask-image: as specified, but with url values made absolutemask-mode: as specifiedmask-repeat: Consists of two keywords, one per dimensionmask-position (en-US): Consists of two keywords representing the origin and two offsets from that origin, each given as an absolute length (if given a <length>), otherwise as a percentage.mask-clip (en-US): as specifiedmask-origin (en-US): as specifiedmask-size (en-US): as specified, but with relative lengths converted into absolute lengthsmask-composite (en-US): as specifiedAnimation typeas each of the properties of the shorthand:mask-image: discretemask-mode: discretemask-repeat: discretemask-position (en-US): repeatable list of simple list of length, percentage, or calcmask-clip (en-US): discretemask-origin (en-US): discretemask-size (en-US): repeatable list of simple list of length, percentage, or calcmask-composite (en-US): discreteCreates stacking contextyes",
		"grammar": "/* Keyword values */\nmask: none;\n\n/* Image values */\nmask: url(mask.png);                       /* 使用位图来做遮罩 */\nmask: url(masks.svg#star);                 /* 使用 SVG 图形中的形状来做遮罩 */\n\n/* Combined values */\nmask: url(masks.svg#star) luminance;       /* Element within SVG graphic used as luminance mask */\nmask: url(masks.svg#star) 40px 20px;       /* 使用 SVG 图形中的形状来做遮罩并设定它的位置：离上边缘 40px，离左边缘 20px */\nmask: url(masks.svg#star) 0 0/50px 50px;   /* 使用 SVG 图形中的形状来做遮罩并设定它的位置和大小：长宽都是 50px */\nmask: url(masks.svg#star) repeat-x;        /* Element within SVG graphic used as horizontally repeated mask */\nmask: url(masks.svg#star) stroke-box;      /* Element within SVG graphic used as mask extending to the box enclosed by the stroke */\nmask: url(masks.svg#star) exclude;         /* Element within SVG graphic used as mask and combined with background using non-overlapping parts */\n\n/* Global values */\nmask: inherit;\nmask: initial;\nmask: unset;\n",
		"initial value": "as each of the properties of the shorthand:mask-image: nonemask-mode: match-sourcemask-repeat: no-repeatmask-position (en-US): centermask-clip (en-US): border-boxmask-origin (en-US): border-boxmask-size (en-US): automask-composite (en-US): add",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask"
	},
	"mask-border": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 mask-border 允许你创建一个紧贴元素边框边缘的 mask.该属性为以下属性的简写: mask-border-source (en-US), mask-border-slice, mask-border-width, mask-border-outset (en-US), mask-border-repeat, and mask-border-mode. 与其他简写的属性一样，任何一个漏写的子属性，将会被设置为他们的初始值.",
		"grammar": "/* source | slice */\nmask-border: url('border-mask.png') 25;\n\n/* source | slice | repeat */\nmask-border: url('border-mask.png') 25 space;\n\n/* source | slice | width */\nmask-border: url('border-mask.png') 25 / 35px;\n\n/* source | slice | width | outset | repeat | mode */\nmask-border: url('border-mask.png') 25 / 35px / 12px space alpha;\n",
		"initial value": "as each of the properties of the shorthand:mask-border-mode: alphamask-border-outset (en-US): 0mask-border-repeat: stretchmask-border-slice: 0mask-border-source (en-US): nonemask-border-width: auto",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border"
	},
	"mask-border-mode": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。该CSS属性指定使用的混合模式面具边界。mask-border-mode",
		"grammar": "/* Keyword values */\nmask-border-mode: luminance;\nmask-border-mode: alpha;\n\n/* Global values */\nmask-border-mode: inherit;\nmask-border-mode: initial;\nmask-border-mode: unset;\n",
		"initial value": "alpha",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-mode"
	},
	"mask-border-outset (en-US)": {
		"desc": "The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box.",
		"grammar": "/* <length> value */\nmask-border-outset: 1rem;\n\n/* <number> value */\nmask-border-outset: 1.5;\n\n/* vertical | horizontal */\nmask-border-outset: 1 1.2;\n\n/* top | horizontal | bottom */\nmask-border-outset: 30px 2 45px;\n\n/* top | right | bottom | left */\nmask-border-outset: 7px 12px 14px 5px;\n\n/* Global values */\nmask-border-outset: inherit;\nmask-border-outset: initial;\nmask-border-outset: revert;\nmask-border-outset: revert-layer;\nmask-border-outset: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-outset (en-US)"
	},
	"mask-border-repeat": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-border-repeat CSS 属性设置如何调整源图像的边缘区域以适应元素遮罩边框的尺寸。",
		"grammar": "/* Keyword value */\nmask-border-repeat: stretch;\nmask-border-repeat: repeat;\nmask-border-repeat: round;\nmask-border-repeat: space;\n\n/* vertical | horizontal */\nmask-border-repeat: round stretch;\n\n/* Global values */\nmask-border-repeat: inherit;\nmask-border-repeat: initial;\nmask-border-repeat: unset;\n",
		"initial value": "stretch",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-repeat"
	},
	"mask-border-slice": {
		"desc": "的CSS属性除以掩模边界源成区域的图像集合。这些区域用于形成元素的遮罩边框的组成部分。mask-border-slice",
		"grammar": "/* All sides */\nmask-border-slice: 30%;\n\n/* vertical | horizontal */\nmask-border-slice: 10% 30%;\n\n/* top | horizontal | bottom */\nmask-border-slice: 30 30% 45;\n\n/* top | right | bottom | left */\nmask-border-slice: 7 12 14 5;\n\n/* Using the `fill` keyword */\nmask-border-slice: 10% fill 7 12;\n\n/* Global values */\nmask-border-slice: inherit;\nmask-border-slice: initial;\nmask-border-slice: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-slice"
	},
	"mask-border-source (en-US)": {
		"desc": "The mask-border-source CSS property sets the source image used to create an element's mask border.The mask-border-slice property is used to divide the source image into regions, which are then dynamically applied to the final mask border.",
		"grammar": "/* Keyword value */\nmask-border-source: none;\n\n/* <image> values */\nmask-border-source: url(image.jpg);\nmask-border-source: linear-gradient(to top, red, yellow);\n\n/* Global values */\nmask-border-source: inherit;\nmask-border-source: initial;\nmask-border-source: revert;\nmask-border-source: revert-layer;\nmask-border-source: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-source (en-US)"
	},
	"mask-border-width": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-border-width CSS 属性设置元素的 mask border的宽度",
		"grammar": "/* Keyword value */\nmask-border-width: auto;\n\n/* <length> value */\nmask-border-width: 1rem;\n\n/* <percentage> value */\nmask-border-width: 25%;\n\n/* <number> value */\nmask-border-width: 3;\n\n/* vertical | horizontal */\nmask-border-width: 2em 3em;\n\n/* top | horizontal | bottom */\nmask-border-width: 5% 15% 10%;\n\n/* top | right | bottom | left */\nmask-border-width: 5% 2em 10% auto;\n\n/* Global values */\nmask-border-width: inherit;\nmask-border-width: initial;\nmask-border-width: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-border-width"
	},
	"mask-clip (en-US)": {
		"desc": "The mask-clip CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area./* <geometry-box> values */mask-clip: content-box;mask-clip: padding-box;mask-clip: border-box;mask-clip: margin-box;mask-clip: fill-box;mask-clip: stroke-box;mask-clip: view-box; /* Keyword values */mask-clip: no-clip; /* Non-standard keyword values */-webkit-mask-clip: border;-webkit-mask-clip: padding;-webkit-mask-clip: content;-webkit-mask-clip: text; /* Multiple values */mask-clip: padding-box, no-clip;mask-clip: view-box, fill-box, border-box; /* Global values */mask-clip: inherit;mask-clip: initial;mask-clip: revert;mask-clip: revert-layer;mask-clip: unset;",
		"grammar": "/* <geometry-box> values */\nmask-clip: content-box;\nmask-clip: padding-box;\nmask-clip: border-box;\nmask-clip: margin-box;\nmask-clip: fill-box;\nmask-clip: stroke-box;\nmask-clip: view-box;\n\n/* Keyword values */\nmask-clip: no-clip;\n\n/* Non-standard keyword values */\n-webkit-mask-clip: border;\n-webkit-mask-clip: padding;\n-webkit-mask-clip: content;\n-webkit-mask-clip: text;\n\n/* Multiple values */\nmask-clip: padding-box, no-clip;\nmask-clip: view-box, fill-box, border-box;\n\n/* Global values */\nmask-clip: inherit;\nmask-clip: initial;\nmask-clip: revert;\nmask-clip: revert-layer;\nmask-clip: unset;\n",
		"initial value": "border-box",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-clip (en-US)"
	},
	"mask-composite (en-US)": {
		"desc": "The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it./* Keyword values */mask-composite: add;mask-composite: subtract;mask-composite: intersect;mask-composite: exclude; /* Global values */mask-composite: inherit;mask-composite: initial;mask-composite: revert;mask-composite: revert-layer;mask-composite: unset;",
		"grammar": "/* Keyword values */\nmask-composite: add;\nmask-composite: subtract;\nmask-composite: intersect;\nmask-composite: exclude;\n\n/* Global values */\nmask-composite: inherit;\nmask-composite: initial;\nmask-composite: revert;\nmask-composite: revert-layer;\nmask-composite: unset;\n",
		"initial value": "add",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-composite (en-US)"
	},
	"mask-image": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* Keyword value */\nmask-image: none;\n\n/* <mask-source> value */\nmask-image: url(masks.svg#mask1);\n\n/* <image< values */\nmask-image: linear-gradient(rgba(0, 0, 0, 1.0), transparent);\nmask-image: image(url(mask.png), skyblue);\n\n/* Multiple values */\nmask-image: image(url(mask.png), skyblue), linear-gradient(rgba(0, 0, 0, 1.0), transparent);\n\n/* Global values */\nmask-image: inherit;\nmask-image: initial;\nmask-image: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-image"
	},
	"mask-mode": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。mask-modeCSS属性指示由mask-image 指向的遮罩被视为亮度或阿尔法遮罩。/* 关取值的键字 */mask-mode: alpha;mask-mode: luminance;mask-mode: match-source; /* 多个类型的值 */mask-mode: alpha, match-source; /* 全局变量的值 */mask-mode: inherit;mask-mode: initial;mask-mode: unset; 初始值match-source适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* 关取值的键字 */\nmask-mode: alpha;\nmask-mode: luminance;\nmask-mode: match-source;\n\n/* 多个类型的值 */\nmask-mode: alpha, match-source;\n\n/* 全局变量的值 */\nmask-mode: inherit;\nmask-mode: initial;\nmask-mode: unset;\n",
		"initial value": "match-source",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-mode"
	},
	"mask-origin (en-US)": {
		"desc": "The mask-origin CSS property sets the origin of a mask./* Keyword values */mask-origin: content-box;mask-origin: padding-box;mask-origin: border-box;mask-origin: margin-box;mask-origin: fill-box;mask-origin: stroke-box;mask-origin: view-box; /* Multiple values */mask-origin: padding-box, content-box;mask-origin: view-box, fill-box, border-box; /* Non-standard keyword values */-webkit-mask-origin: content;-webkit-mask-origin: padding;-webkit-mask-origin: border; /* Global values */mask-origin: inherit;mask-origin: initial;mask-origin: revert;mask-origin: revert-layer;mask-origin: unset; For elements rendered as a single box, this property specifies the mask positioning area. In other words, this property specifies the origin position of an image specified by the mask-image CSS property. For elements rendered as multiple boxes, such as inline boxes on several lines or boxes on several pages, it specifies which boxes box-decoration-break operates upon to determine the mask positioning area.",
		"grammar": "/* Keyword values */\nmask-origin: content-box;\nmask-origin: padding-box;\nmask-origin: border-box;\nmask-origin: margin-box;\nmask-origin: fill-box;\nmask-origin: stroke-box;\nmask-origin: view-box;\n\n/* Multiple values */\nmask-origin: padding-box, content-box;\nmask-origin: view-box, fill-box, border-box;\n\n/* Non-standard keyword values */\n-webkit-mask-origin: content;\n-webkit-mask-origin: padding;\n-webkit-mask-origin: border;\n\n/* Global values */\nmask-origin: inherit;\nmask-origin: initial;\nmask-origin: revert;\nmask-origin: revert-layer;\nmask-origin: unset;\n",
		"initial value": "border-box",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-origin (en-US)"
	},
	"mask-position (en-US)": {
		"desc": "The mask-position CSS property sets the initial position, relative to the mask position layer set by mask-origin, for each defined mask image./* Keyword values */mask-position: top;mask-position: bottom;mask-position: left;mask-position: right;mask-position: center; /* <position> values */mask-position: 25% 75%;mask-position: 0px 0px;mask-position: 10% 8em; /* Multiple values */mask-position: top right;mask-position: 1rem 1rem, center; /* Global values */mask-position: inherit;mask-position: initial;mask-position: revert;mask-position: revert-layer;mask-position: unset;",
		"grammar": "/* Keyword values */\nmask-position: top;\nmask-position: bottom;\nmask-position: left;\nmask-position: right;\nmask-position: center;\n\n/* <position> values */\nmask-position: 25% 75%;\nmask-position: 0px 0px;\nmask-position: 10% 8em;\n\n/* Multiple values */\nmask-position: top right;\nmask-position: 1rem 1rem, center;\n\n/* Global values */\nmask-position: inherit;\nmask-position: initial;\nmask-position: revert;\nmask-position: revert-layer;\nmask-position: unset;\n",
		"initial value": "center",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-position (en-US)"
	},
	"mask-repeat": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 的 mask-repeat 属性定义了遮罩图片是否重复显示多个副本，以及如何重复。一个遮罩图片可以水平重复、垂直重复或双向重复，也可以不重复。/* One-value syntax */mask-repeat: repeat-x;mask-repeat: repeat-y;mask-repeat: repeat;mask-repeat: space;mask-repeat: round;mask-repeat: no-repeat; /* Two-value syntax: horizontal | vertical */mask-repeat: repeat space;mask-repeat: repeat repeat;mask-repeat: round space;mask-repeat: no-repeat round; /* Multiple values */mask-repeat: space round, no-repeat;mask-repeat: round repeat, space, repeat-x; /* Global values */mask-repeat: inherit;mask-repeat: initial;mask-repeat: unset; 默认情况下，重复的图片会被剪切为图片的大小，但他们可以自行缩放适应（使用 round），或者从一端到另一端均匀分布（使用 space）。初始值no-repeat适用元素all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements是否是继承属性否计算值Consists of two keywords, one per dimensionAnimation typediscrete",
		"grammar": "/* One-value syntax */\nmask-repeat: repeat-x;\nmask-repeat: repeat-y;\nmask-repeat: repeat;\nmask-repeat: space;\nmask-repeat: round;\nmask-repeat: no-repeat;\n\n/* Two-value syntax: horizontal | vertical */\nmask-repeat: repeat space;\nmask-repeat: repeat repeat;\nmask-repeat: round space;\nmask-repeat: no-repeat round;\n\n/* Multiple values */\nmask-repeat: space round, no-repeat;\nmask-repeat: round repeat, space, repeat-x;\n\n/* Global values */\nmask-repeat: inherit;\nmask-repeat: initial;\nmask-repeat: unset;\n",
		"initial value": "no-repeat",
		"inherit": "否",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-repeat"
	},
	"mask-size (en-US)": {
		"desc": "The mask-size CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio./* Keywords syntax */mask-size: cover;mask-size: contain; /* One-value syntax *//* the width of the image (height set to 'auto') */mask-size: 50%;mask-size: 3em;mask-size: 12px;mask-size: auto; /* Two-value syntax *//* first value: width of the image, second value: height */mask-size: 50% auto;mask-size: 3em 25%;mask-size: auto 6px;mask-size: auto auto; /* Multiple values *//* Do not confuse this with mask-size: auto auto */mask-size: auto, auto;mask-size: 50%, 25%, 25%;mask-size: 6px, auto, contain; /* Global values */mask-size: inherit;mask-size: initial;mask-size: revert;mask-size: revert-layer;mask-size: unset; Note: If the value of this property is not set in a mask shorthand property that is applied to the element after the mask-size CSS property, the value of this property is then reset to its initial value by the shorthand property.",
		"grammar": "/* Keywords syntax */\nmask-size: cover;\nmask-size: contain;\n\n/* One-value syntax */\n/* the width of the image (height set to 'auto') */\nmask-size: 50%;\nmask-size: 3em;\nmask-size: 12px;\nmask-size: auto;\n\n/* Two-value syntax */\n/* first value: width of the image, second value: height */\nmask-size: 50% auto;\nmask-size: 3em 25%;\nmask-size: auto 6px;\nmask-size: auto auto;\n\n/* Multiple values */\n/* Do not confuse this with mask-size: auto auto */\nmask-size: auto, auto;\nmask-size: 50%, 25%, 25%;\nmask-size: 6px, auto, contain;\n\n/* Global values */\nmask-size: inherit;\nmask-size: initial;\nmask-size: revert;\nmask-size: revert-layer;\nmask-size: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "all elements; In SVG, it applies to container elements excluding the defs element and all graphics elements",
		"name": "mask-size (en-US)"
	},
	"mask-type (en-US)": {
		"desc": "The mask-type CSS property sets whether an SVG <mask> element is used as a luminance or an alpha mask. It applies to the <mask> element itself./* Keyword values */mask-type: luminance;mask-type: alpha; /* Global values */mask-type: inherit;mask-type: initial;mask-type: revert;mask-type: revert-layer;mask-type: unset; This property may be overridden by the mask-mode property, which has the same effect but applies to the element where the mask is used. Alpha masks will generally be faster to render.",
		"grammar": "/* Keyword values */\nmask-type: luminance;\nmask-type: alpha;\n\n/* Global values */\nmask-type: inherit;\nmask-type: initial;\nmask-type: revert;\nmask-type: revert-layer;\nmask-type: unset;\n",
		"initial value": "luminance",
		"inherit": "no",
		"applicable elements": "<mask> elements",
		"name": "mask-type (en-US)"
	},
	"max-block-size (en-US)": {
		"desc": "The max-block-size CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by writing-mode. That is, if the writing direction is horizontal, then max-block-size is equivalent to max-height; if the writing direction is vertical, max-block-size is the same as max-width.The other dimension's maximum length is specified using the max-inline-size property.This is useful because the max-width is always used for horizontal sizes and max-height is always used for vertical sizes, and if you need to set lengths based on the size of your text content, you need to be able to do so with the writing direction in mind.Any time you would normally use max-height or max-width, you should instead use max-block-size to set the maximum \"height\" of the content (even though this may not be a vertical value) and max-inline-size to set the maximum \"width\" of the content (although this may instead be vertical rather than horizontal). See the Example in writing-mode, which shows the different writing modes in action.",
		"grammar": "/* <length> values */\nmax-block-size: 300px;\nmax-block-size: 25em;\n\n/* <percentage> values */\nmax-block-size: 75%;\n\n/* Keyword values */\nmax-block-size: none;\nmax-block-size: max-content;\nmax-block-size: min-content;\nmax-block-size: fit-content(20em);\n\n/* Global values */\nmax-block-size: inherit;\nmax-block-size: initial;\nmax-block-size: revert;\nmax-block-size: revert-layer;\nmax-block-size: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as width and height",
		"name": "max-block-size (en-US)"
	},
	"max-height": {
		"desc": "CSS属性 max-height 设置元素的最大高度。它防止height属性的使用值（used value） 大于 max-height 的指定值。 max-height 会覆盖height, 而min-height 会覆盖 max-height.",
		"grammar": "/* <length> value */\nmax-height: 3.5em;\n\n/* <percentage> value */\nmax-height: 75%;\n\n/* Keyword values */\nmax-height: none;\nmax-height: max-content;\nmax-height: min-content;\nmax-height: fit-content(20em);\n\n/* Global values */\nmax-height: inherit;\nmax-height: initial;\nmax-height: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
		"name": "max-height"
	},
	"max-inline-size (en-US)": {
		"desc": "The max-inline-size CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the max-width or the max-height property, depending on the value of writing-mode.If the writing mode is vertically oriented, the value of max-inline-size relates to the maximal height of the element; otherwise, it relates to the maximal width of the element. A related property is max-block-size, which defines the other dimension of the element.",
		"grammar": "/* <length> values */\nmax-inline-size: 300px;\nmax-inline-size: 25em;\n\n/* <percentage> values */\nmax-inline-size: 75%;\n\n/* Keyword values */\nmax-inline-size: none;\nmax-inline-size: max-content;\nmax-inline-size: min-content;\nmax-inline-size: fit-content(20em);\n\n/* Global values */\nmax-inline-size: inherit;\nmax-inline-size: initial;\nmax-inline-size: revert;\nmax-inline-size: revert-layer;\nmax-inline-size: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as width and height",
		"name": "max-inline-size (en-US)"
	},
	"max-width": {
		"desc": "",
		"grammar": "/* <长度> 值 */\nmax-width: 3.5em;\n\n/* <百分比> 值 */\nmax-width: 75%;\n\n/* 关键字 */\nmax-width: none;\nmax-width: max-content;\nmax-width: min-content;\nmax-width: fit-content;\nmax-width: fill-available;\n\n/* 全局设置 */\nmax-width: inherit;\nmax-width: initial;\nmax-width: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements but non-replaced inline elements, table rows, and row groups",
		"name": "max-width"
	},
	"min-block-size (en-US)": {
		"desc": "The min-block-size CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode.If the writing mode is vertically oriented, the value of min-block-size relates to the minimum width of the element; otherwise, it relates to the minimum height of the element. A related property is min-inline-size, which defines the other dimension of the element.",
		"grammar": "/* <length> values */\nmin-block-size: 100px;\nmin-block-size: 5em;\n\n/* <percentage> values */\nmin-block-size: 10%;\n\n/* Keyword values */\nmin-block-size: max-content;\nmin-block-size: min-content;\nmin-block-size: fit-content(20em);\n\n/* Global values */\nmin-block-size: inherit;\nmin-block-size: initial;\nmin-block-size: revert;\nmin-block-size: revert-layer;\nmin-block-size: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as width and height",
		"name": "min-block-size (en-US)"
	},
	"min-height": {
		"desc": "CSS 属性 min-height 能够设置元素的最小高度。这样能够防止 height 属性的应用值小于 min-height 的值。 当 min-height 大于 max-height 或 height 时，元素的高度会设置为 min-height 的值。",
		"grammar": "/* <长度> 数值 */\nmin-height: 3.5em;\n\n/* <百分比> 数值 */\nmin-height: 10%;\n\n/* 关键词 */\nmin-height: max-content;\nmin-height: min-content;\nmin-height: fit-content(20em);\n\n/* 全局数值 */\nmin-height: inherit;\nmin-height: initial;\nmin-height: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements but non-replaced inline elements, table columns, and column groups",
		"name": "min-height"
	},
	"min-inline-size (en-US)": {
		"desc": "The min-inline-size CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode.",
		"grammar": "/* <length> values */\nmin-inline-size: 100px;\nmin-inline-size: 5em;\n\n/* <percentage> values */\nmin-inline-size: 10%;\n\n/* Keyword values */\nmin-inline-size: max-content;\nmin-inline-size: min-content;\nmin-inline-size: fit-content(20em);\n\n/* Global values */\nmin-inline-size: inherit;\nmin-inline-size: initial;\nmin-inline-size: revert;\nmin-inline-size: revert-layer;\nmin-inline-size: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "same as width and height",
		"name": "min-inline-size (en-US)"
	},
	"min-width": {
		"desc": "",
		"grammar": "table { min-width: 75%; }\n\nform { min-width: 0; }\n",
		"name": "min-width"
	},
	"mix-blend-mode": {
		"desc": "mix-blend-mode CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。",
		"grammar": "<div class=\"isolate\">\n  <div class=\"circle circle-1\"></div>\n  <div class=\"circle circle-2\"></div>\n  <div class=\"circle circle-3\"></div>\n</div>",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "mix-blend-mode"
	},
	"object-fit": {
		"desc": "object-fit CSS 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。您可以通过使用 object-position 属性来切换被替换元素的内容对象在元素框内的对齐方式。",
		"grammar": "<div>\n  <h2>object-fit: fill</h2>\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"fill\"/>\n\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"fill narrow\"/>\n\n  <h2>object-fit: contain</h2>\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"contain\"/>\n\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"contain narrow\"/>\n\n  <h2>object-fit: cover</h2>\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"cover\"/>\n\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"cover narrow\"/>\n\n  <h2>object-fit: none</h2>\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"none\"/>\n\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"none narrow\"/>\n\n  <h2>object-fit: scale-down</h2>\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"scale-down\"/>\n\n  <img src=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" alt=\"MDN Logo\" class=\"scale-down narrow\"/>\n\n</div>\n",
		"name": "object-fit"
	},
	"object-position": {
		"desc": "CSS 属性 object-position 规定了可替换元素的内容，在这里我们称其为对象（即 object-position 中的 object），在其内容框中的位置。可替换元素的内容框中未被对象所覆盖的部分，则会显示该元素的背景（background）。你还可以使用 object-fit 属性来改变可替换元素的对象的内在（原文：intrinsic）大小（即它看上去的大小）的调整方式，借助拉伸与缩放等使对象更好地适应元素的内容框。",
		"grammar": "/* <position> values */\nobject-position: center top;\nobject-position: 100px 50px;\n\n/* Global values */\nobject-position: inherit;\nobject-position: initial;\nobject-position: unset;\n",
		"initial value": "50% 50%",
		"inherit": "yes",
		"applicable elements": "replaced elements",
		"name": "object-position"
	},
	"offset": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。这个 offset 是 CSS 属性的快速属性动画元素沿着定义的路径。 早期版本 规格 属性叫做 motion. 初始值as each of the properties of the shorthand:offset-position (en-US): autooffset-path (en-US): noneoffset-distance (en-US): 0offset-anchor (en-US): autooffset-rotate (en-US): auto适用元素transformable elements是否是继承属性否Percentagesas each of the properties of the shorthand:offset-position (en-US): referToSizeOfContainingBlockoffset-distance (en-US): refer to the total path lengthoffset-anchor (en-US): relativeToWidthAndHeight计算值as each of the properties of the shorthand:offset-position (en-US): for length the absolute value, otherwise a percentageoffset-path (en-US): as specifiedoffset-distance (en-US): for length the absolute value, otherwise a percentageoffset-anchor (en-US): for length the absolute value, otherwise a percentageoffset-rotate (en-US): as specifiedAnimation typeas each of the properties of the shorthand:offset-position (en-US): a positionoffset-path (en-US): as <angle>, <basic-shape> or <path()>offset-distance (en-US): a length, percentage or calc();offset-anchor (en-US): a positionoffset-rotate (en-US): as <angle>, <basic-shape> or <path()>Creates stacking contextyes",
		"grammar": "/* 偏移位置 */\noffset: auto\noffset: 10px 30px;\noffset: none;\n\n/* 偏移路径 */\noffset: ray(45deg closest-side);\noffset: path(M 100 100 L 300 100 L 200 300 z);\noffset: url(arc.svg);\n\n/*  偏移路径的距离和/或旋转  */\noffset: url(circle.svg) 100px;\noffset: url(circle.svg) 40%;\noffset: url(circle.svg) 30deg;\noffset: url(circle.svg) 50px 20deg;\n\n/*  包括锚偏移  */\noffset: ray(45deg closest-side) / 40px 20px;\noffset: url(arc.svg) 2cm / 0.5cm 3cm;\noffset: url(arc.svg) 30deg / 50px 100px;\n",
		"initial value": "as each of the properties of the shorthand:offset-position (en-US): autooffset-path (en-US): noneoffset-distance (en-US): 0offset-anchor (en-US): autooffset-rotate (en-US): auto",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "offset"
	},
	"offset-anchor (en-US)": {
		"desc": "The offset-anchor CSS property specifies the point inside the box of an element traveling along an offset-path that is actually moving along the path.",
		"grammar": "/* Keyword values */\noffset-anchor: top;\noffset-anchor: bottom;\noffset-anchor: left;\noffset-anchor: right;\noffset-anchor: center;\noffset-anchor: auto;\n\n/* <percentage> values */\noffset-anchor: 25% 75%;\n\n/* <length> values */\noffset-anchor: 0 0;\noffset-anchor: 1cm 2cm;\noffset-anchor: 10ch 8em;\n\n/* Edge offsets values */\noffset-anchor: bottom 10px right 20px;\noffset-anchor: right 3em bottom 10px;\n\n/* Global values */\noffset-anchor: inherit;\noffset-anchor: initial;\noffset-anchor: revert;\noffset-anchor: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "transformable elements",
		"name": "offset-anchor (en-US)"
	},
	"offset-distance (en-US)": {
		"desc": "The offset-distance CSS property specifies a position along an offset-path for an element to be placed.",
		"grammar": "/* Default value */\noffset-distance: 0;\n\n/* the middle of the offset-path */\noffset-distance: 50%;\n\n/* a fixed length positioned along the path */\noffset-distance: 40px;\n\n/* Global values */\noffset-distance: inherit;\noffset-distance: initial;\noffset-distance: revert;\noffset-distance: revert-layer;\noffset-distance: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "transformable elements",
		"name": "offset-distance (en-US)"
	},
	"offset-path (en-US)": {
		"desc": "The offset-path CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.",
		"grammar": "/* Default */\noffset-path: none;\n\n/* Function values */\noffset-path: ray(45deg closest-side contain);\n\n/* URL */\noffset-path: url(#path);\n\n/* Shapes */\noffset-path: circle(50% at 25% 25%);\noffset-path: inset(50% 50% 50% 50%);\noffset-path: polygon(30% 0%, 70% 0%, 100% 50%, 30% 100%, 0% 70%, 0% 30%);\noffset-path: path('M 0,200 Q 200,200 260,80 Q 290,20 400,0 Q 300,100 400,200');\n\n/* Geometry Boxes */\noffset-path: margin-box;\noffset-path: stroke-box;\n\n/* Global values */\noffset-path: inherit;\noffset-path: initial;\noffset-path: revert;\noffset-path: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "transformable elements",
		"name": "offset-path (en-US)"
	},
	"offset-position (en-US)": {
		"desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.The offset-position CSS property defines the initial position of the offset-path.",
		"grammar": "/* Keyword values */\noffset-position: auto;\noffset-position: top;\noffset-position: bottom;\noffset-position: left;\noffset-position: right;\noffset-position: center;\n\n/* <percentage> values */\noffset-position: 25% 75%;\n\n/* <length> values */\noffset-position: 0 0;\noffset-position: 1cm 2cm;\noffset-position: 10ch 8em;\n\n/* Edge offsets values */\noffset-position: bottom 10px right 20px;\noffset-position: right 3em bottom 10px;\noffset-position: bottom 10px right;\noffset-position: top right 10px;\n\n/* Global values */\noffset-position: inherit;\noffset-position: initial;\noffset-position: revert;\noffset-position: revert-layer;\noffset-position: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "transformable elements",
		"name": "offset-position (en-US)"
	},
	"offset-rotate (en-US)": {
		"desc": "The offset-rotate CSS property defines the orientation/direction of the element as it is positioned along the offset-path.",
		"grammar": "/* Follow the path direction, with optional additional angle */\noffset-rotate: auto;\noffset-rotate: auto 45deg;\n\n/* Follow the path direction but facing the opposite direction of `auto` */\noffset-rotate: reverse;\n\n/* Keep a constant rotation regardless the position on the path */\noffset-rotate: 90deg;\noffset-rotate: .5turn;\n\n/* Global values */\noffset-rotate: inherit;\noffset-rotate: initial;\noffset-rotate: revert;\noffset-rotate: revert-layer;\noffset-rotate: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "transformable elements",
		"name": "offset-rotate (en-US)"
	},
	"opacity": {
		"desc": "",
		"grammar": "/* 完全不透明 */\nopacity: 1;\nopacity: 1.0;\n\n/* 半透明 */\nopacity: 0.6;\n\n/* 完全透明 */\nopacity: 0.0;\nopacity: 0;\n\nopacity: inherit;\n",
		"initial value": "1",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "opacity"
	},
	"order": {
		"desc": "",
		"grammar": "/* Numerical value including negative numbers */\norder: 5;\norder: -5;\n\n/* Global values */\norder: inherit;\norder: initial;\norder: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "Flex items, grid items, and absolutely-positioned flex and grid container children",
		"name": "order"
	},
	"orphans (en-US)": {
		"desc": "The orphans CSS property sets the minimum number of lines in a block container that must be shown at the bottom of a page, region, or column./* <integer> values */orphans: 2;orphans: 3; /* Global values */orphans: inherit;orphans: initial;orphans: revert;orphans: revert-layer;orphans: unset; In typography, an orphan is the first line of a paragraph that appears alone at the bottom of a page. (The paragraph continues on a following page.)",
		"grammar": "/* <integer> values */\norphans: 2;\norphans: 3;\n\n/* Global values */\norphans: inherit;\norphans: initial;\norphans: revert;\norphans: revert-layer;\norphans: unset;\n",
		"initial value": "2",
		"inherit": "yes",
		"applicable elements": "block container elements",
		"name": "orphans (en-US)"
	},
	"outline": {
		"desc": "CSS 的 outline 属性是在一条声明中设置多个轮廓属性的简写属性 ，例如 outline-style, outline-width 和 outline-color。",
		"initial value": "as each of the properties of the shorthand:outline-color: invert, for browsers supporting it, currentColor for the otheroutline-style: noneoutline-width: medium",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "outline"
	},
	"outline-color": {
		"desc": "outline-color CSS 属性 被用于设置一个元素轮廓的颜色。 这个展示项目的源码由 GitHub 托管 . 如果你对这个展示项目感兴趣，可以 clone https://github.com/mdn/interactive-examples 并向我们提交一个 pull request.大多时候使用outline而不是 outline-style, outline-width 和 outline-color会更方便。元素轮廓是绘制于元素周围的一条线，位于border的外围，使元素突出。不像 border，轮廓在元素的 frame 外绘制并且可能与其他元素重叠。而 border 不会出现这种现象 (除非故意).",
		"grammar": "/* <color> values */\noutline-color: #f92525;\noutline-color: rgb(30,222,121);\noutline-color: blue;\n\n/* Keyword value */\noutline-color: invert;\n\n/* Global values */\noutline-color: inherit;\noutline-color: initial;\noutline-color: unset;\n",
		"initial value": "invert, for browsers supporting it, currentColor for the other",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "outline-color"
	},
	"outline-offset": {
		"desc": "",
		"grammar": "/* <length> values */\noutline-offset: 3px;\noutline-offset: 0.2em;\n\n/* Global values */\noutline-offset: inherit;\noutline-offset: initial;\noutline-offset: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "outline-offset"
	},
	"outline-style": {
		"desc": "",
		"grammar": "/* 关键字 值 */\noutline-style: auto;\noutline-style: none;\noutline-style: dotted;\noutline-style: dashed;\noutline-style: solid;\noutline-style: double;\noutline-style: groove;\noutline-style: ridge;\noutline-style: inset;\noutline-style: outset;\n\n/* 全局 值*/\noutline-style: inherit;\noutline-style: initial;\noutline-style: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "outline-style"
	},
	"outline-width": {
		"desc": "CSS 属性 outline-width 用于设置一个元素的轮廓的厚度。元素轮廓是绘制于元素周围的一条线，位于 border 的外围。 大多情况下用简写属性 outline 定义轮廓外观会更方便。",
		"grammar": "/* Keyword values */\noutline-width: thin;\noutline-width: medium;\noutline-width: thick;\n\n/* <length> values */\noutline-width: 1px;\noutline-width: 0.1em;\n\n/* Global values */\noutline-width: inherit;\n",
		"initial value": "medium",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "outline-width"
	},
	"overflow": {
		"desc": "CSS 属性 overflow 定义当一个元素的内容太大而无法适应 块级格式化上下文 时候该做什么。它是 overflow-x 和overflow-y的 简写属性 。 这个选项包含剪切，显示滚动条，或者显示 从容器溢出到周围区域的内容。指定除visible(默认值) 以外的值将创建一个新的 块级格式化上下文. 这在技术层面上是必须的——如果一个浮动元素和滚动条相交，它会在每个滚动步骤后强行重新包装内容，从而导致慢滚动体验。为使 overflow 有效果，块级容器必须有一个指定的高度（height或者max-height）或者将white-space设置为nowrap。 注意： 设置一个轴为visible（默认值），同时设置另一个轴为不同的值，会导致设置visible的轴的行为会变成auto。 注意: 即使将 overflow 设置为 hidden，也可以使用 JavaScript Element.scrollTop 属性来滚动 HTML 元素。",
		"grammar": "/* 默认值。内容不会被修剪，会呈现在元素框之外 */\noverflow: visible;\n\n/* 内容会被修剪，并且其余内容不可见 */\noverflow: hidden;\n\n/* 内容会被修剪，浏览器会显示滚动条以便查看其余内容 */\noverflow: scroll;\n\n/* 由浏览器定夺，如果内容被修剪，就会显示滚动条 */\noverflow: auto;\n\n/* 规定从父元素继承 overflow 属性的值 */\noverflow: inherit;\n\n",
		"name": "overflow"
	},
	"overflow-anchor": {
		"desc": "overflow-anchor CSS 属性提供一种退出浏览器滚动锚定行为的方法，该行为会调整滚动位置以最大程度地减少内容偏移。默认情况下，在任何支持滚动锚定行为的浏览器中都将其启用。因此，仅当您在文档或文档的一部分中遇到滚动锚定问题并且需要关闭行为时，才通常需要更改此属性的值。",
		"grammar": "/* Keyword values */\noverflow-anchor: auto;\noverflow-anchor: none;\n\n/* Global values */\noverflow-anchor: inherit;\noverflow-anchor: initial;\noverflow-anchor: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "overflow-anchor"
	},
	"overflow-block": {
		"desc": "The overflow-block CSS property sets what shows when content overflows the block start and block end edges of a box. This may be nothing, a scroll bar, or the overflow content. The overflow-block property maps to overflow-y or overflow-x depending on the writing mode of the document.",
		"grammar": "/* Keyword values */\noverflow-block: visible;\noverflow-block: hidden;\noverflow-block: scroll;\noverflow-block: auto;\n\n/* Global values */\noverflow-block: inherit;\noverflow-block: initial;\noverflow-block: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "Block-containers, flex containers, and grid containers",
		"name": "overflow-block"
	},
	"overflow-clip-margin (en-US)": {
		"desc": "The overflow-clip-margin CSS property determines how far outside its bounds an element with overflow: clip may be painted before being clipped.",
		"grammar": "overflow-clip-margin: 20px;\noverflow-clip-margin: 1em;\n\n/* Global values */\noverflow-clip-margin: inherit;\noverflow-clip-margin: initial;\noverflow-clip-margin: revert;\noverflow-clip-margin: revert-layer;\noverflow-clip-margin: unset;\n",
		"initial value": "0px",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "overflow-clip-margin (en-US)"
	},
	"overflow-inline (en-US)": {
		"desc": "The overflow-inline CSS property sets what shows when content overflows the inline start and end edges of a box. This may be nothing, a scroll bar, or the overflow content. Note: The overflow-inline property maps to overflow-y or overflow-x depending on the writing mode of the document.",
		"grammar": "/* Keyword values */\noverflow-inline: visible;\noverflow-inline: hidden;\noverflow-inline: scroll;\noverflow-inline: auto;\n\n/* Global values */\noverflow-inline: inherit;\noverflow-inline: initial;\noverflow-inline: revert;\noverflow-inline: revert-layer;\noverflow-inline: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "Block-containers, flex containers, and grid containers",
		"name": "overflow-inline (en-US)"
	},
	"overflow-wrap": {
		"desc": "",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "non-replaced inline elements",
		"name": "overflow-wrap"
	},
	"overflow-x": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"initial value": "visible",
		"inherit": "否",
		"applicable elements": "Block-containers, flex containers, and grid containers",
		"name": "overflow-x"
	},
	"overflow-y": {
		"desc": "",
		"grammar": "<ul>\n  <li><code>overflow-y:scroll</code> — 总是显示滚动条\n  <div id=\"div1\">\n   歌词是诗歌的一种，入乐的叫歌，不入乐的叫诗（或词）。入乐的歌在感情抒发、形象塑造上和诗没有任何区别，但在结构上、节奏上要受音乐的制约，在韵律上要照顾演唱的方便，在遣词炼字上要考虑听觉艺术的特点，因为它要入乐歌唱。歌词与诗的分别，主要是诗不一定要入乐（合乐），歌词是要合乐的。合乐成为歌曲。歌词一般是配合曲子旋律一同出现的，歌词是歌曲的本意所在。现代一般是配合音乐，便于哼唱的语句。\n  </div>\n  </li>\n\n  <li><code>overflow-y:hidden</code> — 在盒子外隐藏溢出的内容\n  <div id=\"div2\">\n  歌词是诗歌的一种，入乐的叫歌，不入乐的叫诗（或词）。入乐的歌在感情抒发、形象塑造上和诗没有任何区别，但在结构上、节奏上要受音乐的制约，在韵律上要照顾演唱的方便，在遣词炼字上要考虑听觉艺术的特点，因为它要入乐歌唱。歌词与诗的分别，主要是诗不一定要入乐（合乐），歌词是要合乐的。合乐成为歌曲。歌词一般是配合曲子旋律一同出现的，歌词是歌曲的本意所在。现代一般是配合音乐，便于哼唱的语句。\n  </div>\n  </li>\n\n  <li><code>overflow-y:visible</code> — 在盒子外显示溢出的内容\n  <div id=\"div3\">\n    歌词是诗歌的一种，入乐的叫歌，不入乐的叫诗（或词）。入乐的歌在感情抒发、形象塑造上和诗没有任何区别，但在结构上、节奏上要受音乐的制约，在韵律上要照顾演唱的方便，在遣词炼字上要考虑听觉艺术的特点，因为它要入乐歌唱。歌词与诗的分别，主要是诗不一定要入乐（合乐），歌词是要合乐的。合乐成为歌曲。歌词一般是配合曲子旋律一同出现的，歌词是歌曲的本意所在。现代一般是配合音乐，便于哼唱的语句。\n    </div>\n  </li>\n\n  <li><code>overflow-y:auto</code> — 在大多数浏览器中，<code>auto</code> 效果等于 <code>scroll</code>\n  <div id=\"div4\">\n    歌词是诗歌的一种，入乐的叫歌，不入乐的叫诗（或词）。入乐的歌在感情抒发、形象塑造上和诗没有任何区别，但在结构上、节奏上要受音乐的制约，在韵律上要照顾演唱的方便，在遣词炼字上要考虑听觉艺术的特点，因为它要入乐歌唱。歌词与诗的分别，主要是诗不一定要入乐（合乐），歌词是要合乐的。合乐成为歌曲。歌词一般是配合曲子旋律一同出现的，歌词是歌曲的本意所在。现代一般是配合音乐，便于哼唱的语句。\n    </div>\n  </li>\n\n</ul>\n\n",
		"initial value": "visible",
		"inherit": "否",
		"applicable elements": "Block-containers, flex containers, and grid containers",
		"name": "overflow-y"
	},
	"overscroll-behavior": {
		"desc": "overscroll-behavior CSS 属性是 overscroll-behavior-x 和 overscroll-behavior-y 属性的合并写法，让你可以控制浏览器过度滚动时的表现——也就是滚动到边界。/* 关键字的值 */overscroll-behavior: auto; /* 默认 */overscroll-behavior: contain;overscroll-behavior: none; /* 使用 2 个值 */overscroll-behavior: auto contain; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 默认情况下，当触及页面顶部或者底部时（或者是其他可滚动区域），移动端浏览器倾向于提供一种“触底”效果，甚至进行页面刷新。你可能也发现了，当对话框中含有可滚动内容时，一旦滚动至对话框的边界，对话框下方的页面内容也开始滚动了——这被称为“滚动链”。 在某些情况下我们不想要这些表现，使用 overscroll-behavior 来去除不需要的滚动链，以及类似 QQ 一类的应用下拉刷新效果。初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as each of the properties of the shorthand:overscroll-behavior-x: as specifiedoverscroll-behavior-y: as specifiedAnimation typediscrete",
		"grammar": "/* 关键字的值 */\noverscroll-behavior: auto; /* 默认 */\noverscroll-behavior: contain;\noverscroll-behavior: none;\n\n/* 使用 2 个值 */\noverscroll-behavior: auto contain;\n\n/* Global values */\noverflow: inherit;\noverflow: initial;\noverflow: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
		"name": "overscroll-behavior"
	},
	"overscroll-behavior-block (en-US)": {
		"desc": "The overscroll-behavior-block CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.See overscroll-behavior for a full explanation./* Keyword values */overscroll-behavior-block: auto; /* default */overscroll-behavior-block: contain;overscroll-behavior-block: none; /* Global values */overscroll-behavior-block: inherit;overscroll-behavior-block: initial;overscroll-behavior-block: revert;overscroll-behavior-block: revert-layer;overscroll-behavior-block: unset;",
		"grammar": "/* Keyword values */\noverscroll-behavior-block: auto; /* default */\noverscroll-behavior-block: contain;\noverscroll-behavior-block: none;\n\n/* Global values */\noverscroll-behavior-block: inherit;\noverscroll-behavior-block: initial;\noverscroll-behavior-block: revert;\noverscroll-behavior-block: revert-layer;\noverscroll-behavior-block: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
		"name": "overscroll-behavior-block (en-US)"
	},
	"overscroll-behavior-inline (en-US)": {
		"desc": "The overscroll-behavior-inline CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.See overscroll-behavior for a full explanation./* Keyword values */overscroll-behavior-inline: auto; /* default */overscroll-behavior-inline: contain;overscroll-behavior-inline: none; /* Global values */overscroll-behavior-inline: inherit;overscroll-behavior-inline: initial;overscroll-behavior-inline: revert;overscroll-behavior-inline: revert-layer;overscroll-behavior-inline: unset;",
		"grammar": "/* Keyword values */\noverscroll-behavior-inline: auto; /* default */\noverscroll-behavior-inline: contain;\noverscroll-behavior-inline: none;\n\n/* Global values */\noverscroll-behavior-inline: inherit;\noverscroll-behavior-inline: initial;\noverscroll-behavior-inline: revert;\noverscroll-behavior-inline: revert-layer;\noverscroll-behavior-inline: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
		"name": "overscroll-behavior-inline (en-US)"
	},
	"overscroll-behavior-x": {
		"desc": "overscroll-behavior-x 这个 CSS 属性用来控制当滚动到区域的水平边界时的浏览器行为。 备注: 详细的解释请访问 overscroll-behavior /* Keyword values */overscroll-behavior: auto; /* default */overscroll-behavior: contain;overscroll-behavior: none; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\noverscroll-behavior: auto; /* default */\noverscroll-behavior: contain;\noverscroll-behavior: none;\n\n/* Global values */\noverflow: inherit;\noverflow: initial;\noverflow: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
		"name": "overscroll-behavior-x"
	},
	"overscroll-behavior-y": {
		"desc": "overscroll-behavior-y 这个 CSS 属性用来控制当滚动到区域的垂直边界时的浏览器行为。 Note: 详细的解释请访问 overscroll-behavior。 /* Keyword values */overscroll-behavior: auto; /* default */overscroll-behavior: contain;overscroll-behavior: none; /* Global values */overflow: inherit;overflow: initial;overflow: unset; 初始值auto适用元素non-replaced block-level elements and non-replaced inline-block elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\noverscroll-behavior: auto; /* default */\noverscroll-behavior: contain;\noverscroll-behavior: none;\n\n/* Global values */\noverflow: inherit;\noverflow: initial;\noverflow: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "non-replaced block-level elements and non-replaced inline-block elements",
		"name": "overscroll-behavior-y"
	},
	"padding": {
		"desc": "padding CSS 简写属性控制元素所有四条边的内边距区域。 这个可交互示例的源码保存在一个 GitHub 仓库中。如果你有兴趣为这个交互示例项目做作出贡献，请 clone 下 https://github.com/mdn/interactive-examples 然后给我们提一个 pull request.一个元素的内边距区域指的是其内容与其边框之间的空间。 注意：内边距控制的是元素内部空出的空间。相反，margin 操作元素 外部空出的空间。",
		"grammar": "/* 应用于所有边 */\npadding: 1em;\n\n/* 上边下边 | 左边右边 */\npadding: 5% 10%;\n\n/* 上边 | 左边右边 | 下边 */\npadding: 1em 2em 2em;\n\n/* 上边 | 右边 | 下边 | 左边 */\npadding: 5px 1em 0 2em;\n\n/* 全局值 */\npadding: inherit;\npadding: initial;\npadding: unset;\n",
		"initial value": "as each of the properties of the shorthand:padding-bottom: 0padding-left: 0padding-right: 0padding-top: 0",
		"inherit": "否",
		"applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
		"name": "padding"
	},
	"padding-block-end (en-US)": {
		"desc": "The padding-block-end CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
		"grammar": "/* <length> values */\npadding-block-end: 10px;      /* An absolute length */\npadding-block-end: 1em;       /* A length relative to the text size */\n\n/* <percentage> value */\npadding-block-end: 5%;        /* A padding relative to the block container's width */\n\n/* Global values */\npadding-block-end: inherit;\npadding-block-end: initial;\npadding-block-end: revert;\npadding-block-end: revert-layer;\npadding-block-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "padding-block-end (en-US)"
	},
	"padding-block-start (en-US)": {
		"desc": "The padding-block-start CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
		"grammar": "/* <length> values */\npadding-block-start: 10px;      /* An absolute length */\npadding-block-start: 1em;       /* A length relative to the text size */\n\n/* <percentage> value */\npadding-block-start: 5%;        /* A padding relative to the block container's width */\n\n/* Global values */\npadding-block-start: inherit;\npadding-block-start: initial;\npadding-block-start: revert;\npadding-block-start: revert-layer;\npadding-block-start: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "padding-block-start (en-US)"
	},
	"padding-bottom": {
		"desc": "CSS 属性 padding-bottom 是指一个元素在内边距区域（padding area）中下方的高度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。 /* <length> values */padding-bottom: 0.5em;padding-bottom: 0;padding-bottom: 2cm; /* <percentage> value */padding-bottom: 10%; /* Global values */padding-bottom: inherit;padding-bottom: initial;padding-bottom: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
		"grammar": "/* <length> values */\npadding-bottom: 0.5em;\npadding-bottom: 0;\npadding-bottom: 2cm;\n\n/* <percentage> value */\npadding-bottom: 10%;\n\n/* Global values */\npadding-bottom: inherit;\npadding-bottom: initial;\npadding-bottom: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
		"name": "padding-bottom"
	},
	"padding-inline-end (en-US)": {
		"desc": "The padding-inline-end CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
		"grammar": "/* <length> values */\npadding-inline-end: 10px;     /* An absolute length */\npadding-inline-end: 1em;      /* A length relative to the text size */\n\n/* <percentage> value */\npadding-inline-end: 5%;       /* A padding relative to the block container's width */\n\n/* Global values */\npadding-inline-end: inherit;\npadding-inline-end: initial;\npadding-inline-end: revert;\npadding-inline-end: revert-layer;\npadding-inline-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "padding-inline-end (en-US)"
	},
	"padding-inline-start": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* <length> values */\npadding-inline-start: 10px;   /* An absolute length */\npadding-inline-start: 1em;    /* A length relative to the text size */\n\n/* <percentage> value */\npadding-inline-start: 5%;     /* A padding relative to the block container's width */\n\n/* Global values */\npadding-inline-start: inherit;\npadding-inline-start: initial;\npadding-inline-start: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "padding-inline-start"
	},
	"padding-left": {
		"desc": "CSS 属性 padding-left 是指一个元素在内边距区域（padding area）中左边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。 元素的“填充区域”是其内容和边框之间的空间。 贴士： padding 属性可用于通过一个声明在元素的四个边（上、下、左、右）上设置填充。",
		"grammar": "/* 长度单位参数 */\npadding-left: 0.5em;\npadding-left: 0;\npadding-left: 2cm;\n\n/* 百分数参数 */\npadding-left: 10%;\n\n/* 全局参数 */\npadding-left: inherit;\npadding-left: initial;\npadding-left: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
		"name": "padding-left"
	},
	"padding-right": {
		"desc": "CSS 属性 padding-right 是指一个元素在内边距区域（padding area）中右边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。/* <length> values */padding-right: 0.5em;padding-right: 0;padding-right: 2cm; /* <percentage> value */padding-right: 10%; /* Global values */padding-right: inherit;padding-right: initial;padding-right: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
		"grammar": "/* <length> values */\npadding-right: 0.5em;\npadding-right: 0;\npadding-right: 2cm;\n\n/* <percentage> value */\npadding-right: 10%;\n\n/* Global values */\npadding-right: inherit;\npadding-right: initial;\npadding-right: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
		"name": "padding-right"
	},
	"padding-top": {
		"desc": "CSS 属性 padding-top 是指一个元素在内边距区域（padding area）中上方的高度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种 CSS 缩写属性。 /* <length> values */padding-top: 0.5em;padding-top: 0;padding-top: 2cm; /* <percentage> value */padding-top: 10%; /* Global values */padding-top: inherit;padding-top: initial;padding-top: unset; 初始值0适用元素all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.是否是继承属性否Percentagesrefer to the width of the containing block计算值the percentage as specified or the absolute lengthAnimation typea length",
		"grammar": "/* <length> values */\npadding-top: 0.5em;\npadding-top: 0;\npadding-top: 2cm;\n\n/* <percentage> value */\npadding-top: 10%;\n\n/* Global values */\npadding-top: inherit;\npadding-top: initial;\npadding-top: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements, except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column. It also applies to ::first-letter and ::first-line.",
		"name": "padding-top"
	},
	"page-break-after": {
		"desc": "page-break-after CSS 属性调整当前元素之后的分页符。此属性适用于生成一个盒子的块元素。它不适用于不会生成一个盒子的空 <div>。/* Keyword values */page-break-after: auto;page-break-after: always;page-break-after: avoid;page-break-after: left;page-break-after: right;page-break-after: recto;page-break-after: verso; /* Global values */page-break-after: inherit;page-break-after: initial;page-break-after: unset; Note: 这个属性正在被更通用的 break-after 取代。这个新的属性也处理列和区域中断，并在语法上兼容 page-break-after。在使用 page-break-after 之前，请检查是否可以使用 break-after 代替。在将来， page-break-after 将只是它的一些值的别名。",
		"grammar": "/* Keyword values */\npage-break-after: auto;\npage-break-after: always;\npage-break-after: avoid;\npage-break-after: left;\npage-break-after: right;\npage-break-after: recto;\npage-break-after: verso;\n\n/* Global values */\npage-break-after: inherit;\npage-break-after: initial;\npage-break-after: unset;\n",
		"name": "page-break-after"
	},
	"page-break-before (en-US)": {
		"desc": "Warning: This property has been replaced by the break-before property. The page-break-before CSS property adjusts page breaks before the current element.This property applies to block elements that generate a box. It won't apply on an empty <div> that won't generate a box./* Keyword values */page-break-before: auto;page-break-before: always;page-break-before: avoid;page-break-before: left;page-break-before: right;page-break-before: recto;page-break-before: verso; /* Global values */page-break-before: inherit;page-break-before: initial;page-break-before: revert;page-break-before: revert-layer;page-break-before: unset;",
		"grammar": "/* Keyword values */\npage-break-before: auto;\npage-break-before: always;\npage-break-before: avoid;\npage-break-before: left;\npage-break-before: right;\npage-break-before: recto;\npage-break-before: verso;\n\n/* Global values */\npage-break-before: inherit;\npage-break-before: initial;\npage-break-before: revert;\npage-break-before: revert-layer;\npage-break-before: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.",
		"name": "page-break-before (en-US)"
	},
	"page-break-inside": {
		"desc": "page-break-inside CSS 属性调整当前元素内的分页符。/* Keyword values */page-break-inside: auto;page-break-inside: avoid; /* Global values */page-break-inside: inherit;page-break-inside: initial;page-break-inside: unset; 初始值auto适用元素block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\npage-break-inside: auto;\npage-break-inside: avoid;\n\n/* Global values */\npage-break-inside: inherit;\npage-break-inside: initial;\npage-break-inside: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "block-level elements in the normal flow of the root element. User agents may also apply it to other elements like table-row elements.",
		"name": "page-break-inside"
	},
	"perspective": {
		"desc": "CSS 属性 perspective指定了观察者与 z=0 平面的距离，使具有三维位置变换的元素产生透视效果。z>0 的三维元素比正常大，而 z<0 时则比正常小，大小程度由该属性的值决定。 三维元素在观察者后面的部分不会绘制出来，即 z 轴坐标值大于 perspective 属性值的部分。默认情况下，消失点位于元素的中心，但是可以通过设置 perspective-origin 属性来改变其位置。当该属性值不为 0 和 none 时，会创建新的 层叠上下文。在这种情况下，容器内元素的层叠关系像是使用了 position: fixed 一样。",
		"grammar": "/* Keyword value */\nperspective: none;\n\n/* <length> values */\nperspective: 20px;\nperspective: 3.5em;\n\n/* Global values */\nperspective: inherit;\nperspective: initial;\nperspective: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "perspective"
	},
	"perspective-origin": {
		"desc": "CSS 属性 perspective-origin 指定了观察者的位置，用作 perspective 属性的消失点。",
		"grammar": "/* One-value syntax */\nperspective-origin: x-position;\n\n/* Two-value syntax */\nperspective-origin: x-position y-position;\n\n/* When both x-position and y-position are keywords,\n   the following is also valid */\nperspective-origin: y-position x-position;\n\n/* Global values */\nperspective-origin: inherit;\nperspective-origin: initial;\nperspective-origin: unset;\n",
		"initial value": "50% 50%",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "perspective-origin"
	},
	"place-content": {
		"desc": "place-content 属性是align-content 和 justify-content的简写。使用这两个属性的值可以用于任何的布局情况。",
		"grammar": "/* Positional alignment */\n/* align-content does not take left and right values */\nplace-content: center start;\nplace-content: start center;\nplace-content: end left;\nplace-content: flex-start center;\nplace-content: flex-end center;\n\n/* Baseline alignment */\n/* justify-content does not take baseline values */\nplace-content: baseline center;\nplace-content: first baseline space-evenly;\nplace-content: last baseline right;\n\n/* Distributed alignment */\nplace-content: space-between space-evenly;\nplace-content: space-around space-evenly;\nplace-content: space-evenly stretch;\nplace-content: stretch space-evenly;\n\n/* Global values */\nplace-content: inherit;\nplace-content: initial;\nplace-content: unset;",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "multi-line flex containers",
		"name": "place-content"
	},
	"place-items": {
		"desc": "CSS 中的 place-items 是一个简写属性 ，它允许你在相关的布局（如 Grid 或 Flexbox）中可以同时沿着块级和内联方向对齐元素 (例如：align-items 和 justify-items 属性) 。如果未提供第二个值，则第一个值作为第二个值的默认值。",
		"grammar": "/* Keyword values */\nplace-items: auto center;\nplace-items: normal start;\n\n/* Positional alignment */\nplace-items: center normal;\nplace-items: start auto;\nplace-items: end normal;\nplace-items: self-start auto;\nplace-items: self-end normal;\nplace-items: flex-start auto;\nplace-items: flex-end normal;\nplace-items: left auto;\nplace-items: right normal;\n\n/* Baseline alignment */\nplace-items: baseline normal;\nplace-items: first baseline auto;\nplace-items: last baseline normal;\nplace-items: stretch auto;\n\n/* Global values */\nplace-items: inherit;\nplace-items: initial;\nplace-items: unset;\n",
		"initial value": "as each of the properties of the shorthand:align-items: normaljustify-items: legacy",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "place-items"
	},
	"place-self (en-US)": {
		"desc": "The place-self CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the align-self and justify-self properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.",
		"grammar": "/* Keyword values */\nplace-self: auto center;\nplace-self: normal start;\n\n/* Positional alignment */\nplace-self: center normal;\nplace-self: start auto;\nplace-self: end normal;\nplace-self: self-start auto;\nplace-self: self-end normal;\nplace-self: flex-start auto;\nplace-self: flex-end normal;\nplace-self: left auto;\nplace-self: right normal;\n\n/* Baseline alignment */\nplace-self: baseline normal;\nplace-self: first baseline auto;\nplace-self: last baseline normal;\nplace-self: stretch auto;\n\n/* Global values */\nplace-self: inherit;\nplace-self: initial;\nplace-self: revert;\nplace-self: revert-layer;\nplace-self: unset;\n",
		"initial value": "as each of the properties of the shorthand:align-self: autojustify-self: auto",
		"inherit": "no",
		"applicable elements": "block-level boxes, absolutely-positioned boxes, and grid items",
		"name": "place-self (en-US)"
	},
	"pointer-events": {
		"desc": "pointer-events CSS 属性指定在什么情况下 (如果有) 某个特定的图形元素可以成为鼠标事件的 target (en-US)。/* Keyword values */pointer-events: auto;pointer-events: none;pointer-events: visiblePainted; /* SVG only */pointer-events: visibleFill; /* SVG only */pointer-events: visibleStroke; /* SVG only */pointer-events: visible; /* SVG only */pointer-events: painted; /* SVG only */pointer-events: fill; /* SVG only */pointer-events: stroke; /* SVG only */pointer-events: all; /* SVG only */ /* Global values */pointer-events: inherit;pointer-events: initial;pointer-events: unset;当此属性未指定时，visiblePainted值的相同特征适用于 SVG（可缩放矢量图形）内容。除了指示该元素不是鼠标事件的目标之外，值none表示鼠标事件“穿透”该元素并且指定该元素“下面”的任何东西。初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\npointer-events: auto;\npointer-events: none;\npointer-events: visiblePainted; /* SVG only */\npointer-events: visibleFill;    /* SVG only */\npointer-events: visibleStroke;  /* SVG only */\npointer-events: visible;        /* SVG only */\npointer-events: painted;        /* SVG only */\npointer-events: fill;           /* SVG only */\npointer-events: stroke;         /* SVG only */\npointer-events: all;            /* SVG only */\n\n/* Global values */\npointer-events: inherit;\npointer-events: initial;\npointer-events: unset;",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "pointer-events"
	},
	"position": {
		"desc": "CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。",
		"grammar": "<div class=\"box\" id=\"one\">One</div>\n<div class=\"box\" id=\"two\">Two</div>\n<div class=\"box\" id=\"three\">Three</div>\n<div class=\"box\" id=\"four\">Four</div>",
		"initial value": "static",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "position"
	},
	"print-color-adjust (en-US)": {
		"desc": "The print-color-adjust CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.",
		"grammar": "print-color-adjust: economy;\nprint-color-adjust: exact;\n\n/* Global values */\nprint-color-adjust: inherit;\nprint-color-adjust: initial;\nprint-color-adjust: revert;\nprint-color-adjust: revert-layer;\nprint-color-adjust: unset;\n",
		"initial value": "economy",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "print-color-adjust (en-US)"
	},
	"quotes": {
		"desc": "quotes CSS 属性用于设置引号的样式。",
		"grammar": "/* Keyword value */\nquotes: none;\n\n/* <string> values */\nquotes: \"«\" \"»\";           /* Set open-quote and close-quote to the French quotation marks */\nquotes: \"«\" \"»\" \"‹\" \"›\";   /* Set two levels of quotation marks */\n\n/* Global values */\nquotes: inherit;\nquotes: initial;\nquotes: unset;\n",
		"initial value": "depends on user agent",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "quotes"
	},
	"resize": {
		"desc": "",
		"grammar": "/* Keyword values */\nresize: none;\nresize: both;\nresize: horizontal;\nresize: vertical;\nresize: block;\nresize: inline;\n\n/* Global values */\nresize: inherit;\nresize: initial;\nresize: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "elements with overflow other than visible, and optionally replaced elements representing images or videos, and iframes",
		"name": "resize"
	},
	"right": {
		"desc": "right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。/* <length> values */right: 3px;right: 2.4em; /* <percentage>s of the width of the containing block */right: 10%; /* Keyword value */right: auto; /* Global values */right: inherit;right: initial;right: unset; right的效果取决于元素的position属性： 当position设置为absolute或fixed时，right属性指定了定位元素右外边距边界与其包含块右边界之间的偏移。当position设置为relative时，right属性指定了元素的右边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，right属性的效果和 position 为relative等同；如果元素在 viewport 外面，right属性的效果和 position 为fixed等同。当position设置为static时，right属性无效。 当left​​​​​​和 right 同时指定时，元素的位置会被重复指定。当容器是从左到右时，left的值会被优先设定；当容器是从右到左时，right的值会被优先设定。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the width of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
		"grammar": "/* <length> values */\nright: 3px;\nright: 2.4em;\n\n/* <percentage>s of the width of the containing block */\nright: 10%;\n\n/* Keyword value */\nright: auto;\n\n/* Global values */\nright: inherit;\nright: initial;\nright: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "positioned elements",
		"name": "right"
	},
	"rotate": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。rotate属性允许你单独设置transform的旋转属性。这种映射方式可以让我们更方便的设置我们想要的效果，并且避免了简写形式需要记忆属性顺序的不方便之处。",
		"grammar": "/* Keyword values */\nscale: none;\n\n/* Angle value */\nrotate: 90deg;\nrotate: 0.25turn;\nrotate: 1.57rad;\n\n/* x, y, or z axis name plus angle */\nrotate: x 90deg;\nrotate: y 0.25turn;\nrotate: z 1.57rad;\n\n/* Vector plus angle value */\nrotate: 1 1 1 90deg;",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "rotate"
	},
	"row-gap (grid-row-gap)": {
		"desc": "row-gap 该 CSS 属性用来设置行元素之间的间隙（gutter）大小。",
		"grammar": "/* <length> values */\nrow-gap: 20px;\nrow-gap: 1em;\nrow-gap: 3vmin;\nrow-gap: 0.5cm;\n\n/* <percentage> value */\nrow-gap: 10%;\n\n/* Global values */\nrow-gap: inherit;\nrow-gap: initial;\nrow-gap: revert;\nrow-gap: revert-layer;\nrow-gap: unset;\n",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "multi-column elements, flex containers, grid containers",
		"name": "row-gap (grid-row-gap)"
	},
	"ruby-align (en-US)": {
		"desc": "The ruby-align CSS property defines the distribution of the different ruby elements over the base./* Keyword values */ruby-align: start;ruby-align: center;ruby-align: space-between;ruby-align: space-around; /* Global values */ruby-align: inherit;ruby-align: initial;ruby-align: revert;ruby-align: revert-layer;ruby-align: unset;",
		"grammar": "/* Keyword values */\nruby-align: start;\nruby-align: center;\nruby-align: space-between;\nruby-align: space-around;\n\n/* Global values */\nruby-align: inherit;\nruby-align: initial;\nruby-align: revert;\nruby-align: revert-layer;\nruby-align: unset;\n",
		"initial value": "space-around",
		"inherit": "yes",
		"applicable elements": "ruby bases, ruby annotations, ruby base containers, ruby annotation containers",
		"name": "ruby-align (en-US)"
	},
	"ruby-position (en-US)": {
		"desc": "The ruby-position CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (over), under it (under), or between the characters on their right side (inter-character).",
		"grammar": "/* Keyword values */\nruby-position: over;\nruby-position: under;\nruby-position: inter-character;\nruby-position: alternate;\n\n/* Global values */\nruby-position: inherit;\nruby-position: initial;\nruby-position: revert;\nruby-position: revert-layer;\nruby-position: unset;\n",
		"initial value": "alternate",
		"inherit": "yes",
		"applicable elements": "ruby annotations containers",
		"name": "ruby-position (en-US)"
	},
	"scale": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 scale 允许你可以分别且独立地指定 CSS 属性 transform 缩放的比例。这更好地映射到典型的 UI（用户界面）用法中，并免去了在指定变换值时必须记住变换函数的精确顺序的麻烦。",
		"grammar": "/* 关键值 */\nscale: none;\n\n/* 单个值 */\n/* 设定比 1 大的数值使该元素变大 */\nscale: 2;\n/* 设定比 1 小的数值使该元素缩小 */\nscale: 0.5;\n\n/* 两个值 */\nscale: 2 0.5;\n\n/* 三个值 */\nscale: 2 0.5 2;",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "scale"
	},
	"scroll-behavior": {
		"desc": "当用户手动导航或者 CSSOM scrolling API 触发滚动操作时，CSS 属性 scroll-behavior 为一个滚动框指定滚动行为，其他任何的滚动，例如那些由于用户行为而产生的滚动，不受这个属性的影响。在根元素中指定这个属性时，它反而适用于视窗。初始值auto适用元素scrolling boxes是否是继承属性否计算值as specifiedAnimation typediscrete 用户代理可以忽略此属性。",
		"grammar": "/* Keyword values */\nscroll-behavior: auto;\nscroll-behavior: smooth;\n\n/* Global values */\nscroll-behavior: inherit;\nscroll-behavior: initial;\nscroll-behavior: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "scrolling boxes",
		"name": "scroll-behavior"
	},
	"scroll-margin": {
		"desc": "scroll-margin 属性是修改一系列 scroll-margin 手写特性的快捷方式，它分配值的方式与 margin 属性为各个 margin-* 手写特性分配值的方式非常类似。 这个示例的代码存放在 Github 仓库。如果你想对这个项目贡献代码，请从 https://github.com/mdn/interactive-examples 克隆项目，并且向我们提交 PR。scroll-margin 属性的值代表用于将盒元素拖拽到显示区域的拖拽滚动区域的起点。拖拽滚动区域由是由转换后边框大小的盒元素决定的，它会找到盒元素的矩形边界（在滚动的容器的坐标空间轴上），并添加指定的起点。初始值0适用元素all elements是否是继承属性否计算值as specifiedAnimation typeby computed value type",
		"grammar": "/* <length> values */\nscroll-margin: 10px;\nscroll-margin: 1em .5em 1em 1em;\n\n/* Global values */\nscroll-margin: inherit;\nscroll-margin: initial;\nscroll-margin: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "scroll-margin"
	},
	"scroll-margin-block (en-US)": {
		"desc": "The scroll-margin-block shorthand property sets the scroll margins of an element in the block dimension.",
		"grammar": "/* <length> values */\nscroll-margin-block: 10px;\nscroll-margin-block: 1em .5em ;\n\n/* Global values */\nscroll-margin-block: inherit;\nscroll-margin-block: initial;\nscroll-margin-block: revert;\nscroll-margin-block: revert-layer;\nscroll-margin-block: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-block (en-US)"
	},
	"scroll-margin-block-end (en-US)": {
		"desc": "The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-block-end: 10px;\nscroll-margin-block-end: 1em;\n\n/* Global values */\nscroll-margin-block-end: inherit;\nscroll-margin-block-end: initial;\nscroll-margin-block-end: revert;\nscroll-margin-block-end: revert-layer;\nscroll-margin-block-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-block-end (en-US)"
	},
	"scroll-margin-block-start (en-US)": {
		"desc": "The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-block-start: 10px;\nscroll-margin-block-start: 1em;\n\n/* Global values */\nscroll-margin-block-start: inherit;\nscroll-margin-block-start: initial;\nscroll-margin-block-start: revert;\nscroll-margin-block-start: revert-layer;\nscroll-margin-block-start: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-block-start (en-US)"
	},
	"scroll-margin-bottom (en-US)": {
		"desc": "The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-bottom: 10px;\nscroll-margin-bottom: 1em;\n\n/* Global values */\nscroll-margin-bottom: inherit;\nscroll-margin-bottom: initial;\nscroll-margin-bottom: revert;\nscroll-margin-bottom: revert-layer;\nscroll-margin-bottom: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-bottom (en-US)"
	},
	"scroll-margin-inline (en-US)": {
		"desc": "The scroll-margin-inline shorthand property sets the scroll margins of an element in the inline dimension.",
		"grammar": "/* <length> values */\nscroll-margin-inline: 10px;\nscroll-margin-inline: 1em .5em ;\n\n/* Global values */\nscroll-margin-inline: inherit;\nscroll-margin-inline: initial;\nscroll-margin-inline: revert;\nscroll-margin-inline: revert-layer;\nscroll-margin-inline: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-inline (en-US)"
	},
	"scroll-margin-inline-end (en-US)": {
		"desc": "The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-inline-end: 10px;\nscroll-margin-inline-end: 1em;\n\n/* Global values */\nscroll-margin-inline-end: inherit;\nscroll-margin-inline-end: initial;\nscroll-margin-inline-end: revert;\nscroll-margin-inline-end: revert-layer;\nscroll-margin-inline-end: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-inline-end (en-US)"
	},
	"scroll-margin-inline-start (en-US)": {
		"desc": "The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-inline-start: 10px;\nscroll-margin-inline-start: 1em;\n\n/* Global values */\nscroll-margin-inline-start: inherit;\nscroll-margin-inline-start: initial;\nscroll-margin-inline-start: revert;\nscroll-margin-inline-start: revert-layer;\nscroll-margin-inline-start: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-inline-start (en-US)"
	},
	"scroll-margin-left (en-US)": {
		"desc": "The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-left: 10px;\nscroll-margin-left: 1em;\n\n/* Global values */\nscroll-margin-left: inherit;\nscroll-margin-left: initial;\nscroll-margin-left: revert;\nscroll-margin-left: revert-layer;\nscroll-margin-left: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-left (en-US)"
	},
	"scroll-margin-right (en-US)": {
		"desc": "The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
		"grammar": "/* <length> values */\nscroll-margin-right: 10px;\nscroll-margin-right: 1em;\n\n/* Global values */\nscroll-margin-right: inherit;\nscroll-margin-right: initial;\nscroll-margin-right: revert;\nscroll-margin-right: revert-layer;\nscroll-margin-right: unset;\n",
		"initial value": "0",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "scroll-margin-right (en-US)"
	},
	"scroll-margin-top": {
		"desc": "scroll-margin-top 属性定义了滚动捕捉区域的顶边距，用于在捕捉视口上捕捉该盒子。滚动捕捉区域是由变换后的边框决定的，找到它的矩形边界框（在滚动容器的坐标空间轴中轴对齐），然后添加指定的起始点。",
		"grammar": "/* <length> values */\nscroll-margin-top: 10px;\nscroll-margin-top: 1em;\n\n/* Global values */\nscroll-margin-top: inherit;\nscroll-margin-top: initial;\nscroll-margin-top: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "scroll-margin-top"
	},
	"scroll-padding (en-US)": {
		"desc": "The scroll-padding shorthand property sets scroll padding on all sides of an element at once, much like the padding property does for padding on an element.",
		"grammar": "/* Keyword values */\nscroll-padding: auto;\n\n/* <length> values */\nscroll-padding: 10px;\nscroll-padding: 1em .5em 1em 1em;\nscroll-padding: 10%;\n\n/* Global values */\nscroll-padding: inherit;\nscroll-padding: initial;\nscroll-padding: revert;\nscroll-padding: revert-layer;\nscroll-padding: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding (en-US)"
	},
	"scroll-padding-block-end (en-US)": {
		"desc": "The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-block-end: auto;\n\n/* <length> values */\nscroll-padding-block-end: 10px;\nscroll-padding-block-end: 1em;\nscroll-padding-block-end: 10%;\n\n/* Global values */\nscroll-padding-block-end: inherit;\nscroll-padding-block-end: initial;\nscroll-padding-block-end: revert;\nscroll-padding-block-end: revert-layer;\nscroll-padding-block-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-block-end (en-US)"
	},
	"scroll-padding-block-start (en-US)": {
		"desc": "The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-block-start: auto;\n\n/* <length> values */\nscroll-padding-block-start: 10px;\nscroll-padding-block-start: 1em;\nscroll-padding-block-start: 10%;\n\n/* Global values */\nscroll-padding-block-start: inherit;\nscroll-padding-block-start: initial;\nscroll-padding-block-start: revert;\nscroll-padding-block-start: revert-layer;\nscroll-padding-block-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-block-start (en-US)"
	},
	"scroll-padding-bottom (en-US)": {
		"desc": "The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-bottom: auto;\n\n/* <length> values */\nscroll-padding-bottom: 10px;\nscroll-padding-bottom: 1em;\nscroll-padding-bottom: 10%;\n\n/* Global values */\nscroll-padding-bottom: inherit;\nscroll-padding-bottom: initial;\nscroll-padding-bottom: revert;\nscroll-padding-bottom: revert-layer;\nscroll-padding-bottom: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-bottom (en-US)"
	},
	"scroll-padding-inline (en-US)": {
		"desc": "The scroll-padding-inline shorthand property sets the scroll padding of an element in the inline dimension.",
		"grammar": "/* Keyword values */\nscroll-padding-inline: auto;\n\n/* <length> values */\nscroll-padding-inline: 10px;\nscroll-padding-inline: 1em .5em;\nscroll-padding-inline: 10%;\n\n/* Global values */\nscroll-padding-inline: inherit;\nscroll-padding-inline: initial;\nscroll-padding-inline: revert;\nscroll-padding-inline: revert-layer;\nscroll-padding-inline: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-inline (en-US)"
	},
	"scroll-padding-inline-end (en-US)": {
		"desc": "The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-inline-end: auto;\n\n/* <length> values */\nscroll-padding-inline-end: 10px;\nscroll-padding-inline-end: 1em;\nscroll-padding-inline-end: 10%;\n\n/* Global values */\nscroll-padding-inline-end: inherit;\nscroll-padding-inline-end: initial;\nscroll-padding-inline-end: revert;\nscroll-padding-inline-end: revert-layer;\nscroll-padding-inline-end: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-inline-end (en-US)"
	},
	"scroll-padding-inline-start (en-US)": {
		"desc": "The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-inline-start: auto;\n\n/* <length> values */\nscroll-padding-inline-start: 10px;\nscroll-padding-inline-start: 1em;\nscroll-padding-inline-start: 10%;\n\n/* Global values */\nscroll-padding-inline-start: inherit;\nscroll-padding-inline-start: initial;\nscroll-padding-inline-start: revert;\nscroll-padding-inline-start: revert-layer;\nscroll-padding-inline-start: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-inline-start (en-US)"
	},
	"scroll-padding-left (en-US)": {
		"desc": "The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-left: auto;\n\n/* <length> values */\nscroll-padding-left: 10px;\nscroll-padding-left: 1em;\nscroll-padding-left: 10%;\n\n/* Global values */\nscroll-padding-left: inherit;\nscroll-padding-left: initial;\nscroll-padding-left: revert;\nscroll-padding-left: revert-layer;\nscroll-padding-left: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-left (en-US)"
	},
	"scroll-padding-right (en-US)": {
		"desc": "The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-right: auto;\n\n/* <length> values */\nscroll-padding-right: 10px;\nscroll-padding-right: 1em;\nscroll-padding-right: 10%;\n\n/* Global values */\nscroll-padding-right: inherit;\nscroll-padding-right: initial;\nscroll-padding-right: revert;\nscroll-padding-right: revert-layer;\nscroll-padding-right: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-right (en-US)"
	},
	"scroll-padding-top (en-US)": {
		"desc": "The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
		"grammar": "/* Keyword values */\nscroll-padding-top: auto;\n\n/* <length> values */\nscroll-padding-top: 10px;\nscroll-padding-top: 1em;\nscroll-padding-top: 10%;\n\n/* Global values */\nscroll-padding-top: inherit;\nscroll-padding-top: initial;\nscroll-padding-top: revert;\nscroll-padding-top: revert-layer;\nscroll-padding-top: unset;\n",
		"initial value": "auto",
		"inherit": "no",
		"applicable elements": "scroll containers",
		"name": "scroll-padding-top (en-US)"
	},
	"scroll-snap-coordinate": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* 关键值 */\nscroll-snap-coordinate: none;\n\n/* <位置>值 */\nscroll-snap-coordinate: 50px 50px;                   /* 单坐标 */\nscroll-snap-coordinate: 100px 100px, 100px bottom;   /* 多坐标 */\n\n/* 全局值 */\nscroll-snap-coordinate: inherit;\nscroll-snap-coordinate: initial;\nscroll-snap-coordinate: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "scroll-snap-coordinate"
	},
	"scroll-snap-destination": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* <位置>值 */\nscroll-snap-destination: 400px 600px;\n\n/* 全局值 */\nscroll-snap-destination: inherit;\nscroll-snap-destination: initial;\nscroll-snap-destination: unset;\n",
		"initial value": "0px 0px",
		"inherit": "否",
		"applicable elements": "scroll containers",
		"name": "scroll-snap-destination"
	},
	"scroll-snap-points-x": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
		"grammar": "/* 关键值 */\nscroll-snap-points-x: none;\n\n/* 重复的 snap 点 */\nscroll-snap-points-x: repeat(400px);\n\n/* 全局值 */\nscroll-snap-points-x: inherit;\nscroll-snap-points-x: initial;\nscroll-snap-points-x: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "scroll containers",
		"name": "scroll-snap-points-x"
	},
	"scroll-snap-points-y": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。已废弃: 该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。",
		"grammar": "/* 关键值 */\nscroll-snap-points-y: none;\n\n/* 重复的 snap 点 */\nscroll-snap-points-y: repeat(400px);\n\n/* 全局值 */\nscroll-snap-points-y: inherit;\nscroll-snap-points-y: initial;\nscroll-snap-points-y: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "scroll containers",
		"name": "scroll-snap-points-y"
	},
	"scroll-snap-type": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* 关键值 */\nscroll-snap-type: none;\nscroll-snap-type: x;\nscroll-snap-type: y;\nscroll-snap-type: block;\nscroll-snap-type: inline;\nscroll-snap-type: both;\n\n/* 可选 mandatory | proximity*/\nscroll-snap-type: x mandatory;\nscroll-snap-type: y proximity;\nscroll-snap-type: both mandatory;\n\n/* etc */\n\n/* 全局值 */\nscroll-snap-type: inherit;\nscroll-snap-type: initial;\nscroll-snap-type: unset;",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "scroll-snap-type"
	},
	"scrollbar-color": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。scrollbar-color该CSS属性设置滚动条轨道和拇指的颜色track（轨道）是指滚动条，其一般是固定的而不管滚动位置的背景。thumb（拇指）是指滚动条通常漂浮在轨道的顶部上的移动部分。初始值auto适用元素scrolling boxes是否是继承属性yes计算值as specifiedAnimation typea color",
		"grammar": "/* Keyword values */\nscrollbar-color: auto;\nscrollbar-color: dark;\nscrollbar-color: light;\n\n/* <color> values */\nscrollbar-color: rebeccapurple green;   /* Two valid colors.\nThe first applies to the thumb of the scrollbar, the second to the track. */\n\n/* Global values */\nscrollbar-color: inherit;\nscrollbar-color: initial;\nscrollbar-color: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "scrolling boxes",
		"name": "scrollbar-color"
	},
	"scrollbar-width": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 scrollbar-width 属性允许开发者设置滚动条出现时的厚度",
		"grammar": "/* Keyword values */\nscrollbar-width: auto;\nscrollbar-width: thin;\nscrollbar-width: none;\n\n/* Global values */\nscrollbar-width: inherit;\nscrollbar-width: initial;\nscrollbar-width: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "scrolling boxes",
		"name": "scrollbar-width"
	},
	"shape-image-threshold": {
		"desc": "CSS 属性 shape-image-threshold 通过设定一个 alpha 通道的界限值来提取shape-outside 值为图像的形状。 所有 alpha 值比这个界限值大的像素都会被当做形状的一部分，以此确定形状的边界。举个例子，界限值为0.5时，形状会包含所有不透明度超过 50% 的像素。/* <number> value */shape-image-threshold: 0.7; /* Global values */shape-image-threshold: inherit;shape-image-threshold: initial;shape-image-threshold: unset; 初始值0.0适用元素floats是否是继承属性否计算值The same as the specified value after clipping the number to the range [0.0, 1.0].Animation typea number",
		"grammar": "/* <number> value */\nshape-image-threshold: 0.7;\n\n/* Global values */\nshape-image-threshold: inherit;\nshape-image-threshold: initial;\nshape-image-threshold: unset;\n",
		"initial value": "0.0",
		"inherit": "否",
		"applicable elements": "floats",
		"name": "shape-image-threshold"
	},
	"shape-margin": {
		"desc": "CSS 属性 shape-margin 用于设定由shape-outside创建的 CSS 形状的外边距。 这个外边距可以让你调整（浮动元素的）形状边缘与环绕内容之间的距离。",
		"grammar": "/* <length> values */\nshape-margin: 10px;\nshape-margin: 20mm;\n\n/* <percentage> value */\nshape-margin: 60%;\n\n/* Global values */\nshape-margin: inherit;\nshape-margin: initial;\nshape-margin: unset;\n",
		"initial value": "0",
		"inherit": "否",
		"applicable elements": "floats",
		"name": "shape-margin"
	},
	"shape-outside": {
		"desc": "shape-outside的CSS 属性定义了一个可以是非矩形的形状，相邻的内联内容应围绕该形状进行包装。默认情况下，内联内容包围其边距框; shape-outside提供了一种自定义此包装的方法，可以将文本包装在复杂对象周围而不是简单的框中。",
		"grammar": "/* 关键字值 */\nshape-outside: none;\nshape-outside: margin-box;\nshape-outside: content-box;\nshape-outside: border-box;\nshape-outside: padding-box;\n\n/* 函数值 */\nshape-outside: circle();\nshape-outside: ellipse();\nshape-outside: inset(10px 10px 10px 10px);\nshape-outside: polygon(10px 10px, 20px 20px, 30px 30px);\n\n/* <url> 值 */\nshape-outside: url(image.png);\n\n/* 渐变值 */\nshape-outside: linear-gradient(45deg, rgba(255, 255, 255, 0) 150px, red 150px);\n\n/* 全局值 */\nshape-outside: initial;\nshape-outside: inherit;\nshape-outside: unset;\n",
		"name": "shape-outside"
	},
	"tab-size": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 tab-size 用于自定义制表符 (U+0009) 的宽度。/* <integer> values */tab-size: 4;tab-size: 0; /* <length> values */tab-size: 10px;tab-size: 2em; /* Global values */tab-size: inherit;tab-size: initial;tab-size: unset; 初始值8适用元素block containers是否是继承属性yes计算值the specified integer or an absolute lengthAnimation typea length",
		"grammar": "/* <integer> values */\ntab-size: 4;\ntab-size: 0;\n\n/* <length> values */\ntab-size: 10px;\ntab-size: 2em;\n\n/* Global values */\ntab-size: inherit;\ntab-size: initial;\ntab-size: unset;\n",
		"initial value": "8",
		"inherit": "yes",
		"applicable elements": "block containers",
		"name": "tab-size"
	},
	"table-layout": {
		"desc": "table-layout CSS 属性定义了用于布局表格单元格，行和列的算法。/* Keyword values */table-layout: auto;table-layout: fixed; /* Global values */table-layout: inherit;table-layout: initial;table-layout: unset;初始值auto适用元素table and inline-table elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\ntable-layout: auto;\ntable-layout: fixed;\n\n/* Global values */\ntable-layout: inherit;\ntable-layout: initial;\ntable-layout: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "table and inline-table elements",
		"name": "table-layout"
	},
	"text-align": {
		"desc": "text-align CSS 属性定义行内内容（例如文字）如何相对它的块父元素对齐。text-align 并不控制块元素自己的对齐，只控制它的行内内容的对齐。/* Keyword values */text-align: left;text-align: right;text-align: center;text-align: justify;text-align: justify-all;text-align: start;text-align: end;text-align: match-parent; /* Block alignment values (Non-standard syntax) */text-align: -moz-center;text-align: -webkit-center; /* Global values */text-align: inherit;text-align: initial;text-align: unset; 初始值start, or a nameless value that acts as left if direction is ltr, right if direction is rtl if start is not supported by the browser.适用元素block containers是否是继承属性yes计算值as specified, except for the match-parent value which is calculated against its parent's direction value and results in a computed value of either left or rightAnimation typediscrete",
		"grammar": "/* Keyword values */\ntext-align: left;\ntext-align: right;\ntext-align: center;\ntext-align: justify;\ntext-align: justify-all;\ntext-align: start;\ntext-align: end;\ntext-align: match-parent;\n\n/* Block alignment values (Non-standard syntax) */\ntext-align: -moz-center;\ntext-align: -webkit-center;\n\n/* Global values */\ntext-align: inherit;\ntext-align: initial;\ntext-align: unset;",
		"initial value": "start, or a nameless value that acts as left if direction is ltr, right if direction is rtl if start is not supported by the browser.",
		"inherit": "yes",
		"applicable elements": "block containers",
		"name": "text-align"
	},
	"text-align-last": {
		"desc": "CSS 属性 text-align-last 描述的是一段文本中最后一行在被强制换行之前的对齐规则。/* Keyword values */text-align-last: auto;text-align-last: start;text-align-last: end;text-align-last: left;text-align-last: right;text-align-last: center;text-align-last: justify; /* Global values */text-align-last: inherit;text-align-last: initial;text-align-last: unset; 初始值auto适用元素block containers是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\ntext-align-last: auto;\ntext-align-last: start;\ntext-align-last: end;\ntext-align-last: left;\ntext-align-last: right;\ntext-align-last: center;\ntext-align-last: justify;\n\n/* Global values */\ntext-align-last: inherit;\ntext-align-last: initial;\ntext-align-last: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "block containers",
		"name": "text-align-last"
	},
	"text-combine-upright (en-US)": {
		"desc": "The text-combine-upright CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.This is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.",
		"grammar": "/* Keyword values */\ntext-combine-upright: none;\ntext-combine-upright: all;\n\n/* Digits values */\ntext-combine-upright: digits;     /* fits 2 consecutive digits horizontally inside vertical text */\ntext-combine-upright: digits 4;   /* fits up to 4 consecutive digits horizontally inside vertical text */\n\n/* Global values */\ntext-combine-upright: inherit;\ntext-combine-upright: initial;\ntext-combine-upright: revert;\ntext-combine-upright: revert-layer;\ntext-combine-upright: unset;\n",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "non-replaced inline elements",
		"name": "text-combine-upright (en-US)"
	},
	"text-decoration": {
		"desc": "",
		"grammar": "<p class=\"under\">This text has a line underneath it.</p>\n<p class=\"over\">This text has a line over it.</p>\n<p class=\"line\">This text has a line going through it.</p>\n<p>This <a class=\"plain\" href=\"#\">link will not be underlined</a>,\n    as links generally are by default. Be careful when removing\n    the text decoration on anchors since users often depend on\n    the underline to denote hyperlinks.</p>\n<p class=\"underover\">This text has lines above <em>and</em> below it.</p>\n<p class=\"blink\">This text might blink for you,\n    depending on the browser you use.</p>",
		"initial value": "as each of the properties of the shorthand:text-decoration-color: currentcolortext-decoration-style: solidtext-decoration-line: none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "text-decoration"
	},
	"text-decoration-color": {
		"desc": "CSS 属性 text-decoration-color 用于设置文本修饰线的颜色，文本修饰线是通过 text-decoration-line 属性指定的。修饰线包括下划线、上划线、删除线和波浪线，波浪线的典型用途是标明内容拼写错误（仅举例）。被指定的颜色会作用到该属性值有效范围内的所有修饰线上。 CSS 没有直接的机制为每种线型指定唯一的颜色，不过可以通过嵌套元素的方法来实现这种效果：用 text-decoration-line 属性为每个元素应用一种线型，再用 text-decoration-color 指定线的颜色。",
		"grammar": "/* <color> values */\ntext-decoration-color: currentColor;\ntext-decoration-color: red;\ntext-decoration-color: #00ff00;\ntext-decoration-color: rgba(255, 128, 128, 0.5);\ntext-decoration-color: transparent;\n\n/* Global values */\ntext-decoration-color: inherit;\ntext-decoration-color: initial;\ntext-decoration-color: unset;\n",
		"name": "text-decoration-color"
	},
	"text-decoration-line": {
		"desc": "CSS 属性 text-decoration-line 用于设置元素中的文本的修饰类型。当要设置多个线修饰属性时，用 text-decoration 简写属性会比分别写多个属性更方便。/* Keyword values */text-decoration-line: none;text-decoration-line: underline;text-decoration-line: overline;text-decoration-line: line-through;text-decoration-line: blink;text-decoration-line: underline overline; /* Two decoration lines */text-decoration-line: overline underline line-through; /* Multiple decoration lines */ /* Global values */text-decoration-line: inherit;text-decoration-line: initial;text-decoration-line: unset; 初始值none适用元素all elements. It also applies to ::first-letter and ::first-line.是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* Keyword values */\ntext-decoration-line: none;\ntext-decoration-line: underline;\ntext-decoration-line: overline;\ntext-decoration-line: line-through;\ntext-decoration-line: blink;\ntext-decoration-line: underline overline;               /* Two decoration lines */\ntext-decoration-line: overline underline line-through;  /* Multiple decoration lines */\n\n/* Global values */\ntext-decoration-line: inherit;\ntext-decoration-line: initial;\ntext-decoration-line: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "text-decoration-line"
	},
	"text-decoration-skip": {
		"desc": "CSS text-decoration-skip 属性定义了元素哪些部分的内容需要被文本修饰所跳过。它可以控制所有该元素或该元素的祖先所绘制的文本修饰线。/* 关键字 */text-decoration-skip: none;text-decoration-skip: objects;text-decoration-skip: spaces;text-decoration-skip: edges;text-decoration-skip: box-decoration; /* 使用多个关键字 */text-decoration-skip: objects spaces;text-decoration-skip: leading-spaces trailing-spaces;text-decoration-skip: objects edges box-decoration; /* 全局值 */text-decoration-skip: inherit;text-decoration-skip: initial;text-decoration-skip: unset; 注意： ink 值被移动至 text-decoration-skip-ink (en-US) 属性。 初始值objects适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* 关键字 */\ntext-decoration-skip: none;\ntext-decoration-skip: objects;\ntext-decoration-skip: spaces;\ntext-decoration-skip: edges;\ntext-decoration-skip: box-decoration;\n\n/* 使用多个关键字 */\ntext-decoration-skip: objects spaces;\ntext-decoration-skip: leading-spaces trailing-spaces;\ntext-decoration-skip: objects edges box-decoration;\n\n/* 全局值 */\ntext-decoration-skip: inherit;\ntext-decoration-skip: initial;\ntext-decoration-skip: unset;\n",
		"initial value": "objects",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "text-decoration-skip"
	},
	"text-decoration-skip-ink (en-US)": {
		"desc": "The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.",
		"grammar": "/* Single keyword */\ntext-decoration-skip-ink: none;\ntext-decoration-skip-ink: auto;\ntext-decoration-skip-ink: all;\n\n/* Global keywords */\ntext-decoration-skip-ink: inherit;\ntext-decoration-skip-ink: initial;\ntext-decoration-skip-ink: revert;\ntext-decoration-skip-ink: revert-layer;\ntext-decoration-skip-ink: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "text-decoration-skip-ink (en-US)"
	},
	"text-decoration-style": {
		"desc": "CSS 属性 text-decoration-style 用于设置由 text-decoration-line 设定的线的样式。线的样式会应用到所有被 text-decoration-line 设定的线，不能为其中的每条线设置不同的样式。当要设置多个线修饰属性时，用 text-decoration 简写属性会比分别写多个属性更方便。 如果设定的修饰效果具有特定的语义，例如删除线的意味着某些文本被删除了，开发者最好使用有语义的 HTML 标签来表达，比如 <del> 或 <s> 标签，因为浏览器有时可能会屏蔽某些样式，但语义化的标签则不会出现这样的问题。当一次使用多个 line-decoration 属性时，使用 text-decoration 简写属性会更方便。",
		"grammar": "/* Keyword values */\ntext-decoration-style: solid;\ntext-decoration-style: double;\ntext-decoration-style: dotted;\ntext-decoration-style: dashed;\ntext-decoration-style: wavy;\n\n/* Global values */\ntext-decoration-style: inherit;\ntext-decoration-style: initial;\ntext-decoration-style: unset;\n",
		"name": "text-decoration-style"
	},
	"text-emphasis (en-US)": {
		"desc": "The text-emphasis CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for text-emphasis-style and text-emphasis-color.",
		"grammar": "/* Initial value */\ntext-emphasis: none; /* No emphasis marks */\n\n/* <string> value */\ntext-emphasis: 'x';\ntext-emphasis: '点';\ntext-emphasis: '\\25B2';\ntext-emphasis: '*' #555;\ntext-emphasis: 'foo'; /* Should NOT use. It may be computed to or rendered as 'f' only */\n\n/* Keywords value */\ntext-emphasis: filled;\ntext-emphasis: open;\ntext-emphasis: filled sesame;\ntext-emphasis: open sesame;\n\n/* Keywords value combined with a color */\ntext-emphasis: filled sesame #555;\n\n/* Global values */\ntext-emphasis: inherit;\ntext-emphasis: initial;\ntext-emphasis: revert;\ntext-emphasis: revert-layer;\ntext-emphasis: unset;\n",
		"initial value": "as each of the properties of the shorthand:text-emphasis-style: nonetext-emphasis-color: currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "text-emphasis (en-US)"
	},
	"text-emphasis-color (en-US)": {
		"desc": "The text-emphasis-color CSS property sets the color of emphasis marks. This value can also be set using the text-emphasis shorthand.",
		"grammar": "/* Initial value */\ntext-emphasis-color: currentcolor;\n\n/* <color> */\ntext-emphasis-color: #555;\ntext-emphasis-color: blue;\ntext-emphasis-color: rgba(90, 200, 160, 0.8);\ntext-emphasis-color: transparent;\n\n/* Global values */\ntext-emphasis-color: inherit;\ntext-emphasis-color: initial;\ntext-emphasis-color: revert;\ntext-emphasis-color: revert-layer;\ntext-emphasis-color: unset;\n",
		"initial value": "currentcolor",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "text-emphasis-color (en-US)"
	},
	"text-emphasis-position (en-US)": {
		"desc": "The text-emphasis-position CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.",
		"grammar": "/* Initial value */\ntext-emphasis-position: over right;\n\n/* Keywords value */\ntext-emphasis-position: over left;\ntext-emphasis-position: under right;\ntext-emphasis-position: under left;\n\ntext-emphasis-position: left over;\ntext-emphasis-position: right under;\ntext-emphasis-position: left under;\n\n/* Global values */\ntext-emphasis-position: inherit;\ntext-emphasis-position: initial;\ntext-emphasis-position: revert;\ntext-emphasis-position: revert-layer;\ntext-emphasis-position: unset;\n",
		"initial value": "over right",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "text-emphasis-position (en-US)"
	},
	"text-emphasis-style (en-US)": {
		"desc": "The text-emphasis-style CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the text-emphasis shorthand.",
		"grammar": "/* Initial value */\ntext-emphasis-style: none; /* No emphasis marks */\n\n/* <string> values */\ntext-emphasis-style: 'x';\ntext-emphasis-style: '点';\ntext-emphasis-style: '\\25B2';\ntext-emphasis-style: '*';\ntext-emphasis-style: 'foo'; /* Should NOT be used. It may be computed to or rendered as 'f' only */\n\n/* Keyword values */\ntext-emphasis-style: filled;\ntext-emphasis-style: open;\ntext-emphasis-style: dot;\ntext-emphasis-style: circle;\ntext-emphasis-style: double-circle;\ntext-emphasis-style: triangle;\ntext-emphasis-style: filled sesame;\ntext-emphasis-style: open sesame;\n\n/* Global values */\ntext-emphasis-style: inherit;\ntext-emphasis-style: initial;\ntext-emphasis-style: revert;\ntext-emphasis-style: revert-layer;\ntext-emphasis-style: unset;\n",
		"initial value": "none",
		"inherit": "no",
		"applicable elements": "all elements",
		"name": "text-emphasis-style (en-US)"
	},
	"text-indent": {
		"desc": "text-indent 属性能定义一个块元素首行文本内容之前的缩进量。",
		"grammar": "<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy\n    nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>",
		"initial value": "0",
		"inherit": "yes",
		"applicable elements": "block containers",
		"name": "text-indent"
	},
	"text-justify": {
		"desc": "CSS 属性 text-justify 定义的是当文本的 text-align 属性被设置为 :justify 时的齐行方法。text-justify: none;text-justify: auto;text-justify: inter-word;text-justify: inter-character;text-justify: distribute; /* 已被废除，不提倡使用 */ 初始值auto适用元素inline-level and table-cell elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "text-justify: none;\ntext-justify: auto;\ntext-justify: inter-word;\ntext-justify: inter-character;\ntext-justify: distribute; /* 已被废除，不提倡使用 */\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "inline-level and table-cell elements",
		"name": "text-justify"
	},
	"text-orientation": {
		"desc": "text-orientation CSS 属性设定行中字符的方向。但它仅影响纵向模式（当 writing-mode 的值不是horizontal-tb）下的文本。此属性在控制使用竖排文字的语言的显示上很有作用，也可以用来构建垂直的表格头。",
		"grammar": "/* Keyword values */\ntext-orientation: mixed;\ntext-orientation: upright;\ntext-orientation: sideways-right;\ntext-orientation: sideways;\ntext-orientation: use-glyph-orientation;\n\n/* Global values */\ntext-orientation: inherit;\ntext-orientation: initial;\ntext-orientation: unset;\n",
		"initial value": "mixed",
		"inherit": "yes",
		"applicable elements": "all elements, except table row groups, rows, column groups, and columns",
		"name": "text-orientation"
	},
	"text-overflow": {
		"desc": "text-overflow CSS 属性确定如何向用户发出未显示的溢出内容信号。它可以被剪切，显示一个省略号（'...'，U + 2026 HORIZONTAL ELLIPSIS）或显示一个自定义字符串。 一般在容器的极限处进行截断。如果想在裁剪处显示空白符，可以使用 ('').这个属性只对那些在块级元素溢出的内容有效，但是必须要与块级元素内联 (inline) 方向一致（举个反例：内容在盒子的下方溢出。此时就不会生效）。文本可能在以下情况下溢出：当其因为某种原因而无法换行 (例子：设置了\"white-space:nowrap\")，或者一个单词因为太长而不能合理地被安置 (fit)。这个属性并不会强制“溢出”事件的发生，因此为了能让\"text-overflow\"能够生效，程序员们必须要在元素上添加几个额外的属性，比如\"将overflow 设置为 hidden\"。初始值clip适用元素block container elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"initial value": "clip",
		"inherit": "否",
		"applicable elements": "block container elements",
		"name": "text-overflow"
	},
	"text-rendering": {
		"desc": "",
		"grammar": "/* Keyword values */\ntext-rendering: auto;\ntext-rendering: optimizeSpeed;\ntext-rendering: optimizeLegibility;\ntext-rendering: geometricPrecision;\n\n/* Global values */\ntext-rendering: inherit;\ntext-rendering: initial;\ntext-rendering: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "text elements",
		"name": "text-rendering"
	},
	"text-shadow": {
		"desc": "text-shadow为文字添加阴影。可以为文字与 text-decorations 添加多个阴影，阴影值之间用逗号隔开。每个阴影值由元素在 X 和 Y 方向的偏移量、模糊半径和颜色值组成。",
		"grammar": "/* offset-x | offset-y | blur-radius | color */\ntext-shadow: 1px 1px 2px black;\n\n/* color | offset-x | offset-y | blur-radius */\ntext-shadow: #fc0 1px 0 10px;\n\n/* offset-x | offset-y | color */\ntext-shadow: 5px 5px #558abb;\n\n/* color | offset-x | offset-y */\ntext-shadow: white 2px 5px;\n\n/* offset-x | offset-y\n/* Use defaults for color and blur-radius */\ntext-shadow: 5px 10px;\n\n/* Global values */\ntext-shadow: inherit;\ntext-shadow: initial;\ntext-shadow: unset;",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "text-shadow"
	},
	"text-size-adjust": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。 text-size-adjust CSS 控制将一些手机或平板设备上使用的文本溢出算法（text inflation algorithm）。其他类型的设备上的浏览器会忽略此属性。/* 专有属性值 */text-size-adjust: none;text-size-adjust: auto; /* <percentage> 值 */text-size-adjust: 80%; /* 全局属性值 */text-size-adjust: inherit;text-size-adjust: initial;text-size-adjust: unset; 因为许多网站还没有适配屏幕较小的设备，移动设备的浏览器和桌面浏览器在渲染网页时可能会有不同。他们不是以设备屏幕宽度布局网页，而是用比屏幕宽一些的 视窗 去布局网页，通常是 800 到 1000 像素。为了将视窗上的布局映射到原始设备屏幕上，手机浏览器要么只渲染整个页面的一部分，要么将视窗缩放至原始屏幕大小。因为缩放适配小屏幕而导致文字会变得很小，许多手机浏览器会使用文本溢出算法放大文本，改善可读性。当一个包含文本的元素使用了 100% 的屏幕宽度，该算法会增加文本大小，但是不会修改布局。text-size-adjust 这个属性允许开发者去除或者修改浏览器的这种行为，比如，当网页已经适配了小屏幕之后，就不需要这么做了。注意： 这个属性并不是标准。 你必须为每个你想要应用的浏览器加上属性前缀。不同浏览器，这个属性有不同的行为和语法。更多的信息，请查看下面的浏览器兼容性部分。这个属性只在一些智能手机和平板电脑上使用。桌面浏览器和一些平板电脑浏览器并没有一些溢出算法。如果 -webkit-text-size-adjust 显式设置为 none, 老的基于桌面的 WebKit 和平板电脑浏览器，像 Chrome≤26 或者 Safari≤5，不会忽略这个属性，反而会阻止用户在 web 界面放大或缩小。#不是所有的浏览器都支持这个属性使用百分比值 (例如 Webkit 和 Trident , 但是 Gecko 不支持). 检查下面浏览器兼容的部分查看更多的信息。 初始值auto for smartphone browsers supporting inflation, none in other cases (and then not modifiable).适用元素all elements是否是继承属性yesPercentagesyes, refer to the corresponding size of the text font计算值as specifiedAnimation typediscrete",
		"grammar": "/* 专有属性值 */\ntext-size-adjust: none;\ntext-size-adjust: auto;\n\n/* <percentage> 值 */\ntext-size-adjust: 80%;\n\n/* 全局属性值 */\ntext-size-adjust: inherit;\ntext-size-adjust: initial;\ntext-size-adjust: unset;\n",
		"initial value": "auto for smartphone browsers supporting inflation, none in other cases (and then not modifiable).",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "text-size-adjust"
	},
	"text-transform": {
		"desc": "",
		"initial value": "none",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "text-transform"
	},
	"text-underline-position": {
		"desc": "当 text-decoration属性的值设置为 underline 之后，可以用 text-underline-position 属性为其设置下划线的位置。 /* 只设置一个属性值 */text-underline-position: auto;text-underline-position: under;text-underline-position: left;text-underline-position: right; /* 设置多个属性值 */text-underline-position: under left;text-underline-position: right under; /* 全局属性值 */text-underline-position: inherit;text-underline-position: initial;text-underline-position: unset; 初始值auto适用元素all elements是否是继承属性yes计算值as specifiedAnimation typediscrete",
		"grammar": "/* 只设置一个属性值 */\ntext-underline-position: auto;\ntext-underline-position: under;\ntext-underline-position: left;\ntext-underline-position: right;\n\n/* 设置多个属性值 */\ntext-underline-position: under left;\ntext-underline-position: right under;\n\n/* 全局属性值 */\ntext-underline-position: inherit;\ntext-underline-position: initial;\ntext-underline-position: unset;\n",
		"initial value": "auto",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "text-underline-position"
	},
	"top": {
		"desc": "top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。/* <length> values */top: 3px;top: 2.4em; /* 参照于包含块高度的百分比 */top: 10%; /* Keyword value */top: auto; /* Global values */top: inherit;top: initial;top: unset; top的效果取决于元素的position属性： 当position设置为absolute或fixed时，top属性指定了定位元素上外边距边界与其包含块上边界之间的偏移。当position设置为relative时，top属性指定了元素的上边界离开其正常位置的偏移。当position设置为sticky时，如果元素在 viewport 里面，top属性的效果和 position 为relative等同；如果元素在 viewport 外面，top属性的效果和 position 为fixed等同。当position设置为static时，top属性无效。 当top和bottom同时指定时，并且 height没有被指定或者指定为auto的时候，top和bottom​​​​​都会生效，在其他情况下，如果 height被限制，则top属性会优先设置，bottom属性则会被忽略。初始值auto适用元素positioned elements是否是继承属性否Percentagesrefer to the height of the containing block计算值if specified as a length, the corresponding absolute length; if specified as a percentage, the specified value; otherwise, autoAnimation typea length, percentage or calc();",
		"grammar": "body {\n  background: beige;\n}\n\ndiv {\n  position: absolute;\n  top: 10%;\n  right: 40%;\n  bottom: 20%;\n  left: 15%;\n  background: gold;\n  border: 1px solid blue;\n}",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "positioned elements",
		"name": "top"
	},
	"touch-action": {
		"desc": "CSS 属性 touch-action 用于设置触摸屏用户如何操纵元素的区域 (例如，浏览器内置的缩放功能)。/* Keyword values */touch-action: auto;touch-action: none;touch-action: pan-x;touch-action: pan-left;touch-action: pan-right;touch-action: pan-y;touch-action: pan-up;touch-action: pan-down;touch-action: pinch-zoom;touch-action: manipulation; /* Global values */touch-action: inherit;touch-action: initial;touch-action: unset; 初始值auto适用元素all elements except: non-replaced inline elements, table rows, row groups, table columns, and column groups是否是继承属性否计算值as specifiedAnimation typediscrete默认情况下，平移（滚动）和缩放手势由浏览器专门处理。使用 Pointer_events 的应用程序将在浏览器开始处理触摸手势时收到一个 pointercancel 事件。通过明确指定浏览器应该处理哪些手势，应用程序可以在 pointermove 和 pointerup 监听器中为其余的手势提供自己的行为。使用 Touch_events 的应用程序通过调用 preventDefault() 禁用浏览器处理手势，但也应使用触摸操作确保浏览器在调用任何事件侦听器之前，了解应用程序的意图。当手势开始时，浏览器与触摸的元素及其所有祖先的触摸动作值相交直到一个实现手势（换句话说，第一个包含滚动元素）的触摸动作值。这意味着在实践中，触摸动作通常仅适用于具有某些自定义行为的单个元素，而无需在该元素的任何后代上明确指定触摸动作。手势开始之后，触摸动作值的更改将不会对当前手势的行为产生任何影响。",
		"grammar": "/* Keyword values */\ntouch-action: auto;\ntouch-action: none;\ntouch-action: pan-x;\ntouch-action: pan-left;\ntouch-action: pan-right;\ntouch-action: pan-y;\ntouch-action: pan-up;\ntouch-action: pan-down;\ntouch-action: pinch-zoom;\ntouch-action: manipulation;\n\n/* Global values */\ntouch-action: inherit;\ntouch-action: initial;\ntouch-action: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements except: non-replaced inline elements, table rows, row groups, table columns, and column groups",
		"name": "touch-action"
	},
	"transform": {
		"desc": "CSStransform属性允许你旋转，缩放，倾斜或平移给定元素。这是通过修改 CSS 视觉格式化模型的坐标空间来实现的。 只能转换由盒模型定位的元素。根据经验，如果元素具有display: block，则由盒模型定位元素。",
		"grammar": "/* Keyword values */\ntransform: none;\n\n/* Function values */\ntransform: matrix(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);\ntransform: translate(12px, 50%);\ntransform: translateX(2em);\ntransform: translateY(3in);\ntransform: scale(2, 0.5);\ntransform: scaleX(2);\ntransform: scaleY(0.5);\ntransform: rotate(0.5turn);\ntransform: skew(30deg, 20deg);\ntransform: skewX(30deg);\ntransform: skewY(1.07rad);\ntransform: matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);\ntransform: translate3d(12px, 50%, 3em);\ntransform: translateZ(2px);\ntransform: scale3d(2.5, 1.2, 0.3);\ntransform: scaleZ(0.3);\ntransform: rotate3d(1, 2.0, 3.0, 10deg);\ntransform: rotateX(10deg);\ntransform: rotateY(10deg);\ntransform: rotateZ(10deg);\ntransform: perspective(17px);\n\n/* Multiple function values */\ntransform: translateX(10px) rotate(10deg) translateY(5px);\n\n/* Global values */\ntransform: inherit;\ntransform: initial;\ntransform: unset;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "transform"
	},
	"transform-box": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* Keyword values */\ntransform-box: border-box;\ntransform-box: fill-box;\ntransform-box: view-box;\n\n/* Global values */\ntransform-box: inherit;\ntransform-box: initial;\ntransform-box: unset;\n",
		"initial value": "view-box",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "transform-box"
	},
	"transform-origin": {
		"desc": "transform-origin CSS 属性让你更改一个元素变形的原点。 转换起点是应用转换的点。例如，rotate()函数的转换原点是旋转中心。（这个属性的应用原理是先用这个属性的赋值转换该元素，进行变形，然后再用这个属性的值把元素转换回去）默认的转换原点是 center",
		"grammar": "/* One-value syntax */\ntransform-origin: 2px;\ntransform-origin: bottom;\n\n/* x-offset | y-offset */\ntransform-origin: 3cm 2px;\n\n/* x-offset-keyword | y-offset */\ntransform-origin: left 2px;\n\n/* x-offset-keyword | y-offset-keyword */\ntransform-origin: right top;\n\n/* y-offset-keyword | x-offset-keyword */\ntransform-origin: top right;\n\n/* x-offset | y-offset | z-offset */\ntransform-origin: 2px 30% 10px;\n\n/* x-offset-keyword | y-offset | z-offset */\ntransform-origin: left 5px -3px;\n\n/* x-offset-keyword | y-offset-keyword | z-offset */\ntransform-origin: right bottom 2cm;\n\n/* y-offset-keyword | x-offset-keyword | z-offset */\ntransform-origin: bottom right 2cm;\n\n/* Global values */\ntransform-origin: inherit;\ntransform-origin: initial;\ntransform-origin: unset;\n",
		"initial value": "50% 50% 0",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "transform-origin"
	},
	"transform-style": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 transform-style 设置元素的子元素是位于 3D 空间中还是平面中。 如果选择平面，元素的子元素将不会有 3D 的遮挡关系。由于这个属性不会被继承，因此必须为元素的所有非叶子子元素设置它。",
		"grammar": "/* Keyword values */\ntransform-style: flat;\ntransform-style: preserve-3d;\n\n/* Global values */\ntransform-style: inherit;\ntransform-style: initial;\ntransform-style: unset;\n",
		"initial value": "flat",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "transform-style"
	},
	"transition": {
		"desc": "transition CSS 属性是 transition-property，transition-duration，transition-timing-function 和 transition-delay 的一个简写属性。 过渡可以为一个元素在不同状态之间切换的时候定义不同的过渡效果。比如在不同的伪元素之间切换，像是 :hover，:active 或者通过 JavaScript 实现的状态变化。",
		"grammar": "/* Apply to 1 property */\n/* property name | duration */\ntransition: margin-right 4s;\n\n/* property name | duration | delay */\ntransition: margin-right 4s 1s;\n\n/* property name | duration | timing function */\ntransition: margin-right 4s ease-in-out;\n\n/* property name | duration | timing function | delay */\ntransition: margin-right 4s ease-in-out 1s;\n\n/* Apply to 2 properties */\ntransition: margin-right 4s, color 1s;\n\n/* Apply to all changed properties */\ntransition: all 0.5s ease-out;\n\n/* Global values */\ntransition: inherit;\ntransition: initial;\ntransition: unset;\n",
		"initial value": "as each of the properties of the shorthand:transition-delay: 0stransition-duration: 0stransition-property: alltransition-timing-function: ease",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "transition"
	},
	"transition-delay": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* <time>?值 */\ntransition-delay: 3s;\ntransition-delay: 2s, 4ms;\n\n/* 全局变量 */\ntransition-delay: inherit;\ntransition-delay: initial;\ntransition-delay: unset;\n",
		"initial value": "0s",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "transition-delay"
	},
	"transition-duration": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* <time> 值 */\ntransition-duration: 6s;\ntransition-duration: 120ms;\ntransition-duration: 1s, 15s;\ntransition-duration: 10s, 30s, 230ms;\n\n/* 全局值 */\ntransition-duration: inherit;\ntransition-duration: initial;\ntransition-duration: unset;\n",
		"initial value": "0s",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "transition-duration"
	},
	"transition-property": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"grammar": "/* Keyword values */\ntransition-property: none;\ntransition-property: all;\ntransition-property: test_05;\ntransition-property: -specific;\ntransition-property: sliding-vertically;\n\ntransition-property: test1;\ntransition-property: test1, animation4;\ntransition-property: all, height, all;\ntransition-property: all, -moz-specific, sliding;\n\n/* Global values */\ntransition-property: inherit;\ntransition-property: initial;\ntransition-property: unset;\n",
		"initial value": "all",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "transition-property"
	},
	"transition-timing-function": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。",
		"initial value": "ease",
		"inherit": "否",
		"applicable elements": "all elements, ::before and ::after pseudo-elements",
		"name": "transition-timing-function"
	},
	"translate": {
		"desc": "CSS 属性 translate 允许你单独声明平移变换，并独立于 transform 属性。这在一些典型的用户界面上更好用，而且这样就无需在 transform 中声明该函数并记住转换函数的确切顺序了。",
		"grammar": "/* Keyword values */\ntranslate: none;\n\n/* Single values */\ntranslate: 100px;\ntranslate: 50%;\n\n/* Two values */\ntranslate: 100px 200px;\ntranslate: 50% 105px;\n\n/* Three values */\ntranslate: 50% 105px 5rem;\n",
		"initial value": "none",
		"inherit": "否",
		"applicable elements": "transformable elements",
		"name": "translate"
	},
	"unicode-bidi": {
		"desc": "CSS unicode-bidi 属性，和 direction 属性，决定如何处理文档中的双书写方向文本（bidirectional text）。比如，如果一块内容同时包含有从左到右书写和从右到左书写的文本，那么用户代理（the user-agent）会使用复杂的 Unicode 算法来决定如何显示文本。unicode-bidi 属性会覆盖此算法，允许开发人员控制文本嵌入（text embedding）。unicode-bidi 与 direction 是仅有的两个不受 all 简写影响的属性。注意：此属性是文档类型定义（Document Type Definition, DTD）的设计者专用的。Web 设计者与其他类似的人员不应覆盖此属性。/* 关键字值 */unicode-bidi: normal;unicode-bidi: embed;unicode-bidi: isolate;unicode-bidi: bidi-override;unicode-bidi: isolate-override;unicode-bidi: plaintext;/* 全局值 */unicode-bidi: inherit;unicode-bidi: initial;unicode-bidi: unset; 初始值normal适用元素all elements, though some values have no effect on non-inline elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": "/* 关键字值 */\nunicode-bidi: normal;\nunicode-bidi: embed;\nunicode-bidi: isolate;\nunicode-bidi: bidi-override;\nunicode-bidi: isolate-override;\nunicode-bidi: plaintext;\n/* 全局值 */\nunicode-bidi: inherit;\nunicode-bidi: initial;\nunicode-bidi: unset;\n",
		"initial value": "normal",
		"inherit": "否",
		"applicable elements": "all elements, though some values have no effect on non-inline elements",
		"name": "unicode-bidi"
	},
	"user-select": {
		"desc": "CSS 属性 user-select 控制用户能否选中文本。除了文本框内，它对被载入为 chrome 的内容没有影响。/* Keyword values */user-select: none;user-select: auto;user-select: text;user-select: contain;user-select: all; /* Global values */user-select: inherit;user-select: initial;user-select: unset; /* Mozilla-specific values */-moz-user-select: none;-moz-user-select: text;-moz-user-select: all; /* WebKit-specific values */-webkit-user-select: none;-webkit-user-select: text;-webkit-user-select: all; /* Doesn't work in Safari; use only \"none\" or \"text\", or else it will allow typing in the <html> container */ /* Microsoft-specific values */-ms-user-select: none;-ms-user-select: text;-ms-user-select: element; 初始值auto适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete 注意：user-select 不是继承属性，即使默认的属性值 auto 的表现基本上以继承为主，似乎是继承属性。甚至，WebKit/基于 Chromium 的浏览器在实现此属性时将其作为继承属性，但这和有关规范是相悖的，且会带来一些问题。目前，Chromium 暂时选择修复将其作为继承属性所带来的问题，使最终表现符合规范。",
		"grammar": "/* Keyword values */\nuser-select: none;\nuser-select: auto;\nuser-select: text;\nuser-select: contain;\nuser-select: all;\n\n/* Global values */\nuser-select: inherit;\nuser-select: initial;\nuser-select: unset;\n\n/* Mozilla-specific values */\n-moz-user-select: none;\n-moz-user-select: text;\n-moz-user-select: all;\n\n/* WebKit-specific values */\n-webkit-user-select: none;\n-webkit-user-select: text;\n-webkit-user-select: all; /* Doesn't work in Safari; use only\n                             \"none\" or \"text\", or else it will\n                             allow typing in the <html> container */\n\n/* Microsoft-specific values */\n-ms-user-select: none;\n-ms-user-select: text;\n-ms-user-select: element;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "user-select"
	},
	"vertical-align": {
		"desc": "CSS 的属性 vertical-align 用来指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。 vertical-align 属性可被用于两种环境： 使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本内的图片<img>： <p>top:<img style=\"vertical-align:top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>middle:<img style=\"vertical-align:middle\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>bottom:<img style=\"vertical-align:bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>super:<img style=\"vertical-align:super\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>sub:<img style=\"vertical-align:sub\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/></p><p>text-top:<img style=\"vertical-align:text-top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>text-bottom:<img style=\"vertical-align:text-bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>0.2em:<img style=\"vertical-align:0.2em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>-1em:<img style=\"vertical-align:-1em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>20%:<img style=\"vertical-align:20%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>-100%:<img style=\"vertical-align:-100%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/></p> #* { box-sizing: border-box;} img { margin-right: 0.5em;} p { height: 3em; padding: 0 .5em; font-family: monospace; text-decoration: underline overline; margin-left: auto; margin-right: auto; width: 80%;} 垂直对齐表格单元内容： <table> <tr> <td style=\"vertical-align: baseline\">baseline</td> <td style=\"vertical-align: top\">top</td> <td style=\"vertical-align: middle\">middle</td> <td style=\"vertical-align: bottom\">bottom</td> <td> <p>There is a theory which states that if ever anyone discovers exactly what the Universe is for and why it is here, it will instantly disappear and be replaced by something even more bizarre and inexplicable.</p><p>There is another theory which states that this has already happened.</p> </td> </tr></table> table { margin-left: auto; margin-right: auto; width: 80%;} table, th, td { border: 1px solid black;} td { padding: 0.5em; font-family: monospace;} 注意 vertical-align 只对行内元素、行内块元素和表格单元格元素生效：不能用它垂直对齐块级元素。",
		"grammar": "<p>\ntop:<img style=\"vertical-align:top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\nmiddle:<img style=\"vertical-align:middle\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\nbottom:<img style=\"vertical-align:bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\nsuper:<img style=\"vertical-align:super\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\nsub:<img style=\"vertical-align:sub\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n</p>\n<p>\ntext-top:<img style=\"vertical-align:text-top\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\ntext-bottom:<img  style=\"vertical-align:text-bottom\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n0.2em:<img style=\"vertical-align:0.2em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n-1em:<img  style=\"vertical-align:-1em\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n20%:<img style=\"vertical-align:20%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n-100%:<img  style=\"vertical-align:-100%\" src=\"https://mdn.mozillademos.org/files/15189/star.png\"/>\n</p>\n\n",
		"initial value": "baseline",
		"inherit": "否",
		"applicable elements": "inline-level and table-cell elements. It also applies to ::first-letter and ::first-line.",
		"name": "vertical-align"
	},
	"visibility": {
		"desc": "CSS 属性 visibility 显示或隐藏元素而不更改文档的布局。该属性还可以隐藏 <table> 中的行或列。",
		"grammar": "/* Keyword values */\nvisibility: visible;\nvisibility: hidden;\nvisibility: collapse;\n\n/* Global values */\nvisibility: inherit;\nvisibility: initial;\nvisibility: unset;\n",
		"name": "visibility"
	},
	"white-space": {
		"desc": "white-space CSS 属性是用来设置如何处理元素中的 空白 (en-US)。",
		"grammar": "code {\n  white-space: pre;\n}",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "white-space"
	},
	"widows": {
		"desc": "CSS属性 widows 可以用来设置一个块级容器在新的分页，区域或者列的顶部需要结合在一起的最小行数。/* <integer> values */widows: 2;widows: 3; /* Global values */widows: inherit;widows: initial;widows: unset; 在排版中，widow 指的是在新页面顶部单独出现的段落的最后一行。（这一行来自于上一个页面的段落）",
		"grammar": "/* <integer> values */\nwidows: 2;\nwidows: 3;\n\n/* Global values */\nwidows: inherit;\nwidows: initial;\nwidows: unset;\n",
		"initial value": "2",
		"inherit": "yes",
		"applicable elements": "block container elements",
		"name": "widows"
	},
	"width": {
		"desc": "width 属性用于设置元素的宽度。width 默认设置内容区域的宽度，但如果 box-sizing 属性被设置为 border-box，就转而设置边框区域的宽度。 The source for this interactive example is stored in a GitHub repository. If you'd like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request.min-width 和 max-width 属性的优先级高于 width。",
		"grammar": "/* <length> values */\nwidth: 300px;\nwidth: 25em;\n\n/* <percentage> value */\nwidth: 75%;\n\n/* Keyword values */\nwidth: max-content;\nwidth: min-content;\nwidth: fit-content(20em);\nwidth: auto;\n\n/* Global values */\nwidth: inherit;\nwidth: initial;\nwidth: unset;\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements but non-replaced inline elements, table rows, and row groups",
		"name": "width"
	},
	"will-change": {
		"desc": "Experimental: 这是一个实验中的功能此功能某些浏览器尚在开发中，请参考浏览器兼容性表格以得到在不同浏览器中适合使用的前缀。由于该功能对应的标准文档可能被重新修订，所以在未来版本的浏览器中该功能的语法和行为可能随之改变。CSS 属性 will-change 为 web 开发者提供了一种告知浏览器该元素会有哪些变化的方法，这样浏览器可以在元素属性真正发生变化之前提前做好对应的优化准备工作。这种优化可以将一部分复杂的计算工作提前准备好，使页面的反应更为快速灵敏。用好这个属性并不是很容易： 不要将 will-change 应用到太多元素上：浏览器已经尽力尝试去优化一切可以优化的东西了。有一些更强力的优化，如果与 will-change 结合在一起的话，有可能会消耗很多机器资源，如果过度使用的话，可能导致页面响应缓慢或者消耗非常多的资源。 有节制地使用：通常，当元素恢复到初始状态时，浏览器会丢弃掉之前做的优化工作。但是如果直接在样式表中显式声明了 will-change 属性，则表示目标元素可能会经常变化，浏览器会将优化工作保存得比之前更久。所以最佳实践是当元素变化之前和之后通过脚本来切换 will-change 的值。 不要过早应用 will-change 优化：如果你的页面在性能方面没什么问题，则不要添加 will-change 属性来榨取一丁点的速度。 will-change 的设计初衷是作为最后的优化手段，用来尝试解决现有的性能问题。它不应该被用来预防性能问题。过度使用 will-change 会导致大量的内存占用，并会导致更复杂的渲染过程，因为浏览器会试图准备可能存在的变化过程。这会导致更严重的性能问题。 给它足够的工作时间：这个属性是用来让页面开发者告知浏览器哪些属性可能会变化的。然后浏览器可以选择在变化发生前提前去做一些优化工作。所以给浏览器一点时间去真正做这些优化工作是非常重要的。使用时需要尝试去找到一些方法提前一定时间获知元素可能发生的变化，然后为它加上 will-change 属性。 初始值auto适用元素all elements是否是继承属性否计算值as specifiedAnimation typediscrete",
		"grammar": ".sidebar {\n  will-change: transform;\n}\n",
		"initial value": "auto",
		"inherit": "否",
		"applicable elements": "all elements",
		"name": "will-change"
	},
	"word-break": {
		"desc": "CSS 属性 word-break 指定了怎样在单词内断行。",
		"grammar": "<p>1. <code>word-break: normal</code></p>\n<p class=\"normal narrow\">This is a long and\n Honorificabilitudinitatibus califragilisticexpialidocious Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu\n グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉</p>\n\n<p>2. <code>word-break: break-all</code></p>\n<p class=\"breakAll narrow\">This is a long and\n Honorificabilitudinitatibus califragilisticexpialidocious Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu\n グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉</p>\n\n<p>3. <code>word-break: keep-all</code></p>\n<p class=\"keepAll narrow\">This is a long and\n Honorificabilitudinitatibus califragilisticexpialidocious Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu\n グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉</p>\n\n<p>4. <code>word-break: break-word</code></p>\n<p class=\"breakWord narrow\">This is a long and\n  Honorificabilitudinitatibus califragilisticexpialidocious Taumatawhakatangihangakoauauotamateaturipukakapikimaungahoronukupokaiwhenuakitanatahu\n グレートブリテンおよび北アイルランド連合王国という言葉は本当に長い言葉</p>",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements",
		"name": "word-break"
	},
	"word-spacing": {
		"desc": "",
		"grammar": "#mozdiv1 {\n  word-spacing: 15px;\n}\n\n#mozdiv2 {\n  word-spacing: 5em;\n}",
		"initial value": "normal",
		"inherit": "yes",
		"applicable elements": "all elements. It also applies to ::first-letter and ::first-line.",
		"name": "word-spacing"
	},
	"writing-mode": {
		"desc": "writing-mode 属性定义了文本水平或垂直排布以及在块级元素中文本的行进方向。为整个文档设置书时，应在根元素上设置它（对于 HTML 文档应该在 html 元素上设置）此属性指定块流动方向，即块级容器堆叠的方向，以及行内内容在块级容器中的流动方向。因此，它也确定块级内容的顺序。",
		"grammar": "/* 关键值 */\nwriting-mode: horizontal-tb;\nwriting-mode: vertical-rl;\nwriting-mode: vertical-lr;\n\n/* 全局值 */\nwriting-mode: inherit;\nwriting-mode: initial;\nwriting-mode: unset;",
		"name": "writing-mode"
	},
	"z-index": {
		"desc": "z-index 属性设定了一个定位元素及其后代元素或 flex 项目的 z-order。当元素之间重叠的时候，z-index 较大的元素会覆盖较小的元素在上层进行显示。",
		"grammar": "/* 字符值 */\nz-index: auto;\n\n/* 整数值 */\nz-index: 0;\nz-index: 3;\nz-index: 289;\nz-index: -1;/* 使用负值降低优先级 */\n\n/* 全局值 */\nz-index: inherit;\nz-index: initial;\nz-index: unset;",
		"name": "z-index"
	}
}